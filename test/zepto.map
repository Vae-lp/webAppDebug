{"version":3,"sources":["webpack:////zepto.js","webpack:///webpack/bootstrap c7a03441a5a223fa17b3?c2d5","webpack:///./test/zepto.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_RESULT__","_typeof","Symbol","iterator","obj","constructor","global","factory","undefined","window","Zepto","type","String","class2type","toString","isFunction","value","isWindow","isDocument","nodeType","DOCUMENT_NODE","isObject","isPlainObject","Object","getPrototypeOf","prototype","likeArray","length","$","compact","array","filter","item","flatten","fn","concat","apply","dasherize","str","replace","toLowerCase","classRE","name","classCache","RegExp","maybeAddPx","cssNumber","defaultDisplay","nodeName","element","display","elementDisplay","document","createElement","body","appendChild","getComputedStyle","getPropertyValue","parentNode","removeChild","children","slice","map","childNodes","node","Z","dom","selector","i","len","this","extend","target","source","deep","key","isArray","filtered","nodes","funcArg","context","arg","idx","payload","setAttribute","removeAttribute","className","klass","svg","baseVal","deserializeValue","test","parseJSON","e","traverseNode","fun","classList","camelize","uniq","emptyArray","column-count","columns","font-weight","line-height","opacity","z-index","zoom","fragmentRE","singleTagRE","tagExpanderRE","rootNodeRE","capitalRE","methodAttributes","adjacencyOperators","table","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","readyRE","simpleSelectorRE","zepto","tempParent","propMap","tabindex","readonly","for","class","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","Array","object","matches","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","match","parent","temp","qsa","indexOf","chr","toUpperCase","fragment","html","properties","container","$1","innerHTML","each","attr","isZ","init","trim","find","ready","args","arguments","shift","forEach","found","maybeID","maybeClass","nameOnly","isSimple","getElementById","getElementsByClassName","getElementsByTagName","querySelectorAll","contains","documentElement","isEmptyObject","isNumeric","val","num","Number","isNaN","isFinite","inArray","elem","camelCase","uuid","support","expr","noop","elements","callback","values","push","grep","JSON","parse","split","reduce","sort","splice","toArray","el","readyState","addEventListener","get","size","remove","every","not","add","is","excludes","has","eq","first","last","result","$this","some","closest","collection","_","parents","ancestors","pluck","contents","contentDocument","siblings","child","empty","property","show","style","replaceWith","newContent","before","wrap","structure","func","clone","index","wrapAll","cloneNode","append","wrapInner","self","unwrap","hide","css","toggle","setting","prev","next","originHtml","text","newText","textContent","join","getAttribute","removeAttr","attribute","prop","removeProp","data","attrName","multiple","selected","offset","coordinates","coords","parentOffset","offsetParent","props","top","left","getBoundingClientRect","pageXOffset","pageYOffset","width","Math","round","height","computedStyle","removeProperty","cssText","hasClass","addClass","cls","newName","removeClass","toggleClass","when","names","scrollTop","hasScrollTop","scrollTo","scrollX","scrollLeft","hasScrollLeft","scrollY","position","parseFloat","detach","dimension","dimensionProperty","operator","operatorIndex","inside","argType","arr","copyByClone","nextSibling","firstChild","parentInDocument","insertBefore","src","ownerDocument","defaultView","zid","_zid","findHandlers","event","ns","matcher","matcherFor","handlers","handler","sel","parts","eventCapture","captureSetting","del","focusinSupported","focus","realEvent","hover","events","delegator","capture","set","related","relatedTarget","proxy","compatible","isImmediatePropagationStopped","_args","preventDefault","stopPropagation","removeEventListener","isDefaultPrevented","eventMethods","predicate","sourceMethod","returnTrue","returnFalse","timeStamp","Date","now","defaultPrevented","returnValue","getPreventDefault","createProxy","originalEvent","ignoreProperties","isString","specialEvents","blur","mouseenter","mouseleave","click","mousedown","mouseup","mousemove","proxyFn","unshift","TypeError","bind","on","unbind","off","one","stopImmediatePropagation","delegate","undelegate","live","die","autoRemove","evt","currentTarget","liveFired","trigger","Event","dispatchEvent","triggerHandler","createEvent","bubbles","initEvent","triggerAndReturn","eventName","triggerGlobal","settings","ajaxStart","active","ajaxStop","ajaxBeforeSend","xhr","beforeSend","ajaxSuccess","deferred","status","success","resolveWith","ajaxComplete","ajaxError","error","rejectWith","complete","ajaxDataFilter","dataFilter","mimeToDataType","mime","htmlType","jsonType","scriptTypeRE","xmlTypeRE","appendQuery","url","query","serializeData","options","processData","param","traditional","dataType","parseArguments","serialize","params","scope","hash","jsonpID","rscript","blankRE","originAnchor","href","location","ajaxJSONP","ajax","responseData","abortTimeout","_callbackName","jsonpCallback","callbackName","script","originalCallback","abort","errorType","promise","clearTimeout","head","timeout","setTimeout","ajaxSettings","XMLHttpRequest","accepts","json","xml","crossDomain","cache","urlAnchor","hashIndex","Deferred","protocol","host","hasPlaceholder","jsonp","headers","setHeader","nativeSetHeader","setRequestHeader","mimeType","overrideMimeType","contentType","onreadystatechange","getResponseHeader","responseType","response","responseText","eval","responseXML","statusText","async","open","username","password","xhrFields","send","post","getJSON","load","escape","encodeURIComponent","serializeArray","field","disabled","checked","elm","submit","nativeGetComputedStyle","pseudoElement"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAE,WACAE,GAAAJ,EACAK,QAAA,EAUA,OANAP,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,QAAA,EAGAF,EAAAD,QAvBA,GAAAD,KAqCA,OATAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,GAGAV,EAAA,KDMM,SAASI,EAAQD,EAASH,GAE/B,GAAIW,GAEAC,EAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,OAAS,eAAkBE,KE/C1O,SAASE,EAAQC,GAEVP,EAAO,WAAa,MAAOO,GAAQD,IAAnCV,KAAAJ,EAAAH,EAAAG,EAAAC,KAAAe,SAAAR,IAAAP,EAAAD,QAAAQ,KAGNS,OAAQ,SAASA,GACf,GAAIC,GAAS,WA6DT,QAASC,GAAKP,GACV,MAAc,OAAPA,EAAcQ,OAAOR,GAC5BS,EAAWC,EAASlB,KAAKQ,KAAS,SAGtC,QAASW,GAAWC,GAAS,MAAsB,YAAfL,EAAKK,GACzC,QAASC,GAASb,GAAW,MAAc,OAAPA,GAAeA,GAAOA,EAAIK,OAC9D,QAASS,GAAWd,GAAS,MAAc,OAAPA,GAAeA,EAAIe,UAAYf,EAAIgB,cACvE,QAASC,GAASjB,GAAW,MAAoB,UAAbO,EAAKP,GACzC,QAASkB,GAAclB,GACnB,MAAOiB,GAASjB,KAASa,EAASb,IAAQmB,OAAOC,eAAepB,IAAQmB,OAAOE,UAGnF,QAASC,GAAUtB,GACf,GAAIuB,KAAWvB,GAAO,UAAYA,IAAOA,EAAIuB,OACzChB,EAAOiB,EAAEjB,KAAKP,EAElB,OAAO,YAAcO,IAASM,EAASb,KAC/B,SAAWO,GAAmB,IAAXgB,GACD,gBAAVA,IAAsBA,EAAS,GAAMA,EAAS,IAAMvB,IAIxE,QAASyB,GAAQC,GAAS,MAAOC,GAAOnC,KAAKkC,EAAO,SAASE,GAAO,MAAe,OAARA,IAC3E,QAASC,GAAQH,GAAS,MAAOA,GAAMH,OAAS,EAAIC,EAAEM,GAAGC,OAAOC,SAAUN,GAASA,EAEnF,QAASO,GAAUC,GACf,MAAOA,GAAIC,QAAQ,MAAO,KACrBA,QAAQ,wBAAyB,SACjCA,QAAQ,oBAAqB,SAC7BA,QAAQ,KAAM,KACdC,cAIT,QAASC,GAAQC,GACb,MAAOA,KAAQC,GACXA,EAAWD,GAASC,EAAWD,GAAQ,GAAIE,QAAO,UAAYF,EAAO,WAG7E,QAASG,GAAWH,EAAM1B,GACtB,MAAwB,gBAATA,IAAsB8B,EAAUT,EAAUK,IAAyB1B,EAAfA,EAAQ,KAG/E,QAAS+B,GAAeC,GACpB,GAAIC,GAASC,CASb,OARKC,GAAeH,KAChBC,EAAUG,EAASC,cAAcL,GACjCI,EAASE,KAAKC,YAAYN,GAC1BC,EAAUM,iBAAiBP,EAAS,IAAIQ,iBAAiB,WACzDR,EAAQS,WAAWC,YAAYV,GACpB,QAAXC,IAAsBA,EAAU,SAChCC,EAAeH,GAAYE,GAExBC,EAAeH,GAG1B,QAASY,GAASX,GACd,MAAO,YAAcA,GACjBY,EAAMjE,KAAKqD,EAAQW,UACnBhC,EAAEkC,IAAIb,EAAQc,WAAY,SAASC,GAAO,GAAqB,GAAjBA,EAAK7C,SAAe,MAAO6C,KAGjF,QAASC,GAAEC,EAAKC,GACZ,GAAIC,GAAGC,EAAMH,EAAMA,EAAIvC,OAAS,CAChC,KAAKyC,EAAI,EAAGA,EAAIC,EAAKD,IAAKE,KAAKF,GAAKF,EAAIE,EACxCE,MAAK3C,OAAS0C,EACdC,KAAKH,SAAWA,GAAY,GAuGhC,QAASI,GAAOC,EAAQC,EAAQC,GAC5B,IAAKC,IAAOF,GACJC,IAASpD,EAAcmD,EAAOE,KAASC,GAAQH,EAAOE,MAClDrD,EAAcmD,EAAOE,MAAUrD,EAAckD,EAAOG,MACpDH,EAAOG,OACPC,GAAQH,EAAOE,MAAUC,GAAQJ,EAAOG,MACxCH,EAAOG,OACXJ,EAAOC,EAAOG,GAAMF,EAAOE,GAAMD,IAE5BD,EAAOE,KAASnE,IAAWgE,EAAOG,GAAOF,EAAOE,IAmCjE,QAASE,GAASC,EAAOX,GACrB,MAAmB,OAAZA,EAAmBvC,EAAEkD,GAASlD,EAAEkD,GAAO/C,OAAOoC,GAazD,QAASY,GAAQC,EAASC,EAAKC,EAAKC,GAChC,MAAOpE,GAAWkE,GAAOA,EAAIrF,KAAKoF,EAASE,EAAKC,GAAWF,EAG/D,QAASG,GAAapB,EAAMtB,EAAM1B,GACrB,MAATA,EAAgBgD,EAAKqB,gBAAgB3C,GAAQsB,EAAKoB,aAAa1C,EAAM1B,GAIzE,QAASsE,GAAUtB,EAAMhD,GACrB,GAAIuE,GAAQvB,EAAKsB,WAAa,GAC1BE,EAAQD,GAASA,EAAME,UAAYjF,CAEvC,OAAIQ,KAAUR,EAAkBgF,EAAMD,EAAME,QAAUF,OACtDC,EAAOD,EAAME,QAAUzE,EAAUgD,EAAKsB,UAAYtE,GAWtD,QAAS0E,GAAiB1E,GACtB,IACI,MAAOA,GACE,QAATA,GACW,SAATA,IACW,QAATA,EAAkB,MACbA,EAAQ,IAAMA,GAASA,EACpB,UAAU2E,KAAK3E,GAASY,EAAEgE,UAAU5E,GAChCA,GACVA,EACR,MAAM6E,GACJ,MAAO7E,IAmhBf,QAAS8E,GAAa9B,EAAM+B,GACxBA,EAAI/B,EACJ,KAAK,GAAII,GAAI,EAAGC,EAAML,EAAKD,WAAWpC,OAAQyC,EAAIC,EAAKD,IACnD0B,EAAa9B,EAAKD,WAAWK,GAAI2B,GA11BzC,GAAIvF,GAAWmE,EAAK/C,EAAGoE,EA2BnBC,EAAUC,EA3BoBC,KAAiBhE,EAASgE,EAAWhE,OAAQJ,EAASoE,EAAWpE,OAAQ8B,EAAQsC,EAAWtC,MAC1HT,EAAW3C,EAAO2C,SAClBD,KAAqBR,KACrBG,GAAcsD,eAAgB,EAAGC,QAAW,EAAGC,cAAe,EAAGC,cAAe,EAAEC,QAAW,EAAGC,UAAW,EAAGC,KAAQ,GACtHC,EAAa,qBACbC,EAAc,6BACdC,EAAgB,0EAChBC,EAAa,mBACbC,EAAY,WAGZC,GAAoB,MAAO,MAAO,OAAQ,OAAQ,OAAQ,QAAS,SAAU,UAE7EC,GAAuB,QAAS,UAAW,SAAU,UACrDC,EAAQ9D,EAASC,cAAc,SAC/B8D,EAAW/D,EAASC,cAAc,MAClC+D,GACIC,GAAMjE,EAASC,cAAc,SAC7BiE,MAASJ,EAAOK,MAASL,EAAOM,MAASN,EACzCO,GAAMN,EAAUO,GAAMP,EACtBQ,IAAKvE,EAASC,cAAc,QAEhCuE,EAAU,8BACVC,EAAmB,WACnBhH,KACAC,EAAWD,EAAWC,SACtBgH,KAEAC,EAAa3E,EAASC,cAAc,OACpC2E,IACIC,SAAY,WACZC,SAAY,WACZC,MAAO,UACPC,QAAS,YACTC,UAAa,YACbC,YAAe,cACfC,YAAe,cACfC,QAAW,UACXC,QAAW,UACXC,OAAU,SACVC,YAAe,cACfC,gBAAmB,mBAEvBhE,GAAUiE,MAAMjE,SACZ,SAASkE,GAAS,MAAOA,aAAkBD,OAq3BnD,OAn3BAf,GAAMiB,QAAU,SAAS9F,EAASkB,GAC9B,IAAKA,IAAalB,GAAgC,IAArBA,EAAQ9B,SAAgB,OAAO,CAC5D,IAAI6H,GAAkB/F,EAAQ8F,SAAW9F,EAAQgG,uBAC7ChG,EAAQiG,oBAAsBjG,EAAQkG,kBACtClG,EAAQ+F,eACZ,IAAIA,EAAiB,MAAOA,GAAgBpJ,KAAKqD,EAASkB,EAE1D,IAAIiF,GAAOC,EAASpG,EAAQS,WAAY4F,GAAQD,CAIhD,OAHIC,KAAOD,EAAStB,GAAYxE,YAAYN,GAC5CmG,GAAStB,EAAMyB,IAAIF,EAAQlF,GAAUqF,QAAQvG,GAC7CqG,GAAQvB,EAAWpE,YAAYV,GACxBmG,GA4BXnD,EAAW,SAAS3D,GAAM,MAAOA,GAAIC,QAAQ,UAAW,SAAS6G,EAAOK,GAAM,MAAOA,GAAMA,EAAIC,cAAgB,MAQ/GxD,EAAO,SAASpE,GAAQ,MAAOC,GAAOnC,KAAKkC,EAAO,SAASE,EAAMkD,GAAM,MAAOpD,GAAM0H,QAAQxH,IAASkD,KA0CrG4C,EAAM6B,SAAW,SAASC,EAAMlH,EAAMmH,GAClC,GAAI3F,GAAKY,EAAOgF,CAyBhB,OAtBIlD,GAAYjB,KAAKiE,KAAO1F,EAAMtC,EAAEwB,EAASC,cAAcT,OAAOmH,MAE7D7F,IACG0F,EAAKrH,UAASqH,EAAOA,EAAKrH,QAAQsE,EAAe,cACjDnE,IAASlC,IAAWkC,EAAOiE,EAAWhB,KAAKiE,IAAShH,OAAOmH,IACzDrH,IAAQ0E,KAAa1E,EAAO,KAElCoH,EAAY1C,EAAW1E,GACvBoH,EAAUE,UAAY,GAAKJ,EAC3B1F,EAAMtC,EAAEqI,KAAKpG,EAAMjE,KAAKkK,EAAU/F,YAAa,WAC3C+F,EAAUnG,YAAYW,SAI1BhD,EAAcuI,KACd/E,EAAQlD,EAAEsC,GACVtC,EAAEqI,KAAKJ,EAAY,SAASlF,EAAK3D,GACzBgG,EAAiBwC,QAAQ7E,MAAWG,EAAMH,GAAK3D,GAC9C8D,EAAMoF,KAAKvF,EAAK3D,MAItBkD,GAMX4D,EAAM7D,EAAI,SAASC,EAAKC,GACpB,MAAO,IAAIF,GAAEC,EAAKC,IAKtB2D,EAAMqC,IAAM,SAASrB,GACjB,MAAOA,aAAkBhB,GAAM7D,GAOnC6D,EAAMsC,KAAO,SAASjG,EAAUa,GAC5B,GAAId,EAEJ,KAAKC,EAAU,MAAO2D,GAAM7D,GAEvB,IAAuB,gBAAZE,GAKZ,GAJAA,EAAWA,EAASkG,OAID,KAAflG,EAAS,IAAawC,EAAWhB,KAAKxB,GACtCD,EAAM4D,EAAM6B,SAASxF,EAAUvB,OAAOmH,GAAI/E,GAAUb,EAAW,SAG9D,IAAIa,IAAYxE,EAAW,MAAOoB,GAAEoD,GAASsF,KAAKnG,EAElDD,GAAM4D,EAAMyB,IAAInG,EAAUe,OAG9B,IAAIpD,EAAWoD,GAAW,MAAOvC,GAAEwB,GAAUmH,MAAMpG,EAEnD,IAAI2D,EAAMqC,IAAIhG,GAAW,MAAOA,EAGjC,IAAIS,GAAQT,GAAWD,EAAMrC,EAAQsC,OAEhC,IAAI9C,EAAS8C,GACdD,GAAOC,GAAWA,EAAW,SAE5B,IAAIwC,EAAWhB,KAAKxB,GACrBD,EAAM4D,EAAM6B,SAASxF,EAASkG,OAAQzH,OAAOmH,GAAI/E,GAAUb,EAAW,SAGrE,IAAIa,IAAYxE,EAAW,MAAOoB,GAAEoD,GAASsF,KAAKnG,EAElDD,GAAM4D,EAAMyB,IAAInG,EAAUe,IAGnC,MAAO2D,GAAM7D,EAAEC,EAAKC,IAOxBvC,EAAI,SAASuC,EAAUa,GACnB,MAAO8C,GAAMsC,KAAKjG,EAAUa,IAiBhCpD,EAAE2C,OAAS,SAASC,GAChB,GAAIE,GAAM8F,EAAO3G,EAAMjE,KAAK6K,UAAW,EAMvC,OALqB,iBAAVjG,KACPE,EAAOF,EACPA,EAASgG,EAAKE,SAElBF,EAAKG,QAAQ,SAAS1F,GAAMV,EAAOC,EAAQS,EAAKP,KACzCF,GAMXsD,EAAMyB,IAAM,SAAStG,EAASkB,GAC1B,GAAIyG,GACAC,EAAyB,KAAf1G,EAAS,GACnB2G,GAAcD,GAA0B,KAAf1G,EAAS,GAClC4G,EAAWF,GAAWC,EAAa3G,EAASN,MAAM,GAAKM,EACvD6G,EAAWnD,EAAiBlC,KAAKoF,EACrC,OAAQ9H,GAAQgI,gBAAkBD,GAAYH,GACvCD,EAAQ3H,EAAQgI,eAAeF,KAAcH,MAC1B,IAArB3H,EAAQ9B,UAAuC,IAArB8B,EAAQ9B,UAAuC,KAArB8B,EAAQ9B,YACzD0C,EAAMjE,KACFoL,IAAaH,GAAW5H,EAAQiI,uBAC5BJ,EAAa7H,EAAQiI,uBAAuBH,GACxC9H,EAAQkI,qBAAqBhH,GACjClB,EAAQmI,iBAAiBjH,KAQ7CvC,EAAEyJ,SAAWjI,EAASkI,gBAAgBD,SAClC,SAAShC,EAAQrF,GACb,MAAOqF,KAAWrF,GAAQqF,EAAOgC,SAASrH,IAE9C,SAASqF,EAAQrF,GACb,KAAOA,IAASA,EAAOA,EAAKN,aACxB,GAAIM,IAASqF,EAAQ,OAAO,CAChC,QAAO,GA2CfzH,EAAEjB,KAAOA,EACTiB,EAAEb,WAAaA,EACfa,EAAEX,SAAWA,EACbW,EAAEgD,QAAUA,GACZhD,EAAEN,cAAgBA,EAElBM,EAAE2J,cAAgB,SAASnL,GACvB,GAAIsC,EACJ,KAAKA,IAAQtC,GAAK,OAAO,CACzB,QAAO,GAGXwB,EAAE4J,UAAY,SAASC,GACnB,GAAIC,GAAMC,OAAOF,GAAM9K,EAAA,mBAAc8K,GAAd,YAAAxL,EAAcwL,EACrC,OAAc,OAAPA,GAAuB,WAAR9K,IACT,UAARA,GAAoB8K,EAAI9J,UACxBiK,MAAMF,IAAQG,SAASH,KAAQ,GAGxC9J,EAAEkK,QAAU,SAASC,EAAMjK,EAAOsC,GAC9B,MAAO+B,GAAWqD,QAAQ5J,KAAKkC,EAAOiK,EAAM3H,IAGhDxC,EAAEoK,UAAY/F,EACdrE,EAAEyI,KAAO,SAAS/H,GACd,MAAc,OAAPA,EAAc,GAAK1B,OAAOa,UAAU4I,KAAKzK,KAAK0C,IAIzDV,EAAEqK,KAAO,EACTrK,EAAEsK,WACFtK,EAAEuK,QACFvK,EAAEwK,KAAO,aAETxK,EAAEkC,IAAM,SAASuI,EAAUC,GACvB,GAAItL,GAAoBoD,EAAGO,EAAhB4H,IACX,IAAI7K,EAAU2K,GACV,IAAKjI,EAAI,EAAGA,EAAIiI,EAAS1K,OAAQyC,IAC7BpD,EAAQsL,EAASD,EAASjI,GAAIA,GACjB,MAATpD,GAAeuL,EAAOC,KAAKxL,OAGnC,KAAK2D,IAAO0H,GACRrL,EAAQsL,EAASD,EAAS1H,GAAMA,GACnB,MAAT3D,GAAeuL,EAAOC,KAAKxL,EAEvC,OAAOiB,GAAQsK,IAGnB3K,EAAEqI,KAAO,SAASoC,EAAUC,GACxB,GAAIlI,GAAGO,CACP,IAAIjD,EAAU2K,IACV,IAAKjI,EAAI,EAAGA,EAAIiI,EAAS1K,OAAQyC,IAC7B,GAAIkI,EAAS1M,KAAKyM,EAASjI,GAAIA,EAAGiI,EAASjI,OAAQ,EAAO,MAAOiI,OAErE,KAAK1H,IAAO0H,GACR,GAAIC,EAAS1M,KAAKyM,EAAS1H,GAAMA,EAAK0H,EAAS1H,OAAU,EAAO,MAAO0H,EAG/E,OAAOA,IAGXzK,EAAE6K,KAAO,SAASJ,EAAUC,GACxB,MAAOvK,GAAOnC,KAAKyM,EAAUC,IAG7B7L,EAAOiM,OAAM9K,EAAEgE,UAAY8G,KAAKC,OAGpC/K,EAAEqI,KAAK,gEAAgE2C,MAAM,KAAM,SAASxI,EAAG1B,GAC3F7B,EAAY,WAAa6B,EAAO,KAAQA,EAAKF,gBAKjDZ,EAAEM,IACE7B,YAAayH,EAAM7D,EACnBtC,OAAQ,EAIRgJ,QAASxE,EAAWwE,QACpBkC,OAAQ1G,EAAW0G,OACnBL,KAAMrG,EAAWqG,KACjBM,KAAM3G,EAAW2G,KACjBC,OAAQ5G,EAAW4G,OACnBvD,QAASrD,EAAWqD,QACpBrH,OAAQ,WACJ,GAAIiC,GAAGpD,EAAOwJ,IACd,KAAKpG,EAAI,EAAGA,EAAIqG,UAAU9I,OAAQyC,IAC9BpD,EAAQyJ,UAAUrG,GAClBoG,EAAKpG,GAAK0D,EAAMqC,IAAInJ,GAASA,EAAMgM,UAAYhM,CAEnD,OAAOmB,GAAOC,MAAM0F,EAAMqC,IAAI7F,MAAQA,KAAK0I,UAAY1I,KAAMkG,IAKjE1G,IAAK,SAAS5B,GACV,MAAON,GAAEA,EAAEkC,IAAIQ,KAAM,SAAS2I,EAAI7I,GAAI,MAAOlC,GAAGtC,KAAKqN,EAAI7I,EAAG6I,OAEhEpJ,MAAO,WACH,MAAOjC,GAAEiC,EAAMzB,MAAMkC,KAAMmG,aAG/BF,MAAO,SAAS+B,GAKZ,MAFI1E,GAAQjC,KAAKvC,EAAS8J,aAAe9J,EAASE,KAAMgJ,EAAS1K,GAC5DwB,EAAS+J,iBAAiB,mBAAoB,WAAYb,EAAS1K,KAAM,GACvE0C,MAEX8I,IAAK,SAASlI,GACV,MAAOA,KAAQ1E,EAAYqD,EAAMjE,KAAK0E,MAAQA,KAAKY,GAAO,EAAIA,EAAMA,EAAMZ,KAAK3C,SAEnFqL,QAAS,WAAY,MAAO1I,MAAK8I,OACjCC,KAAM,WACF,MAAO/I,MAAK3C,QAEhB2L,OAAQ,WACJ,MAAOhJ,MAAK2F,KAAK,WACU,MAAnB3F,KAAKZ,YACLY,KAAKZ,WAAWC,YAAYW,SAGxC2F,KAAM,SAASqC,GAIX,MAHAnG,GAAWoH,MAAM3N,KAAK0E,KAAM,SAAS2I,EAAI/H,GACrC,MAAOoH,GAAS1M,KAAKqN,EAAI/H,EAAK+H,MAAQ,IAEnC3I,MAEXvC,OAAQ,SAASoC,GACb,MAAIpD,GAAWoD,GAAkBG,KAAKkJ,IAAIlJ,KAAKkJ,IAAIrJ,IAC5CvC,EAAEG,EAAOnC,KAAK0E,KAAM,SAASrB,GAChC,MAAO6E,GAAMiB,QAAQ9F,EAASkB,OAGtCsJ,IAAK,SAAStJ,EAASa,GACnB,MAAOpD,GAAEsE,EAAK5B,KAAKnC,OAAOP,EAAEuC,EAASa,OAEzC0I,GAAI,SAASvJ,GACT,MAAOG,MAAK3C,OAAS,GAAKmG,EAAMiB,QAAQzE,KAAK,GAAIH,IAErDqJ,IAAK,SAASrJ,GACV,GAAIW,KACJ,IAAI/D,EAAWoD,IAAaA,EAASvE,OAASY,EAC1C8D,KAAK2F,KAAK,SAAS/E,GACVf,EAASvE,KAAK0E,KAAKY,IAAMJ,EAAM0H,KAAKlI,YAE5C,CACD,GAAIqJ,GAA8B,gBAAZxJ,GAAuBG,KAAKvC,OAAOoC,GACpDzC,EAAUyC,IAAapD,EAAWoD,EAASnC,MAAS6B,EAAMjE,KAAKuE,GAAYvC,EAAEuC,EAClFG,MAAKqG,QAAQ,SAASsC,GACdU,EAASnE,QAAQyD,GAAM,GAAGnI,EAAM0H,KAAKS,KAGjD,MAAOrL,GAAEkD,IAEb8I,IAAK,SAASzJ,GACV,MAAOG,MAAKvC,OAAO,WACf,MAAOV,GAAS8C,GACZvC,EAAEyJ,SAAS/G,KAAMH,GACjBvC,EAAE0C,MAAMgG,KAAKnG,GAAUkJ,UAGnCQ,GAAI,SAAS3I,GACT,MAAOA,QAAaZ,KAAKT,MAAMqB,GAAOZ,KAAKT,MAAMqB,GAAOA,EAAM,IAElE4I,MAAO,WACH,GAAIb,GAAK3I,KAAK,EACd,OAAO2I,KAAO5L,EAAS4L,GAAMA,EAAKrL,EAAEqL,IAExCc,KAAM,WACF,GAAId,GAAK3I,KAAKA,KAAK3C,OAAS,EAC5B,OAAOsL,KAAO5L,EAAS4L,GAAMA,EAAKrL,EAAEqL,IAExC3C,KAAM,SAASnG,GACX,GAAI6J,GAAQC,EAAQ3J,IAWpB,OARI0J,GAFC7J,EACuB,WAAnB,mBAAOA,GAAP,YAAAlE,EAAOkE,IACHvC,EAAEuC,GAAUpC,OAAO,WACxB,GAAIiC,GAAOM,IACX,OAAO6B,GAAW+H,KAAKtO,KAAKqO,EAAO,SAAS5E,GACxC,MAAOzH,GAAEyJ,SAAShC,EAAQrF,OAGd,GAAfM,KAAK3C,OAAsBC,EAAEkG,EAAMyB,IAAIjF,KAAK,GAAIH,IAC3CG,KAAKR,IAAI,WAAY,MAAOgE,GAAMyB,IAAIjF,KAAMH,KATlCvC,KAY5BuM,QAAS,SAAShK,EAAUa,GACxB,GAAIF,MAAYsJ,EAAgC,WAAnB,mBAAOjK,GAAP,YAAAlE,EAAOkE,KAAwBvC,EAAEuC,EAM9D,OALAG,MAAK2F,KAAK,SAASoE,EAAGrK,GAClB,KAAOA,KAAUoK,EAAaA,EAAW5E,QAAQxF,IAAS,EAAI8D,EAAMiB,QAAQ/E,EAAMG,KAC9EH,EAAOA,IAASgB,IAAY9D,EAAW8C,IAASA,EAAKN,UACrDM,IAAQc,EAAM0E,QAAQxF,GAAQ,GAAGc,EAAM0H,KAAKxI,KAE7CpC,EAAEkD,IAEbwJ,QAAS,SAASnK,GAEd,IADA,GAAIoK,MAAgBzJ,EAAQR,KACrBQ,EAAMnD,OAAS,GAClBmD,EAAQlD,EAAEkC,IAAIgB,EAAO,SAASd,GAC1B,IAAKA,EAAOA,EAAKN,cAAgBxC,EAAW8C,IAASuK,EAAU/E,QAAQxF,GAAQ,EAE3E,MADAuK,GAAU/B,KAAKxI,GACRA,GAGnB,OAAOa,GAAS0J,EAAWpK,IAE/BkF,OAAQ,SAASlF,GACb,MAAOU,GAASqB,EAAK5B,KAAKkK,MAAM,eAAgBrK,IAEpDP,SAAU,SAASO,GACf,MAAOU,GAASP,KAAKR,IAAI,WAAY,MAAOF,GAASU,QAAUH,IAEnEsK,SAAU,WACN,MAAOnK,MAAKR,IAAI,WAAa,MAAOQ,MAAKoK,iBAAmB7K,EAAMjE,KAAK0E,KAAKP,eAEhF4K,SAAU,SAASxK,GACf,MAAOU,GAASP,KAAKR,IAAI,SAASM,EAAG6I,GACjC,MAAOlL,GAAOnC,KAAKgE,EAASqJ,EAAGvJ,YAAa,SAASkL,GAAQ,MAAOA,KAAQ3B,MAC5E9I,IAER0K,MAAO,WACH,MAAOvK,MAAK2F,KAAK,WAAY3F,KAAK0F,UAAY,MAGlDwE,MAAO,SAASM,GACZ,MAAOlN,GAAEkC,IAAIQ,KAAM,SAAS2I,GAAK,MAAOA,GAAG6B,MAE/CC,KAAM,WACF,MAAOzK,MAAK2F,KAAK,WACS,QAAtB3F,KAAK0K,MAAM9L,UAAsBoB,KAAK0K,MAAM9L,QAAU,IACQ,QAA1DM,iBAAiBc,KAAM,IAAIb,iBAAiB,aAC5Ca,KAAK0K,MAAM9L,QAAUH,EAAeuB,KAAKtB,cAGrDiM,YAAa,SAASC,GAClB,MAAO5K,MAAK6K,OAAOD,GAAY5B,UAEnC8B,KAAM,SAASC,GACX,GAAIC,GAAOvO,EAAWsO,EACtB,IAAI/K,KAAK,KAAOgL,EACZ,GAAIpL,GAAQtC,EAAEyN,GAAWjC,IAAI,GACzBmC,EAAQrL,EAAIR,YAAcY,KAAK3C,OAAS,CAEhD,OAAO2C,MAAK2F,KAAK,SAASuF,GACtB5N,EAAE0C,MAAMmL,QACJH,EAAOD,EAAUzP,KAAK0E,KAAMkL,GACxBD,EAAQrL,EAAIwL,WAAU,GAAQxL,MAI9CuL,QAAS,SAASJ,GACd,GAAI/K,KAAK,GAAI,CACT1C,EAAE0C,KAAK,IAAI6K,OAAOE,EAAYzN,EAAEyN,GAGhC,KAFA,GAAIzL,IAEIA,EAAWyL,EAAUzL,YAAYjC,QAAQ0N,EAAYzL,EAASkK,OACtElM,GAAEyN,GAAWM,OAAOrL,MAExB,MAAOA,OAEXsL,UAAW,SAASP,GAChB,GAAIC,GAAOvO,EAAWsO,EACtB,OAAO/K,MAAK2F,KAAK,SAASuF,GACtB,GAAIK,GAAOjO,EAAE0C,MAAOmK,EAAWoB,EAAKpB,WAChCvK,EAAOoL,EAAOD,EAAUzP,KAAK0E,KAAMkL,GAASH,CAChDZ,GAAS9M,OAAS8M,EAASgB,QAAQvL,GAAO2L,EAAKF,OAAOzL,MAG9D4L,OAAQ,WAIJ,MAHAxL,MAAK+E,SAASY,KAAK,WACfrI,EAAE0C,MAAM2K,YAAYrN,EAAE0C,MAAMV,cAEzBU,MAEXiL,MAAO,WACH,MAAOjL,MAAKR,IAAI,WAAY,MAAOQ,MAAKoL,WAAU,MAEtDK,KAAM,WACF,MAAOzL,MAAK0L,IAAI,UAAW,SAE/BC,OAAQ,SAASC,GACb,MAAO5L,MAAK2F,KAAK,WACb,GAAIgD,GAAKrL,EAAE0C,OACL4L,IAAY1P,EAAiC,QAArByM,EAAG+C,IAAI,WAAuBE,GAAWjD,EAAG8B,OAAS9B,EAAG8C,UAG9FI,KAAM,SAAShM,GAAW,MAAOvC,GAAE0C,KAAKkK,MAAM,2BAA2BzM,OAAOoC,GAAY,MAC5FiM,KAAM,SAASjM,GAAW,MAAOvC,GAAE0C,KAAKkK,MAAM,uBAAuBzM,OAAOoC,GAAY,MACxFyF,KAAM,SAASA,GACX,MAAO,KAAKa,WACRnG,KAAK2F,KAAK,SAAS/E,GACf,GAAImL,GAAa/L,KAAK0F,SACtBpI,GAAE0C,MAAMuK,QAAQc,OAAQ5K,EAAQT,KAAMsF,EAAM1E,EAAKmL,MAEpD,IAAK/L,MAAOA,KAAK,GAAG0F,UAAY,MAEzCsG,KAAM,SAASA,GACX,MAAO,KAAK7F,WACRnG,KAAK2F,KAAK,SAAS/E,GACf,GAAIqL,GAAUxL,EAAQT,KAAMgM,EAAMpL,EAAKZ,KAAKkM,YAC5ClM,MAAKkM,YAAyB,MAAXD,EAAkB,GAAK,GAAGA,IAEhD,IAAKjM,MAAOA,KAAKkK,MAAM,eAAeiC,KAAK,IAAM,MAE1DvG,KAAM,SAASxH,EAAM1B,GACjB,GAAIgN,EACJ,OAAuB,gBAARtL,IAAsB,IAAK+H,WAEtCnG,KAAK2F,KAAK,SAAS/E,GACf,GAAsB,IAAlBZ,KAAKnD,SACT,GAAIE,EAASqB,GAAO,IAAKiC,IAAOjC,GAAM0C,EAAad,KAAMK,EAAKjC,EAAKiC,QAC9DS,GAAad,KAAM5B,EAAMqC,EAAQT,KAAMtD,EAAOkE,EAAKZ,KAAKoM,aAAahO,OAJ7E,IAAK4B,OAA4B,GAApBA,KAAK,GAAGnD,UAA0D,OAAxC6M,EAAS1J,KAAK,GAAGoM,aAAahO,IAAiBsL,EAASxN,GAOxGmQ,WAAY,SAASjO,GACjB,MAAO4B,MAAK2F,KAAK,WAA8B,IAAlB3F,KAAKnD,UAAkBuB,EAAKkK,MAAM,KAAKjC,QAAQ,SAASiG,GACjFxL,EAAad,KAAMsM,IACpBtM,SAEPuM,KAAM,SAASnO,EAAM1B,GAEjB,MADA0B,GAAOsF,GAAQtF,IAASA,EAChB,IAAK+H,WACTnG,KAAK2F,KAAK,SAAS/E,GACfZ,KAAK5B,GAAQqC,EAAQT,KAAMtD,EAAOkE,EAAKZ,KAAK5B,MAE/C4B,KAAK,IAAMA,KAAK,GAAG5B,IAE5BoO,WAAY,SAASpO,GAEjB,MADAA,GAAOsF,GAAQtF,IAASA,EACjB4B,KAAK2F,KAAK,iBAAmB3F,MAAK5B,MAE7CqO,KAAM,QAAAA,IAASrO,EAAM1B,GACjB,GAAIgQ,GAAW,QAAUtO,EAAKH,QAAQwE,EAAW,OAAOvE,cAEpDuO,GAAQ,IAAKtG,WACbnG,KAAK4F,KAAK8G,EAAUhQ,GACpBsD,KAAK4F,KAAK8G,EAEd,OAAgB,QAATD,GAAgBrL,EAAiBqL,IAAQvQ,GAEpDiL,IAAK,SAASzK,GACV,MAAI,KAAKyJ,YACQ,MAATzJ,IAAeA,EAAQ,IACpBsD,KAAK2F,KAAK,SAAS/E,GACtBZ,KAAKtD,MAAQ+D,EAAQT,KAAMtD,EAAOkE,EAAKZ,KAAKtD,UAGzCsD,KAAK,KAAOA,KAAK,GAAG2M,SACnBrP,EAAE0C,KAAK,IAAIgG,KAAK,UAAUvI,OAAO,WAAY,MAAOuC,MAAK4M,WAAY1C,MAAM,SAC3ElK,KAAK,GAAGtD,QAGxBmQ,OAAQ,SAASC,GACb,GAAIA,EAAa,MAAO9M,MAAK2F,KAAK,SAASuF,GACvC,GAAIvB,GAAQrM,EAAE0C,MACV+M,EAAStM,EAAQT,KAAM8M,EAAa5B,EAAOvB,EAAMkD,UACjDG,EAAerD,EAAMsD,eAAeJ,SACpCK,GACIC,IAAMJ,EAAOI,IAAOH,EAAaG,IACjCC,KAAML,EAAOK,KAAOJ,EAAaI,KAGZ,WAAzBzD,EAAM+B,IAAI,cAAyBwB,EAAA,SAAoB,YAC3DvD,EAAM+B,IAAIwB,IAEd,KAAKlN,KAAK3C,OAAQ,MAAO,KACzB,IAAIyB,EAASkI,kBAAoBhH,KAAK,KAAO1C,EAAEyJ,SAASjI,EAASkI,gBAAiBhH,KAAK,IACnF,OAAQmN,IAAK,EAAGC,KAAM,EAC1B,IAAItR,GAAMkE,KAAK,GAAGqN,uBAClB,QACID,KAAMtR,EAAIsR,KAAOjR,EAAOmR,YACxBH,IAAKrR,EAAIqR,IAAMhR,EAAOoR,YACtBC,MAAOC,KAAKC,MAAM5R,EAAI0R,OACtBG,OAAQF,KAAKC,MAAM5R,EAAI6R,UAG/BjC,IAAK,QAAAA,IAASlB,EAAU9N,GACpB,GAAIyJ,UAAU9I,OAAS,EAAG,CACtB,GAAIsB,GAAUqB,KAAK,EACnB,IAAuB,gBAAZwK,GAAsB,CAC7B,IAAK7L,EAAS,MACd,OAAOA,GAAQ+L,MAAM/I,EAAS6I,KAActL,iBAAiBP,EAAS,IAAIQ,iBAAiBqL,GACxF,GAAIlK,GAAQkK,GAAW,CAC1B,IAAK7L,EAAS,MACd,IAAIuO,MACAU,EAAgB1O,iBAAiBP,EAAS,GAI9C,OAHArB,GAAEqI,KAAK6E,EAAU,SAAST,EAAGwC,GACzBW,EAAMX,GAAS5N,EAAQ+L,MAAM/I,EAAS4K,KAAUqB,EAAczO,iBAAiBoN,KAE5EW,GAIf,GAAIxB,IAAM,EACV,IAAsB,UAAlBrP,EAAKmO,GACA9N,GAAmB,IAAVA,EAGVgP,GAAM3N,EAAUyM,GAAY,IAAMjM,EAAWiM,EAAU9N,GAFvDsD,KAAK2F,KAAK,WAAY3F,KAAK0K,MAAMmD,eAAe9P,EAAUyM,UAI9D,KAAKnK,IAAOmK,GACHA,EAASnK,IAA0B,IAAlBmK,EAASnK,GAG3BqL,IAAO3N,EAAUsC,GAAO,IAAM9B,EAAW8B,EAAKmK,EAASnK,IAAQ,IAF/DL,KAAK2F,KAAK,WAAY3F,KAAK0K,MAAMmD,eAAe9P,EAAUsC,KAKtE,OAAOL,MAAK2F,KAAK,WAAY3F,KAAK0K,MAAMoD,SAAW,IAAMpC,MAE7DR,MAAO,SAASvM,GACZ,MAAOA,GAAUqB,KAAKkF,QAAQ5H,EAAEqB,GAAS,IAAMqB,KAAK+E,SAASzF,WAAW4F,QAAQlF,KAAK,KAEzF+N,SAAU,SAAS3P,GACf,QAAKA,GACEyD,EAAW+H,KAAKtO,KAAK0E,KAAM,SAAS2I,GACvC,MAAO3I,MAAKqB,KAAKL,EAAU2H,KAC5BxK,EAAQC,KAEf4P,SAAU,SAAS5P,GACf,MAAKA,GACE4B,KAAK2F,KAAK,SAAS/E,GACtB,GAAM,aAAeZ,MAArB,CACA0B,IACA,IAAIuM,GAAMjN,EAAUhB,MAAOkO,EAAUzN,EAAQT,KAAM5B,EAAMwC,EAAKqN,EAC9DC,GAAQ5F,MAAM,QAAQjC,QAAQ,SAASpF,GAC9B3D,EAAE0C,MAAM+N,SAAS9M,IAAQS,EAAUwG,KAAKjH,IAC9CjB,MACH0B,EAAUrE,QAAU2D,EAAUhB,KAAMiO,GAAOA,EAAM,IAAM,IAAMvM,EAAUyK,KAAK,SAR9DnM,MAWtBmO,YAAa,SAAS/P,GAClB,MAAO4B,MAAK2F,KAAK,SAAS/E,GACtB,GAAM,aAAeZ,MAArB,CACA,GAAI5B,IAASlC,EAAW,MAAO8E,GAAUhB,KAAM,GAC/C0B,GAAYV,EAAUhB,MACtBS,EAAQT,KAAM5B,EAAMwC,EAAKc,GAAW4G,MAAM,QAAQjC,QAAQ,SAASpF,GAC/DS,EAAYA,EAAUzD,QAAQE,EAAQ8C,GAAQ,OAElDD,EAAUhB,KAAM0B,EAAUqE,YAGlCqI,YAAa,SAAShQ,EAAMiQ,GACxB,MAAKjQ,GACE4B,KAAK2F,KAAK,SAAS/E,GACtB,GAAI+I,GAAQrM,EAAE0C,MAAOsO,EAAQ7N,EAAQT,KAAM5B,EAAMwC,EAAKI,EAAUhB,MAChEsO,GAAMhG,MAAM,QAAQjC,QAAQ,SAASpF,IAChCoN,IAASnS,GAAayN,EAAMoE,SAAS9M,GAASoN,GAC3C1E,EAAMqE,SAAS/M,GAAS0I,EAAMwE,YAAYlN,OALpCjB,MAStBuO,UAAW,SAAS7R,GAChB,GAAKsD,KAAK3C,OAAV,CACA,GAAImR,GAAe,aAAexO,MAAK,EACvC,OAAItD,KAAUR,EAAkBsS,EAAexO,KAAK,GAAGuO,UAAYvO,KAAK,GAAGuN,YACpEvN,KAAK2F,KAAK6I,EACb,WAAYxO,KAAKuO,UAAY7R,GAC7B,WAAYsD,KAAKyO,SAASzO,KAAK0O,QAAShS,OAEhDiS,WAAY,SAASjS,GACjB,GAAKsD,KAAK3C,OAAV,CACA,GAAIuR,GAAgB,cAAgB5O,MAAK,EACzC,OAAItD,KAAUR,EAAkB0S,EAAgB5O,KAAK,GAAG2O,WAAa3O,KAAK,GAAGsN,YACtEtN,KAAK2F,KAAKiJ,EACb,WAAY5O,KAAK2O,WAAajS,GAC9B,WAAYsD,KAAKyO,SAAS/R,EAAOsD,KAAK6O,aAE9CC,SAAU,WACN,GAAK9O,KAAK3C,OAAV,CAEA,GAAIoK,GAAOzH,KAAK,GAEZiN,EAAejN,KAAKiN,eAEpBJ,EAAe7M,KAAK6M,SACpBG,EAAexK,EAAWnB,KAAK4L,EAAa,GAAGvO,WAAcyO,IAAK,EAAGC,KAAM,GAAMH,EAAaJ,QAalG,OARAA,GAAOM,KAAQ4B,WAAYzR,EAAEmK,GAAMiE,IAAI,gBAAmB,EAC1DmB,EAAOO,MAAQ2B,WAAYzR,EAAEmK,GAAMiE,IAAI,iBAAoB,EAG3DsB,EAAaG,KAAQ4B,WAAYzR,EAAE2P,EAAa,IAAIvB,IAAI,sBAAyB,EACjFsB,EAAaI,MAAQ2B,WAAYzR,EAAE2P,EAAa,IAAIvB,IAAI,uBAA0B,GAI9EyB,IAAMN,EAAOM,IAAOH,EAAaG,IACjCC,KAAMP,EAAOO,KAAOJ,EAAaI,QAGzCH,aAAc,WACV,MAAOjN,MAAKR,IAAI,WAEZ,IADA,GAAIuF,GAAS/E,KAAKiN,cAAgBnO,EAASE,KACpC+F,IAAWvC,EAAWnB,KAAK0D,EAAOrG,WAA0C,UAA7BpB,EAAEyH,GAAQ2G,IAAI,aAChE3G,EAASA,EAAOkI,YACpB,OAAOlI,OAMnBzH,EAAEM,GAAGoR,OAAS1R,EAAEM,GAAGoL,QAGjB,QAAS,UAAU3C,QAAQ,SAAS4I,GAClC,GAAIC,GACAD,EAAUhR,QAAQ,IAAK,SAAS1C,GAAI,MAAOA,GAAE,GAAG6J,eAEpD9H,GAAEM,GAAGqR,GAAa,SAASvS,GACvB,GAAImQ,GAAQlE,EAAK3I,KAAK,EACtB,OAAItD,KAAUR,EAAkBS,EAASgM,GAAMA,EAAG,QAAUuG,GACxDtS,EAAW+L,GAAMA,EAAG3B,gBAAgB,SAAWkI,IAC9CrC,EAAS7M,KAAK6M,WAAaA,EAAOoC,GAC3BjP,KAAK2F,KAAK,SAAS/E,GAC3B+H,EAAKrL,EAAE0C,MACP2I,EAAG+C,IAAIuD,EAAWxO,EAAQT,KAAMtD,EAAOkE,EAAK+H,EAAGsG,YAa3DtM,EAAmB0D,QAAQ,SAAS8I,EAAUC,GAC1C,GAAIC,GAASD,EAAgB,CAE7B9R,GAAEM,GAAGuR,GAAY,WAEb,GAAIG,GAcAvK,EAdSvE,EAAQlD,EAAEkC,IAAI2G,UAAW,SAASxF,GACvC,GAAI4O,KAEJ,OADAD,GAAUjT,EAAKsE,GACA,SAAX2O,GACA3O,EAAI0F,QAAQ,SAASsC,GACjB,MAAIA,GAAG9L,WAAaX,EAAkBqT,EAAIrH,KAAKS,GACtCrL,EAAEkG,MAAMqC,IAAI8C,GAAY4G,EAAMA,EAAI1R,OAAO8K,EAAGG,YACrDyG,EAAMA,EAAI1R,OAAO2F,EAAM6B,SAASsD,OAE7B4G,GAEO,UAAXD,GAA8B,MAAP3O,EAC1BA,EAAM6C,EAAM6B,SAAS1E,KAErB6O,EAAcxP,KAAK3C,OAAS,CACxC,OAAImD,GAAMnD,OAAS,EAAU2C,KAEtBA,KAAK2F,KAAK,SAASoE,EAAG7J,GACzB6E,EAASsK,EAASnP,EAASA,EAAOd,WAGlCc,EAA0B,GAAjBkP,EAAqBlP,EAAOuP,YAChB,GAAjBL,EAAqBlP,EAAOwP,WACP,GAAjBN,EAAqBlP,EACjB,IAEZ,IAAIyP,GAAmBrS,EAAEyJ,SAASjI,EAASkI,gBAAiBjC,EAE5DvE,GAAM6F,QAAQ,SAAS3G,GACnB,GAAI8P,EAAa9P,EAAOA,EAAK0L,WAAU,OAClC,KAAKrG,EAAQ,MAAOzH,GAAEoC,GAAMsJ,QAEjCjE,GAAO6K,aAAalQ,EAAMQ,GACtByP,GAAkBnO,EAAa9B,EAAM,SAASiJ,GAC9C,KAAmB,MAAfA,EAAGjK,UAAkD,WAA9BiK,EAAGjK,SAAS0G,eACjCuD,EAAGtM,MAAoB,oBAAZsM,EAAGtM,MAAgCsM,EAAGkH,KAAI,CACvD,GAAI3P,GAASyI,EAAGmH,cAAgBnH,EAAGmH,cAAcC,YAAc5T,CAC/D+D,GAAA,KAAe5E,KAAK4E,EAAQyI,EAAGjD,mBAWnDpI,EAAEM,GAAGyR,EAASF,EAAS,KAAO,UAAUC,EAAgB,SAAW,UAAY,SAAS9J,GAEpF,MADAhI,GAAEgI,GAAM6J,GAAUnP,MACXA,QAIfwD,EAAM7D,EAAExC,UAAYwC,EAAExC,UAAYG,EAAEM,GAGpC4F,EAAM5B,KAAOA,EACb4B,EAAMpC,iBAAmBA,EACzB9D,EAAEkG,MAAQA,EAEHlG,IAusBX,OApsBAnB,GAAOC,MAAQA,EACFF,SAAbC,EAAOmB,IAAoBnB,EAAOmB,EAAIlB,GAErC,SAAUkB,GAaP,QAAS0S,GAAIrR,GACT,MAAOA,GAAQsR,OAAStR,EAAQsR,KAAOA,KAE3C,QAASC,GAAavR,EAASwR,EAAOvS,EAAIiC,GAEtC,GADAsQ,EAAQ9H,EAAM8H,GACVA,EAAMC,GAAI,GAAIC,GAAUC,EAAWH,EAAMC,GAC7C,QAAQG,EAASP,EAAIrR,SAAiBlB,OAAO,SAAS+S,GAClD,MAAOA,MACEL,EAAM5O,GAAMiP,EAAQjP,GAAK4O,EAAM5O,MAC/B4O,EAAMC,IAAMC,EAAQhP,KAAKmP,EAAQJ,QACjCxS,GAAYoS,EAAIQ,EAAQ5S,MAAQoS,EAAIpS,OACpCiC,GAAY2Q,EAAQC,KAAO5Q,KAG5C,QAASwI,GAAM8H,GACX,GAAIO,IAAS,GAAKP,GAAO7H,MAAM,IAC/B,QAAQ/G,EAAGmP,EAAM,GAAIN,GAAIM,EAAMnR,MAAM,GAAGiJ,OAAO2D,KAAK,MAExD,QAASmE,GAAWF,GAChB,MAAO,IAAI9R,QAAO,UAAY8R,EAAGnS,QAAQ,IAAK,SAAW,WAG7D,QAAS0S,GAAaH,EAASI,GAC3B,MAAOJ,GAAQK,MACTC,GAAqBN,EAAQjP,IAAKwP,MAClCH,EAGV,QAASI,GAAU3U,GACf,MAAO4U,GAAM5U,IAAUyU,GAAoBC,EAAM1U,IAAUA,EAG/D,QAAS8M,GAAIxK,EAASuS,EAAQtT,EAAI6O,EAAM5M,EAAUsR,EAAWC,GACzD,GAAIhW,GAAK4U,EAAIrR,GAAU0S,EAAOd,EAASnV,KAAQmV,EAASnV,MACxD8V,GAAO5I,MAAM,MAAMjC,QAAQ,SAAS8J,GAChC,GAAa,SAATA,EAAkB,MAAO7S,GAAEwB,UAAUmH,MAAMrI,EAC/C,IAAI4S,GAAYnI,EAAM8H,EACtBK,GAAQ5S,GAAQA,EAChB4S,EAAQC,IAAQ5Q,EAEZ2Q,EAAQjP,IAAK0P,KAAOrT,EAAK,SAAS2D,GAClC,GAAI+P,GAAU/P,EAAEgQ,aAChB,KAAKD,GAAYA,IAAYtR,OAAS1C,EAAEyJ,SAAS/G,KAAMsR,GACnD,MAAOd,GAAQ5S,GAAGE,MAAMkC,KAAMmG,aAEtCqK,EAAQK,IAAQM,CAChB,IAAInJ,GAAYmJ,GAAavT,CAC7B4S,GAAQgB,MAAQ,SAASjQ,GAErB,GADAA,EAAIkQ,EAAWlQ,IACXA,EAAEmQ,gCAAN,CACAnQ,EAAEkL,KAAOA,CACT,IAAI/C,GAAS1B,EAASlK,MAAMa,EAAS4C,EAAEoQ,OAASzV,GAAaqF,IAAMA,GAAG1D,OAAO0D,EAAEoQ,OAE/E,OADIjI,MAAW,IAAOnI,EAAEqQ,iBAAkBrQ,EAAEsQ,mBACrCnI,IAEX8G,EAAQ1Q,EAAIuR,EAAIhU,OAChBgU,EAAInJ,KAAKsI,GACL,oBAAsB7R,IACtBA,EAAQkK,iBAAiBmI,EAAUR,EAAQjP,GAAIiP,EAAQgB,MAAOb,EAAaH,EAASY,MAGhG,QAASpI,GAAOrK,EAASuS,EAAQtT,EAAIiC,EAAUuR,GAC3C,GAAIhW,GAAK4U,EAAIrR,IACPuS,GAAU,IAAI5I,MAAM,MAAMjC,QAAQ,SAAS8J,GAC7CD,EAAavR,EAASwR,EAAOvS,EAAIiC,GAAUwG,QAAQ,SAASmK,SACjDD,GAASnV,GAAIoV,EAAQ1Q,GACxB,uBAAyBnB,IACzBA,EAAQmT,oBAAoBd,EAAUR,EAAQjP,GAAIiP,EAAQgB,MAAOb,EAAaH,EAASY,QA4CvG,QAASK,GAAWtB,EAAOhQ,GAoBvB,OAnBIA,GAAWgQ,EAAM4B,qBACjB5R,IAAWA,EAASgQ,GAEpB7S,EAAEqI,KAAKqM,EAAc,SAAS5T,EAAM6T,GAChC,GAAIC,GAAe/R,EAAO/B,EAC1B+R,GAAM/R,GAAQ,WAEV,MADA4B,MAAKiS,GAAaE,EACXD,GAAgBA,EAAapU,MAAMqC,EAAQgG,YAEtDgK,EAAM8B,GAAaG,IAGvBjC,EAAMkC,YAAclC,EAAMkC,UAAYC,KAAKC,QAEvCpS,EAAOqS,mBAAqBtW,EAAYiE,EAAOqS,iBAC3C,eAAiBrS,GAASA,EAAOsS,eAAgB,EACjDtS,EAAOuS,mBAAqBvS,EAAOuS,uBACvCvC,EAAM4B,mBAAqBI,IAE5BhC,EAGX,QAASwC,GAAYxC,GACjB,GAAI9P,GAAKmR,GAAUoB,cAAezC,EAClC,KAAK9P,IAAO8P,GACH0C,EAAiBxR,KAAKhB,IAAQ8P,EAAM9P,KAASnE,IAAWsV,EAAMnR,GAAO8P,EAAM9P,GAEpF,OAAOoR,GAAWD,EAAOrB,GAvJ7B,GAAcjU,GAAV+T,EAAO,EACP1Q,EAAQgF,MAAMpH,UAAUoC,MACxB9C,EAAaa,EAAEb,WACfqW,EAAW,SAAShX,GAAM,MAAqB,gBAAPA,IACxCyU,KACAwC,KACAjC,EAAmB,aAAe3U,GAClC4U,GAAUA,MAAO,UAAWiC,KAAM,YAClC/B,GAAUgC,WAAY,YAAaC,WAAY,WAEnDH,GAAcI,MAAQJ,EAAcK,UAAYL,EAAcM,QAAUN,EAAcO,UAAY,cA0ElGhW,EAAE6S,OAAUhH,IAAKA,EAAKH,OAAQA,GAE9B1L,EAAEkU,MAAQ,SAAS5T,EAAI8C,GACnB,GAAIwF,GAAQ,IAAKC,YAAc5G,EAAMjE,KAAK6K,UAAW,EACrD,IAAI1J,EAAWmB,GAAK,CAChB,GAAI2V,GAAU,WAAY,MAAO3V,GAAGE,MAAM4C,EAASwF,EAAOA,EAAKrI,OAAO0B,EAAMjE,KAAK6K,YAAcA,WAE/F,OADAoN,GAAQtD,KAAOD,EAAIpS,GACZ2V,EACJ,GAAIT,EAASpS,GAChB,MAAIwF,IACAA,EAAKsN,QAAQ5V,EAAG8C,GAAU9C,GACnBN,EAAEkU,MAAM1T,MAAM,KAAMoI,IAEpB5I,EAAEkU,MAAM5T,EAAG8C,GAAU9C,EAGhC,MAAM,IAAI6V,WAAU,sBAI5BnW,EAAEM,GAAG8V,KAAO,SAASvD,EAAO1D,EAAMzE,GAC9B,MAAOhI,MAAK2T,GAAGxD,EAAO1D,EAAMzE,IAEhC1K,EAAEM,GAAGgW,OAAS,SAASzD,EAAOnI,GAC1B,MAAOhI,MAAK6T,IAAI1D,EAAOnI,IAE3B1K,EAAEM,GAAGkW,IAAM,SAAS3D,EAAOtQ,EAAU4M,EAAMzE,GACvC,MAAOhI,MAAK2T,GAAGxD,EAAOtQ,EAAU4M,EAAMzE,EAAU,GAGpD,IAAImK,GAAa,WAAW,OAAO,GAC/BC,EAAc,WAAW,OAAO,GAChCS,EAAmB,uDACnBb,GACIJ,eAAgB,qBAChBmC,yBAA0B,gCAC1BlC,gBAAiB,uBAkCzBvU,GAAEM,GAAGoW,SAAW,SAASnU,EAAUsQ,EAAOnI,GACtC,MAAOhI,MAAK2T,GAAGxD,EAAOtQ,EAAUmI,IAEpC1K,EAAEM,GAAGqW,WAAa,SAASpU,EAAUsQ,EAAOnI,GACxC,MAAOhI,MAAK6T,IAAI1D,EAAOtQ,EAAUmI,IAGrC1K,EAAEM,GAAGsW,KAAO,SAAS/D,EAAOnI,GAExB,MADA1K,GAAEwB,SAASE,MAAMgV,SAAShU,KAAKH,SAAUsQ,EAAOnI,GACzChI,MAEX1C,EAAEM,GAAGuW,IAAM,SAAShE,EAAOnI,GAEvB,MADA1K,GAAEwB,SAASE,MAAMiV,WAAWjU,KAAKH,SAAUsQ,EAAOnI,GAC3ChI,MAGX1C,EAAEM,GAAG+V,GAAK,SAASxD,EAAOtQ,EAAU4M,EAAMzE,EAAU8L,GAChD,GAAIM,GAAYjD,EAAWxH,EAAQ3J,IACnC,OAAImQ,KAAU2C,EAAS3C,IACnB7S,EAAEqI,KAAKwK,EAAO,SAAS9T,EAAMuB,GACzB+L,EAAMgK,GAAGtX,EAAMwD,EAAU4M,EAAM7O,EAAIkW,KAEhCnK,IAGNmJ,EAASjT,IAAcpD,EAAWuL,IAAaA,KAAa,IAC7DA,EAAWyE,EAAMA,EAAO5M,EAAUA,EAAW3D,GAC7C8L,IAAa9L,GAAauQ,KAAS,IACnCzE,EAAWyE,EAAMA,EAAOvQ,GAExB8L,KAAa,IAAOA,EAAWoK,GAE5BzI,EAAMhE,KAAK,SAASoE,EAAGpL,GACtBmV,IAAKM,EAAa,SAAS7S,GAE3B,MADAyH,GAAOrK,EAAS4C,EAAElF,KAAM2L,GACjBA,EAASlK,MAAMkC,KAAMmG,aAG5BtG,IAAUsR,EAAY,SAAS5P,GAC/B,GAAI8S,GAAKvP,EAAQxH,EAAEiE,EAAErB,QAAQ2J,QAAQhK,EAAUlB,GAASmK,IAAI,EAC5D,IAAIhE,GAASA,IAAUnG,EAEnB,MADA0V,GAAM/W,EAAE2C,OAAO0S,EAAYpR,IAAK+S,cAAexP,EAAOyP,UAAW5V,KACzDyV,GAAcpM,GAAUlK,MAAMgH,GAAQuP,GAAKxW,OAAO0B,EAAMjE,KAAK6K,UAAW,OAIxFgD,EAAIxK,EAASwR,EAAOnI,EAAUyE,EAAM5M,EAAUsR,GAAaiD,OAGnE9W,EAAEM,GAAGiW,IAAM,SAAS1D,EAAOtQ,EAAUmI,GACjC,GAAI2B,GAAQ3J,IACZ,OAAImQ,KAAU2C,EAAS3C,IACnB7S,EAAEqI,KAAKwK,EAAO,SAAS9T,EAAMuB,GACzB+L,EAAMkK,IAAIxX,EAAMwD,EAAUjC,KAEvB+L,IAGNmJ,EAASjT,IAAcpD,EAAWuL,IAAaA,KAAa,IAC7DA,EAAWnI,EAAUA,EAAW3D,GAEhC8L,KAAa,IAAOA,EAAWoK,GAE5BzI,EAAMhE,KAAK,WACdqD,EAAOhJ,KAAMmQ,EAAOnI,EAAUnI,OAItCvC,EAAEM,GAAG4W,QAAU,SAASrE,EAAOjK,GAG3B,MAFAiK,GAAS2C,EAAS3C,IAAU7S,EAAEN,cAAcmT,GAAU7S,EAAEmX,MAAMtE,GAASsB,EAAWtB,GAClFA,EAAMwB,MAAQzL,EACPlG,KAAK2F,KAAK,WAETwK,EAAM9T,OAAQ0U,IAAoC,kBAApB/Q,MAAKmQ,EAAM9T,MAAqB2D,KAAKmQ,EAAM9T,QAEpE,iBAAmB2D,MAAMA,KAAK0U,cAAcvE,GAChD7S,EAAE0C,MAAM2U,eAAexE,EAAOjK,MAM3C5I,EAAEM,GAAG+W,eAAiB,SAASxE,EAAOjK,GAClC,GAAI3E,GAAGmI,CAUP,OATA1J,MAAK2F,KAAK,SAAS7F,EAAGnB,GAClB4C,EAAIoR,EAAYG,EAAS3C,GAAS7S,EAAEmX,MAAMtE,GAASA,GACnD5O,EAAEoQ,MAAQzL,EACV3E,EAAErB,OAASvB,EACXrB,EAAEqI,KAAKuK,EAAavR,EAASwR,EAAM9T,MAAQ8T,GAAQ,SAASrQ,EAAG0Q,GAE3D,GADA9G,EAAS8G,EAAQgB,MAAMjQ,GACnBA,EAAEmQ,gCAAiC,OAAO,MAG/ChI,GAIV,uLAE6CpB,MAAM,KAAKjC,QAAQ,SAAS8J,GACtE7S,EAAEM,GAAGuS,GAAS,SAASnI,GACnB,MAAQ,KAAK7B,WACTnG,KAAK0T,KAAKvD,EAAOnI,GACjBhI,KAAKwU,QAAQrE,MAIzB7S,EAAEmX,MAAQ,SAASpY,EAAM6Q,GAChB4F,EAASzW,KAAO6Q,EAAQ7Q,EAAMA,EAAO6Q,EAAM7Q,KAChD,IAAI8T,GAAQrR,SAAS8V,YAAY7B,EAAc1W,IAAS,UAAWwY,GAAU,CAC7E,IAAI3H,EAAO,IAAK,GAAI9O,KAAQ8O,GAAgB,WAAR9O,EAAsByW,IAAY3H,EAAM9O,GAAU+R,EAAM/R,GAAQ8O,EAAM9O,EAE1G,OADA+R,GAAM2E,UAAUzY,EAAMwY,GAAS,GACxBpD,EAAWtB,KAGvB/T,GAEF,SAAUkB,GAgBP,QAASyX,GAAiBrU,EAASsU,EAAWvI,GAC1C,GAAI0D,GAAQ7S,EAAEmX,MAAMO,EAEpB,OADA1X,GAAEoD,GAAS8T,QAAQrE,EAAO1D,IAClB0D,EAAM4B,qBAIlB,QAASkD,GAAcC,EAAUxU,EAASsU,EAAWvI,GACjD,GAAIyI,EAASlZ,OAAQ,MAAO+Y,GAAiBrU,GAAW5B,EAAUkW,EAAWvI,GAMjF,QAAS0I,GAAUD,GACXA,EAASlZ,QAAyB,IAAfsB,EAAE8X,UAAgBH,EAAcC,EAAU,KAAM,aAE3E,QAASG,GAASH,GACVA,EAASlZ,WAAcsB,EAAE8X,QAASH,EAAcC,EAAU,KAAM,YAIxE,QAASI,GAAeC,EAAKL,GACzB,GAAIxU,GAAUwU,EAASxU,OACvB,OAAIwU,GAASM,WAAWla,KAAKoF,EAAS6U,EAAKL,MAAc,GACrDD,EAAcC,EAAUxU,EAAS,kBAAmB6U,EAAKL,OAAe,OAG5ED,GAAcC,EAAUxU,EAAS,YAAa6U,EAAKL,IAEvD,QAASO,GAAYhJ,EAAM8I,EAAKL,EAAUQ,GACtC,GAAIhV,GAAUwU,EAASxU,QAASiV,EAAS,SACzCT,GAASU,QAAQta,KAAKoF,EAAS+L,EAAMkJ,EAAQJ,GACzCG,GAAUA,EAASG,YAAYnV,GAAU+L,EAAMkJ,EAAQJ,IAC3DN,EAAcC,EAAUxU,EAAS,eAAgB6U,EAAKL,EAAUzI,IAChEqJ,EAAaH,EAAQJ,EAAKL,GAG9B,QAASa,GAAUC,EAAO3Z,EAAMkZ,EAAKL,EAAUQ,GAC3C,GAAIhV,GAAUwU,EAASxU,OACvBwU,GAASc,MAAM1a,KAAKoF,EAAS6U,EAAKlZ,EAAM2Z,GACpCN,GAAUA,EAASO,WAAWvV,GAAU6U,EAAKlZ,EAAM2Z,IACvDf,EAAcC,EAAUxU,EAAS,aAAc6U,EAAKL,EAAUc,GAAS3Z,IACvEyZ,EAAazZ,EAAMkZ,EAAKL,GAG5B,QAASY,GAAaH,EAAQJ,EAAKL,GAC/B,GAAIxU,GAAUwU,EAASxU,OACvBwU,GAASgB,SAAS5a,KAAKoF,EAAS6U,EAAKI,GACrCV,EAAcC,EAAUxU,EAAS,gBAAiB6U,EAAKL,IACvDG,EAASH,GAGb,QAASiB,GAAe1J,EAAMpQ,EAAM6Y,GAChC,GAAIA,EAASkB,YAAc7L,EAAO,MAAOkC,EACzC,IAAI/L,GAAUwU,EAASxU,OACvB,OAAOwU,GAASkB,WAAW9a,KAAKoF,EAAS+L,EAAMpQ,GAInD,QAASkO,MAgGT,QAAS8L,GAAeC,GAEpB,MADIA,KAAMA,EAAOA,EAAKhO,MAAM,IAAK,GAAG,IAC7BgO,IAAUA,GAAQC,EAAW,OAC5BD,GAAQE,EAAW,OACfC,EAAapV,KAAKiV,GAAQ,SAC1BI,EAAUrV,KAAKiV,IAAS,QAAW,OAGnD,QAASK,GAAYC,EAAKC,GACtB,MAAa,IAATA,EAAoBD,GAChBA,EAAM,IAAMC,GAAO5Y,QAAQ,YAAa,KAIpD,QAAS6Y,GAAcC,GACfA,EAAQC,aAAeD,EAAQtK,MAAgC,UAAxBnP,EAAEjB,KAAK0a,EAAQtK,QACtDsK,EAAQtK,KAAOnP,EAAE2Z,MAAMF,EAAQtK,KAAMsK,EAAQG,eAC7CH,EAAQtK,MAAUsK,EAAQ1a,MAAsC,OAA9B0a,EAAQ1a,KAAK+I,eAA0B,SAAW2R,EAAQI,WAC5FJ,EAAQH,IAAMD,EAAYI,EAAQH,IAAKG,EAAQtK,MAAOsK,EAAQtK,KAAOvQ,QAsH7E,QAASkb,GAAeR,EAAKnK,EAAMmJ,EAASuB,GAGxC,MAFI7Z,GAAEb,WAAWgQ,KAAO0K,EAAWvB,EAASA,EAAUnJ,EAAMA,EAAOvQ,QAC9DoB,EAAEb,WAAWmZ,KAAUuB,EAAWvB,EAASA,EAAU1Z,SAEtD0a,IAAKA,EACHnK,KAAMA,EACNmJ,QAASA,EACTuB,SAAUA,GAsCpB,QAASE,GAAUC,EAAQxb,EAAKob,EAAaK,GACzC,GAAIlb,GAAMmB,EAAQF,EAAEgD,QAAQxE,GAAM0b,EAAOla,EAAEN,cAAclB,EACzDwB,GAAEqI,KAAK7J,EAAK,SAASuE,EAAK3D,GACtBL,EAAOiB,EAAEjB,KAAKK,GACV6a,IAAOlX,EAAM6W,EAAcK,EAC/BA,EAAQ,KAAOC,GAAgB,UAARnb,GAA4B,SAARA,EAAkBgE,EAAM,IAAM,MAEpEkX,GAAS/Z,EAAO8Z,EAAOnO,IAAIzM,EAAM0B,KAAM1B,EAAMA,OAEjC,SAARL,IAAqB6a,GAAuB,UAAR7a,EACzCgb,EAAUC,EAAQ5a,EAAOwa,EAAa7W,GACrCiX,EAAOnO,IAAI9I,EAAK3D,KA3W7B,GAEI2D,GACAjC,EAHAqZ,GAAW,GAAInF,MACfxT,EAAW3C,EAAO2C,SAGlB4Y,EAAU,sDACVjB,EAAe,qCACfC,EAAY,8BACZF,EAAW,mBACXD,EAAW,YACXoB,EAAU,QACVC,EAAe9Y,EAASC,cAAc,IAE1C6Y,GAAaC,KAAO1b,EAAO2b,SAASD,KAepCva,EAAE8X,OAAS,EAkDX9X,EAAEya,UAAY,SAAShB,EAASrB,GAC5B,KAAM,QAAUqB,IAAU,MAAOzZ,GAAE0a,KAAKjB,EAExC,IAKIkB,GAIwBC,EATxBC,EAAgBpB,EAAQqB,cACxBC,GAAgB/a,EAAEb,WAAW0b,GACrBA,IAAkBA,IAAmB,QAAWV,IACxDa,EAASxZ,EAASC,cAAc,UAChCwZ,EAAmBpc,EAAOkc,GAE1BG,EAAQ,SAASC,GACbnb,EAAEgb,GAAQ3D,eAAe,QAAS8D,GAAa,UAEnDlD,GAAQiD,MAAOA,EAqBnB,OAnBI9C,IAAUA,EAASgD,QAAQnD,GAE/BjY,EAAEgb,GAAQ3E,GAAG,aAAc,SAASpS,EAAGkX,GACnCE,aAAaT,GACb5a,EAAEgb,GAAQzE,MAAM7K,SAEF,SAAVzH,EAAElF,MAAoB4b,EAGtBxC,EAAYwC,EAAa,GAAI1C,EAAKwB,EAASrB,GAF3CK,EAAU,KAAM0C,GAAa,QAASlD,EAAKwB,EAASrB,GAKxDvZ,EAAOkc,GAAgBE,EACnBN,GAAgB3a,EAAEb,WAAW8b,IAC7BA,EAAiBN,EAAa,IAElCM,EAAmBN,EAAe/b,SAGlCoZ,EAAeC,EAAKwB,MAAa,GACjCyB,EAAM,SACCjD,IAGXpZ,EAAOkc,GAAgB,WACnBJ,EAAe9R,WAGnBmS,EAAOzI,IAAMkH,EAAQH,IAAI3Y,QAAQ,YAAa,OAASoa,GACvDvZ,EAAS8Z,KAAK3Z,YAAYqZ,GAEtBvB,EAAQ8B,QAAU,IAAGX,EAAeY,WAAW,WAC/CN,EAAM,YACPzB,EAAQ8B,UAEJtD,IAGXjY,EAAEyb,cAEE1c,KAAM,MAENmZ,WAAYjL,EAEZqL,QAASrL,EAETyL,MAAOzL,EAEP2L,SAAU3L,EAEV7J,QAAS,KAET1E,QAAQ,EAERuZ,IAAK,WACD,MAAO,IAAIpZ,GAAO6c,gBAItBC,SACIX,OAAQ,oEACRY,KAAQ1C,EACR2C,IAAQ,4BACR7T,KAAQiR,EACRvK,KAAQ,cAGZoN,aAAa,EAEbP,QAAS,EAET7B,aAAa,EAEbqC,OAAO,EAIPjD,WAAY7L,GAwBhBjN,EAAE0a,KAAO,SAASjB,GACd,GAEIuC,GAAWC,EAFXrE,EAAW5X,EAAE2C,UAAW8W,OACxBrB,EAAWpY,EAAEkc,UAAYlc,EAAEkc,UAE/B,KAAKnZ,IAAO/C,GAAEyb,aAAoC7c,SAAlBgZ,EAAS7U,KAAoB6U,EAAS7U,GAAO/C,EAAEyb,aAAa1Y,GAE5F8U,GAAUD,GAELA,EAASkE,cACVE,EAAYxa,EAASC,cAAc,KACnCua,EAAUzB,KAAO3C,EAAS0B,IAE1B0C,EAAUzB,KAAOyB,EAAUzB,KAC3B3C,EAASkE,YAAexB,EAAa6B,SAAW,KAAO7B,EAAa8B,MAAWJ,EAAUG,SAAW,KAAOH,EAAUI,MAGpHxE,EAAS0B,MAAK1B,EAAS0B,IAAMza,EAAO2b,SAAStb,aAC7C+c,EAAYrE,EAAS0B,IAAI1R,QAAQ,WAAYgQ,EAAS0B,IAAM1B,EAAS0B,IAAIrX,MAAM,EAAGga,IACvFzC,EAAc5B,EAEd,IAAIiC,GAAWjC,EAASiC,SAAUwC,EAAiB,UAAUtY,KAAK6T,EAAS0B,IAS3E,IARI+C,IAAgBxC,EAAW,SAE3BjC,EAASmE,SAAU,IACbtC,GAAWA,EAAQsC,SAAU,GAC9B,UAAYlC,GAAY,SAAWA,KAExCjC,EAAS0B,IAAMD,EAAYzB,EAAS0B,IAAK,KAAOtE,KAAKC,QAErD,SAAW4E,EAIX,MAHKwC,KACDzE,EAAS0B,IAAMD,EAAYzB,EAAS0B,IAChC1B,EAAS0E,MAAS1E,EAAS0E,MAAQ,KAAQ1E,EAAS0E,SAAU,EAAQ,GAAK,eAC5Etc,EAAEya,UAAU7C,EAAUQ,EAGjC,IAMIwC,GANA5B,EAAOpB,EAAS+D,QAAQ9B,GACxB0C,KACAC,EAAY,SAAS1b,EAAM1B,GAASmd,EAAQzb,EAAKF,gBAAkBE,EAAM1B,IACzE+c,EAAW,iBAAiBpY,KAAK6T,EAAS0B,KAAOtY,OAAOmH,GAAKtJ,EAAO2b,SAAS2B,SAC7ElE,EAAML,EAASK,MACfwE,EAAkBxE,EAAIyE,gBAc1B,IAXItE,GAAUA,EAASgD,QAAQnD,GAE1BL,EAASkE,aAAaU,EAAU,mBAAoB,kBACzDA,EAAU,SAAUxD,GAAQ,QACxBA,EAAOpB,EAAS+E,UAAY3D,KACxBA,EAAKpR,QAAQ,UAAWoR,EAAOA,EAAKhO,MAAM,IAAK,GAAG,IACtDiN,EAAI2E,kBAAoB3E,EAAI2E,iBAAiB5D,KAE7CpB,EAASiF,aAAgBjF,EAASiF,eAAgB,GAASjF,EAASzI,MAAuC,OAA/ByI,EAAS7Y,KAAK+I,gBAC1F0U,EAAU,eAAgB5E,EAASiF,aAAe,qCAElDjF,EAAS2E,QAAS,IAAKzb,IAAQ8W,GAAS2E,QAASC,EAAU1b,EAAM8W,EAAS2E,QAAQzb,GAmCtF,IAlCAmX,EAAIyE,iBAAmBF,EAEvBvE,EAAI6E,mBAAqB,WACrB,GAAsB,GAAlB7E,EAAI3M,WAAiB,CACrB2M,EAAI6E,mBAAqB7P,EACzBoO,aAAaT,EACb,IAAIxO,GAAQsM,GAAQ,CACpB,IAAKT,EAAII,QAAU,KAAOJ,EAAII,OAAS,KAAsB,KAAdJ,EAAII,QAAgC,GAAdJ,EAAII,QAA2B,SAAZ8D,EAAsB,CAG1G,GAFAtC,EAAWA,GAAYd,EAAenB,EAAS+E,UAAY1E,EAAI8E,kBAAkB,iBAEzD,eAApB9E,EAAI+E,cAAqD,QAApB/E,EAAI+E,aACzC5Q,EAAS6L,EAAIgF,aACZ,CACD7Q,EAAS6L,EAAIiF,YAEb,KAGI9Q,EAASyM,EAAezM,EAAQyN,EAAUjC,GAC1B,UAAZiC,GAAyB,EAAGsD,MAAM/Q,GACjB,OAAZyN,EAAoBzN,EAAS6L,EAAImF,YACrB,QAAZvD,IAAoBzN,EAASiO,EAAQtW,KAAKqI,GAAU,KAAOpM,EAAEgE,UAAUoI,IAClF,MAAOnI,GAAKyU,EAAQzU,EAEtB,GAAIyU,EAAO,MAAOD,GAAUC,EAAO,cAAeT,EAAKL,EAAUQ,GAGrED,EAAY/L,EAAQ6L,EAAKL,EAAUQ,OAEnCK,GAAUR,EAAIoF,YAAc,KAAMpF,EAAII,OAAS,QAAU,QAASJ,EAAKL,EAAUQ,KAKzFJ,EAAeC,EAAKL,MAAc,EAGlC,MAFAK,GAAIiD,QACJzC,EAAU,KAAM,QAASR,EAAKL,EAAUQ,GACjCH,CAGX,IAAIqF,KAAQ,SAAW1F,KAAWA,EAAS0F,KAG3C,IAFArF,EAAIsF,KAAK3F,EAAS7Y,KAAM6Y,EAAS0B,IAAKgE,EAAO1F,EAAS4F,SAAU5F,EAAS6F,UAErE7F,EAAS8F,UAAW,IAAK5c,IAAQ8W,GAAS8F,UAAWzF,EAAInX,GAAQ8W,EAAS8F,UAAU5c,EAExF,KAAKA,IAAQyb,GAASE,EAAgBjc,MAAMyX,EAAKsE,EAAQzb,GAUzD,OARI8W,GAAS2D,QAAU,IAAGX,EAAeY,WAAW,WAChDvD,EAAI6E,mBAAqB7P,EACzBgL,EAAIiD,QACJzC,EAAU,KAAM,UAAWR,EAAKL,EAAUQ,IAC3CR,EAAS2D,UAGZtD,EAAI0F,KAAK/F,EAASzI,KAAOyI,EAASzI,KAAO,MAClC8I,GAeXjY,EAAEwL,IAAM,WACJ,MAAOxL,GAAE0a,KAAKZ,EAAetZ,MAAM,KAAMqI,aAG7C7I,EAAE4d,KAAO,WACL,GAAInE,GAAUK,EAAetZ,MAAM,KAAMqI,UAEzC,OADA4Q,GAAQ1a,KAAO,OACRiB,EAAE0a,KAAKjB,IAGlBzZ,EAAE6d,QAAU,WACR,GAAIpE,GAAUK,EAAetZ,MAAM,KAAMqI,UAEzC,OADA4Q,GAAQI,SAAW,OACZ7Z,EAAE0a,KAAKjB,IAGlBzZ,EAAEM,GAAGwd,KAAO,SAASxE,EAAKnK,EAAMmJ,GAC5B,IAAK5V,KAAK3C,OAAQ,MAAO2C,KACzB,IAA0CH,GAAtC0L,EAAOvL,KAAM0Q,EAAQkG,EAAItO,MAAM,MAC/ByO,EAAUK,EAAeR,EAAKnK,EAAMmJ,GACpC5N,EAAW+O,EAAQnB,OASvB,OARIlF,GAAMrT,OAAS,IAAG0Z,EAAQH,IAAMlG,EAAM,GAAI7Q,EAAW6Q,EAAM,IAC/DqG,EAAQnB,QAAU,SAAS2E,GACvBhP,EAAKjG,KAAKzF,EACNvC,EAAE,SAASgI,KAAKiV,EAAStc,QAAQyZ,EAAS,KAAK1R,KAAKnG,GAClD0a,GACNvS,GAAYA,EAASlK,MAAMyN,EAAMpF,YAErC7I,EAAE0a,KAAKjB,GACA/W,KAGX,IAAIqb,GAASC,kBAiBbhe,GAAE2Z,MAAQ,SAASnb,EAAKob,GACpB,GAAII,KAOJ,OANAA,GAAOnO,IAAM,SAAS9I,EAAK3D,GACnBY,EAAEb,WAAWC,KAAQA,EAAQA,KACpB,MAATA,IAAeA,EAAQ,IAC3BsD,KAAKkI,KAAKmT,EAAOhb,GAAO,IAAMgb,EAAO3e,KAEzC2a,EAAUC,EAAQxb,EAAKob,GAChBI,EAAOnL,KAAK,KAAKlO,QAAQ,OAAQ,OAE7C7B,GAEF,SAAUkB,GACPA,EAAEM,GAAG2d,eAAiB,WAClB,GAAInd,GAAM/B,EAAMqN,KACZP,EAAM,QAANA,GAAezM,GACX,MAAIA,GAAM2J,QAAgB3J,EAAM2J,QAAQ8C,OACxCO,GAAOxB,MAAO9J,KAAMA,EAAM1B,MAAOA,IASzC,OAPIsD,MAAK,IAAI1C,EAAEqI,KAAK3F,KAAK,GAAG+H,SAAU,SAASgC,EAAGyR,GAC9Cnf,EAAOmf,EAAMnf,KAAM+B,EAAOod,EAAMpd,KAC5BA,GAAwC,YAAhCod,EAAM9c,SAASR,gBACtBsd,EAAMC,UAAoB,UAARpf,GAA4B,SAARA,GAA2B,UAARA,GAA4B,QAARA,IACpE,SAARA,GAA2B,YAARA,GAAuBmf,EAAME,UAClDvS,EAAI7L,EAAEke,GAAOrU,SAEduC,GAGXpM,EAAEM,GAAGyZ,UAAY,WACb,GAAI3N,KAIJ,OAHA1J,MAAKub,iBAAiBlV,QAAQ,SAASsV,GACnCjS,EAAOxB,KAAKoT,mBAAmBK,EAAIvd,MAAQ,IAAMkd,mBAAmBK,EAAIjf,UAErEgN,EAAOyC,KAAK,MAGvB7O,EAAEM,GAAGge,OAAS,SAAS5T,GACnB,GAAI,IAAK7B,WAAWnG,KAAK0T,KAAK,SAAU1L,OACnC,IAAIhI,KAAK3C,OAAQ,CAClB,GAAI8S,GAAQ7S,EAAEmX,MAAM,SACpBzU,MAAKuJ,GAAG,GAAGiL,QAAQrE,GACdA,EAAM4B,sBAAsB/R,KAAK8I,IAAI,GAAG8S,SAEjD,MAAO5b,QAGZ5D,GAEF,WAGG,IACI8C,iBAAiBhD,QACnB,MAAMqF,GACJ,GAAIsa,GAAyB3c,gBAC7B/C,GAAO+C,iBAAmB,SAASP,EAASmd,GACxC,IACI,MAAOD,GAAuBld,EAASmd,GACzC,MAAMva,GACJ,MAAO,YAKhBnF","file":"/zepto.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;'use strict';\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\t(function (global, factory) {\n\t    if (true) !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {\n\t        return factory(global);\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));else factory(global);\n\t})(window, function (window) {\n\t    var Zepto = function () {\n\t        var undefined,\n\t            key,\n\t            $,\n\t            classList,\n\t            emptyArray = [],\n\t            _concat = emptyArray.concat,\n\t            _filter = emptyArray.filter,\n\t            _slice = emptyArray.slice,\n\t            document = window.document,\n\t            elementDisplay = {},\n\t            classCache = {},\n\t            cssNumber = { 'column-count': 1, 'columns': 1, 'font-weight': 1, 'line-height': 1, 'opacity': 1, 'z-index': 1, 'zoom': 1 },\n\t            fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\n\t            singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\n\t            tagExpanderRE = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/ig,\n\t            rootNodeRE = /^(?:body|html)$/i,\n\t            capitalRE = /([A-Z])/g,\n\t            methodAttributes = ['val', 'css', 'html', 'text', 'data', 'width', 'height', 'offset'],\n\t            adjacencyOperators = ['after', 'prepend', 'before', 'append'],\n\t            table = document.createElement('table'),\n\t            tableRow = document.createElement('tr'),\n\t            containers = {\n\t            'tr': document.createElement('tbody'),\n\t            'tbody': table, 'thead': table, 'tfoot': table,\n\t            'td': tableRow, 'th': tableRow,\n\t            '*': document.createElement('div')\n\t        },\n\t            readyRE = /complete|loaded|interactive/,\n\t            simpleSelectorRE = /^[\\w-]*$/,\n\t            class2type = {},\n\t            toString = class2type.toString,\n\t            zepto = {},\n\t            camelize,\n\t            uniq,\n\t            tempParent = document.createElement('div'),\n\t            propMap = {\n\t            'tabindex': 'tabIndex',\n\t            'readonly': 'readOnly',\n\t            'for': 'htmlFor',\n\t            'class': 'className',\n\t            'maxlength': 'maxLength',\n\t            'cellspacing': 'cellSpacing',\n\t            'cellpadding': 'cellPadding',\n\t            'rowspan': 'rowSpan',\n\t            'colspan': 'colSpan',\n\t            'usemap': 'useMap',\n\t            'frameborder': 'frameBorder',\n\t            'contenteditable': 'contentEditable'\n\t        },\n\t            isArray = Array.isArray || function (object) {\n\t            return object instanceof Array;\n\t        };\n\t\n\t        zepto.matches = function (element, selector) {\n\t            if (!selector || !element || element.nodeType !== 1) return false;\n\t            var matchesSelector = element.matches || element.webkitMatchesSelector || element.mozMatchesSelector || element.oMatchesSelector || element.matchesSelector;\n\t            if (matchesSelector) return matchesSelector.call(element, selector);\n\t\n\t            var match,\n\t                parent = element.parentNode,\n\t                temp = !parent;\n\t            if (temp) (parent = tempParent).appendChild(element);\n\t            match = ~zepto.qsa(parent, selector).indexOf(element);\n\t            temp && tempParent.removeChild(element);\n\t            return match;\n\t        };\n\t\n\t        function type(obj) {\n\t            return obj == null ? String(obj) : class2type[toString.call(obj)] || \"object\";\n\t        }\n\t\n\t        function isFunction(value) {\n\t            return type(value) == \"function\";\n\t        }\n\t        function isWindow(obj) {\n\t            return obj != null && obj == obj.window;\n\t        }\n\t        function isDocument(obj) {\n\t            return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\n\t        }\n\t        function isObject(obj) {\n\t            return type(obj) == \"object\";\n\t        }\n\t        function isPlainObject(obj) {\n\t            return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\n\t        }\n\t\n\t        function likeArray(obj) {\n\t            var length = !!obj && 'length' in obj && obj.length,\n\t                type = $.type(obj);\n\t\n\t            return 'function' != type && !isWindow(obj) && ('array' == type || length === 0 || typeof length == 'number' && length > 0 && length - 1 in obj);\n\t        }\n\t\n\t        function compact(array) {\n\t            return _filter.call(array, function (item) {\n\t                return item != null;\n\t            });\n\t        }\n\t        function flatten(array) {\n\t            return array.length > 0 ? $.fn.concat.apply([], array) : array;\n\t        }\n\t        camelize = function camelize(str) {\n\t            return str.replace(/-+(.)?/g, function (match, chr) {\n\t                return chr ? chr.toUpperCase() : '';\n\t            });\n\t        };\n\t        function dasherize(str) {\n\t            return str.replace(/::/g, '/').replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2').replace(/([a-z\\d])([A-Z])/g, '$1_$2').replace(/_/g, '-').toLowerCase();\n\t        }\n\t        uniq = function uniq(array) {\n\t            return _filter.call(array, function (item, idx) {\n\t                return array.indexOf(item) == idx;\n\t            });\n\t        };\n\t\n\t        function classRE(name) {\n\t            return name in classCache ? classCache[name] : classCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)');\n\t        }\n\t\n\t        function maybeAddPx(name, value) {\n\t            return typeof value == \"number\" && !cssNumber[dasherize(name)] ? value + \"px\" : value;\n\t        }\n\t\n\t        function defaultDisplay(nodeName) {\n\t            var element, display;\n\t            if (!elementDisplay[nodeName]) {\n\t                element = document.createElement(nodeName);\n\t                document.body.appendChild(element);\n\t                display = getComputedStyle(element, '').getPropertyValue(\"display\");\n\t                element.parentNode.removeChild(element);\n\t                display == \"none\" && (display = \"block\");\n\t                elementDisplay[nodeName] = display;\n\t            }\n\t            return elementDisplay[nodeName];\n\t        }\n\t\n\t        function _children(element) {\n\t            return 'children' in element ? _slice.call(element.children) : $.map(element.childNodes, function (node) {\n\t                if (node.nodeType == 1) return node;\n\t            });\n\t        }\n\t\n\t        function Z(dom, selector) {\n\t            var i,\n\t                len = dom ? dom.length : 0;\n\t            for (i = 0; i < len; i++) {\n\t                this[i] = dom[i];\n\t            }this.length = len;\n\t            this.selector = selector || '';\n\t        }\n\t\n\t        zepto.fragment = function (html, name, properties) {\n\t            var dom, nodes, container;\n\t\n\t            if (singleTagRE.test(html)) dom = $(document.createElement(RegExp.$1));\n\t\n\t            if (!dom) {\n\t                if (html.replace) html = html.replace(tagExpanderRE, \"<$1></$2>\");\n\t                if (name === undefined) name = fragmentRE.test(html) && RegExp.$1;\n\t                if (!(name in containers)) name = '*';\n\t\n\t                container = containers[name];\n\t                container.innerHTML = '' + html;\n\t                dom = $.each(_slice.call(container.childNodes), function () {\n\t                    container.removeChild(this);\n\t                });\n\t            }\n\t\n\t            if (isPlainObject(properties)) {\n\t                nodes = $(dom);\n\t                $.each(properties, function (key, value) {\n\t                    if (methodAttributes.indexOf(key) > -1) nodes[key](value);else nodes.attr(key, value);\n\t                });\n\t            }\n\t\n\t            return dom;\n\t        };\n\t\n\t        zepto.Z = function (dom, selector) {\n\t            return new Z(dom, selector);\n\t        };\n\t\n\t        zepto.isZ = function (object) {\n\t            return object instanceof zepto.Z;\n\t        };\n\t\n\t        zepto.init = function (selector, context) {\n\t            var dom;\n\t\n\t            if (!selector) return zepto.Z();else if (typeof selector == 'string') {\n\t                    selector = selector.trim();\n\t\n\t                    if (selector[0] == '<' && fragmentRE.test(selector)) dom = zepto.fragment(selector, RegExp.$1, context), selector = null;else if (context !== undefined) return $(context).find(selector);else dom = zepto.qsa(document, selector);\n\t                } else if (isFunction(selector)) return $(document).ready(selector);else if (zepto.isZ(selector)) return selector;else {\n\t                            if (isArray(selector)) dom = compact(selector);else if (isObject(selector)) dom = [selector], selector = null;else if (fragmentRE.test(selector)) dom = zepto.fragment(selector.trim(), RegExp.$1, context), selector = null;else if (context !== undefined) return $(context).find(selector);else dom = zepto.qsa(document, selector);\n\t                        }\n\t\n\t            return zepto.Z(dom, selector);\n\t        };\n\t\n\t        $ = function $(selector, context) {\n\t            return zepto.init(selector, context);\n\t        };\n\t\n\t        function extend(target, source, deep) {\n\t            for (key in source) {\n\t                if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n\t                    if (isPlainObject(source[key]) && !isPlainObject(target[key])) target[key] = {};\n\t                    if (isArray(source[key]) && !isArray(target[key])) target[key] = [];\n\t                    extend(target[key], source[key], deep);\n\t                } else if (source[key] !== undefined) target[key] = source[key];\n\t            }\n\t        }\n\t\n\t        $.extend = function (target) {\n\t            var deep,\n\t                args = _slice.call(arguments, 1);\n\t            if (typeof target == 'boolean') {\n\t                deep = target;\n\t                target = args.shift();\n\t            }\n\t            args.forEach(function (arg) {\n\t                extend(target, arg, deep);\n\t            });\n\t            return target;\n\t        };\n\t\n\t        zepto.qsa = function (element, selector) {\n\t            var found,\n\t                maybeID = selector[0] == '#',\n\t                maybeClass = !maybeID && selector[0] == '.',\n\t                nameOnly = maybeID || maybeClass ? selector.slice(1) : selector,\n\t                isSimple = simpleSelectorRE.test(nameOnly);\n\t            return element.getElementById && isSimple && maybeID ? (found = element.getElementById(nameOnly)) ? [found] : [] : element.nodeType !== 1 && element.nodeType !== 9 && element.nodeType !== 11 ? [] : _slice.call(isSimple && !maybeID && element.getElementsByClassName ? maybeClass ? element.getElementsByClassName(nameOnly) : element.getElementsByTagName(selector) : element.querySelectorAll(selector));\n\t        };\n\t\n\t        function filtered(nodes, selector) {\n\t            return selector == null ? $(nodes) : $(nodes).filter(selector);\n\t        }\n\t\n\t        $.contains = document.documentElement.contains ? function (parent, node) {\n\t            return parent !== node && parent.contains(node);\n\t        } : function (parent, node) {\n\t            while (node && (node = node.parentNode)) {\n\t                if (node === parent) return true;\n\t            }return false;\n\t        };\n\t\n\t        function funcArg(context, arg, idx, payload) {\n\t            return isFunction(arg) ? arg.call(context, idx, payload) : arg;\n\t        }\n\t\n\t        function setAttribute(node, name, value) {\n\t            value == null ? node.removeAttribute(name) : node.setAttribute(name, value);\n\t        }\n\t\n\t        function className(node, value) {\n\t            var klass = node.className || '',\n\t                svg = klass && klass.baseVal !== undefined;\n\t\n\t            if (value === undefined) return svg ? klass.baseVal : klass;\n\t            svg ? klass.baseVal = value : node.className = value;\n\t        }\n\t\n\t        function deserializeValue(value) {\n\t            try {\n\t                return value ? value == \"true\" || (value == \"false\" ? false : value == \"null\" ? null : +value + \"\" == value ? +value : /^[\\[\\{]/.test(value) ? $.parseJSON(value) : value) : value;\n\t            } catch (e) {\n\t                return value;\n\t            }\n\t        }\n\t\n\t        $.type = type;\n\t        $.isFunction = isFunction;\n\t        $.isWindow = isWindow;\n\t        $.isArray = isArray;\n\t        $.isPlainObject = isPlainObject;\n\t\n\t        $.isEmptyObject = function (obj) {\n\t            var name;\n\t            for (name in obj) {\n\t                return false;\n\t            }return true;\n\t        };\n\t\n\t        $.isNumeric = function (val) {\n\t            var num = Number(val),\n\t                type = typeof val === 'undefined' ? 'undefined' : _typeof(val);\n\t            return val != null && type != 'boolean' && (type != 'string' || val.length) && !isNaN(num) && isFinite(num) || false;\n\t        };\n\t\n\t        $.inArray = function (elem, array, i) {\n\t            return emptyArray.indexOf.call(array, elem, i);\n\t        };\n\t\n\t        $.camelCase = camelize;\n\t        $.trim = function (str) {\n\t            return str == null ? \"\" : String.prototype.trim.call(str);\n\t        };\n\t\n\t        $.uuid = 0;\n\t        $.support = {};\n\t        $.expr = {};\n\t        $.noop = function () {};\n\t\n\t        $.map = function (elements, callback) {\n\t            var value,\n\t                values = [],\n\t                i,\n\t                key;\n\t            if (likeArray(elements)) for (i = 0; i < elements.length; i++) {\n\t                value = callback(elements[i], i);\n\t                if (value != null) values.push(value);\n\t            } else for (key in elements) {\n\t                value = callback(elements[key], key);\n\t                if (value != null) values.push(value);\n\t            }\n\t            return flatten(values);\n\t        };\n\t\n\t        $.each = function (elements, callback) {\n\t            var i, key;\n\t            if (likeArray(elements)) {\n\t                for (i = 0; i < elements.length; i++) {\n\t                    if (callback.call(elements[i], i, elements[i]) === false) return elements;\n\t                }\n\t            } else {\n\t                for (key in elements) {\n\t                    if (callback.call(elements[key], key, elements[key]) === false) return elements;\n\t                }\n\t            }\n\t\n\t            return elements;\n\t        };\n\t\n\t        $.grep = function (elements, callback) {\n\t            return _filter.call(elements, callback);\n\t        };\n\t\n\t        if (window.JSON) $.parseJSON = JSON.parse;\n\t\n\t        $.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function (i, name) {\n\t            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\n\t        });\n\t\n\t        $.fn = {\n\t            constructor: zepto.Z,\n\t            length: 0,\n\t\n\t            forEach: emptyArray.forEach,\n\t            reduce: emptyArray.reduce,\n\t            push: emptyArray.push,\n\t            sort: emptyArray.sort,\n\t            splice: emptyArray.splice,\n\t            indexOf: emptyArray.indexOf,\n\t            concat: function concat() {\n\t                var i,\n\t                    value,\n\t                    args = [];\n\t                for (i = 0; i < arguments.length; i++) {\n\t                    value = arguments[i];\n\t                    args[i] = zepto.isZ(value) ? value.toArray() : value;\n\t                }\n\t                return _concat.apply(zepto.isZ(this) ? this.toArray() : this, args);\n\t            },\n\t\n\t            map: function map(fn) {\n\t                return $($.map(this, function (el, i) {\n\t                    return fn.call(el, i, el);\n\t                }));\n\t            },\n\t            slice: function slice() {\n\t                return $(_slice.apply(this, arguments));\n\t            },\n\t\n\t            ready: function ready(callback) {\n\t                if (readyRE.test(document.readyState) && document.body) callback($);else document.addEventListener('DOMContentLoaded', function () {\n\t                    callback($);\n\t                }, false);\n\t                return this;\n\t            },\n\t            get: function get(idx) {\n\t                return idx === undefined ? _slice.call(this) : this[idx >= 0 ? idx : idx + this.length];\n\t            },\n\t            toArray: function toArray() {\n\t                return this.get();\n\t            },\n\t            size: function size() {\n\t                return this.length;\n\t            },\n\t            remove: function remove() {\n\t                return this.each(function () {\n\t                    if (this.parentNode != null) this.parentNode.removeChild(this);\n\t                });\n\t            },\n\t            each: function each(callback) {\n\t                emptyArray.every.call(this, function (el, idx) {\n\t                    return callback.call(el, idx, el) !== false;\n\t                });\n\t                return this;\n\t            },\n\t            filter: function filter(selector) {\n\t                if (isFunction(selector)) return this.not(this.not(selector));\n\t                return $(_filter.call(this, function (element) {\n\t                    return zepto.matches(element, selector);\n\t                }));\n\t            },\n\t            add: function add(selector, context) {\n\t                return $(uniq(this.concat($(selector, context))));\n\t            },\n\t            is: function is(selector) {\n\t                return this.length > 0 && zepto.matches(this[0], selector);\n\t            },\n\t            not: function not(selector) {\n\t                var nodes = [];\n\t                if (isFunction(selector) && selector.call !== undefined) this.each(function (idx) {\n\t                    if (!selector.call(this, idx)) nodes.push(this);\n\t                });else {\n\t                    var excludes = typeof selector == 'string' ? this.filter(selector) : likeArray(selector) && isFunction(selector.item) ? _slice.call(selector) : $(selector);\n\t                    this.forEach(function (el) {\n\t                        if (excludes.indexOf(el) < 0) nodes.push(el);\n\t                    });\n\t                }\n\t                return $(nodes);\n\t            },\n\t            has: function has(selector) {\n\t                return this.filter(function () {\n\t                    return isObject(selector) ? $.contains(this, selector) : $(this).find(selector).size();\n\t                });\n\t            },\n\t            eq: function eq(idx) {\n\t                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\n\t            },\n\t            first: function first() {\n\t                var el = this[0];\n\t                return el && !isObject(el) ? el : $(el);\n\t            },\n\t            last: function last() {\n\t                var el = this[this.length - 1];\n\t                return el && !isObject(el) ? el : $(el);\n\t            },\n\t            find: function find(selector) {\n\t                var result,\n\t                    $this = this;\n\t                if (!selector) result = $();else if ((typeof selector === 'undefined' ? 'undefined' : _typeof(selector)) == 'object') result = $(selector).filter(function () {\n\t                    var node = this;\n\t                    return emptyArray.some.call($this, function (parent) {\n\t                        return $.contains(parent, node);\n\t                    });\n\t                });else if (this.length == 1) result = $(zepto.qsa(this[0], selector));else result = this.map(function () {\n\t                    return zepto.qsa(this, selector);\n\t                });\n\t                return result;\n\t            },\n\t            closest: function closest(selector, context) {\n\t                var nodes = [],\n\t                    collection = (typeof selector === 'undefined' ? 'undefined' : _typeof(selector)) == 'object' && $(selector);\n\t                this.each(function (_, node) {\n\t                    while (node && !(collection ? collection.indexOf(node) >= 0 : zepto.matches(node, selector))) {\n\t                        node = node !== context && !isDocument(node) && node.parentNode;\n\t                    }if (node && nodes.indexOf(node) < 0) nodes.push(node);\n\t                });\n\t                return $(nodes);\n\t            },\n\t            parents: function parents(selector) {\n\t                var ancestors = [],\n\t                    nodes = this;\n\t                while (nodes.length > 0) {\n\t                    nodes = $.map(nodes, function (node) {\n\t                        if ((node = node.parentNode) && !isDocument(node) && ancestors.indexOf(node) < 0) {\n\t                            ancestors.push(node);\n\t                            return node;\n\t                        }\n\t                    });\n\t                }return filtered(ancestors, selector);\n\t            },\n\t            parent: function parent(selector) {\n\t                return filtered(uniq(this.pluck('parentNode')), selector);\n\t            },\n\t            children: function children(selector) {\n\t                return filtered(this.map(function () {\n\t                    return _children(this);\n\t                }), selector);\n\t            },\n\t            contents: function contents() {\n\t                return this.map(function () {\n\t                    return this.contentDocument || _slice.call(this.childNodes);\n\t                });\n\t            },\n\t            siblings: function siblings(selector) {\n\t                return filtered(this.map(function (i, el) {\n\t                    return _filter.call(_children(el.parentNode), function (child) {\n\t                        return child !== el;\n\t                    });\n\t                }), selector);\n\t            },\n\t            empty: function empty() {\n\t                return this.each(function () {\n\t                    this.innerHTML = '';\n\t                });\n\t            },\n\t\n\t            pluck: function pluck(property) {\n\t                return $.map(this, function (el) {\n\t                    return el[property];\n\t                });\n\t            },\n\t            show: function show() {\n\t                return this.each(function () {\n\t                    this.style.display == \"none\" && (this.style.display = '');\n\t                    if (getComputedStyle(this, '').getPropertyValue(\"display\") == \"none\") this.style.display = defaultDisplay(this.nodeName);\n\t                });\n\t            },\n\t            replaceWith: function replaceWith(newContent) {\n\t                return this.before(newContent).remove();\n\t            },\n\t            wrap: function wrap(structure) {\n\t                var func = isFunction(structure);\n\t                if (this[0] && !func) var dom = $(structure).get(0),\n\t                    clone = dom.parentNode || this.length > 1;\n\t\n\t                return this.each(function (index) {\n\t                    $(this).wrapAll(func ? structure.call(this, index) : clone ? dom.cloneNode(true) : dom);\n\t                });\n\t            },\n\t            wrapAll: function wrapAll(structure) {\n\t                if (this[0]) {\n\t                    $(this[0]).before(structure = $(structure));\n\t                    var children;\n\t\n\t                    while ((children = structure.children()).length) {\n\t                        structure = children.first();\n\t                    }$(structure).append(this);\n\t                }\n\t                return this;\n\t            },\n\t            wrapInner: function wrapInner(structure) {\n\t                var func = isFunction(structure);\n\t                return this.each(function (index) {\n\t                    var self = $(this),\n\t                        contents = self.contents(),\n\t                        dom = func ? structure.call(this, index) : structure;\n\t                    contents.length ? contents.wrapAll(dom) : self.append(dom);\n\t                });\n\t            },\n\t            unwrap: function unwrap() {\n\t                this.parent().each(function () {\n\t                    $(this).replaceWith($(this).children());\n\t                });\n\t                return this;\n\t            },\n\t            clone: function clone() {\n\t                return this.map(function () {\n\t                    return this.cloneNode(true);\n\t                });\n\t            },\n\t            hide: function hide() {\n\t                return this.css(\"display\", \"none\");\n\t            },\n\t            toggle: function toggle(setting) {\n\t                return this.each(function () {\n\t                    var el = $(this);(setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide();\n\t                });\n\t            },\n\t            prev: function prev(selector) {\n\t                return $(this.pluck('previousElementSibling')).filter(selector || '*');\n\t            },\n\t            next: function next(selector) {\n\t                return $(this.pluck('nextElementSibling')).filter(selector || '*');\n\t            },\n\t            html: function html(_html) {\n\t                return 0 in arguments ? this.each(function (idx) {\n\t                    var originHtml = this.innerHTML;\n\t                    $(this).empty().append(funcArg(this, _html, idx, originHtml));\n\t                }) : 0 in this ? this[0].innerHTML : null;\n\t            },\n\t            text: function text(_text) {\n\t                return 0 in arguments ? this.each(function (idx) {\n\t                    var newText = funcArg(this, _text, idx, this.textContent);\n\t                    this.textContent = newText == null ? '' : '' + newText;\n\t                }) : 0 in this ? this.pluck('textContent').join(\"\") : null;\n\t            },\n\t            attr: function attr(name, value) {\n\t                var result;\n\t                return typeof name == 'string' && !(1 in arguments) ? 0 in this && this[0].nodeType == 1 && (result = this[0].getAttribute(name)) != null ? result : undefined : this.each(function (idx) {\n\t                    if (this.nodeType !== 1) return;\n\t                    if (isObject(name)) for (key in name) {\n\t                        setAttribute(this, key, name[key]);\n\t                    } else setAttribute(this, name, funcArg(this, value, idx, this.getAttribute(name)));\n\t                });\n\t            },\n\t            removeAttr: function removeAttr(name) {\n\t                return this.each(function () {\n\t                    this.nodeType === 1 && name.split(' ').forEach(function (attribute) {\n\t                        setAttribute(this, attribute);\n\t                    }, this);\n\t                });\n\t            },\n\t            prop: function prop(name, value) {\n\t                name = propMap[name] || name;\n\t                return 1 in arguments ? this.each(function (idx) {\n\t                    this[name] = funcArg(this, value, idx, this[name]);\n\t                }) : this[0] && this[0][name];\n\t            },\n\t            removeProp: function removeProp(name) {\n\t                name = propMap[name] || name;\n\t                return this.each(function () {\n\t                    delete this[name];\n\t                });\n\t            },\n\t            data: function data(name, value) {\n\t                var attrName = 'data-' + name.replace(capitalRE, '-$1').toLowerCase();\n\t\n\t                var data = 1 in arguments ? this.attr(attrName, value) : this.attr(attrName);\n\t\n\t                return data !== null ? deserializeValue(data) : undefined;\n\t            },\n\t            val: function val(value) {\n\t                if (0 in arguments) {\n\t                    if (value == null) value = \"\";\n\t                    return this.each(function (idx) {\n\t                        this.value = funcArg(this, value, idx, this.value);\n\t                    });\n\t                } else {\n\t                    return this[0] && (this[0].multiple ? $(this[0]).find('option').filter(function () {\n\t                        return this.selected;\n\t                    }).pluck('value') : this[0].value);\n\t                }\n\t            },\n\t            offset: function offset(coordinates) {\n\t                if (coordinates) return this.each(function (index) {\n\t                    var $this = $(this),\n\t                        coords = funcArg(this, coordinates, index, $this.offset()),\n\t                        parentOffset = $this.offsetParent().offset(),\n\t                        props = {\n\t                        top: coords.top - parentOffset.top,\n\t                        left: coords.left - parentOffset.left\n\t                    };\n\t\n\t                    if ($this.css('position') == 'static') props['position'] = 'relative';\n\t                    $this.css(props);\n\t                });\n\t                if (!this.length) return null;\n\t                if (document.documentElement !== this[0] && !$.contains(document.documentElement, this[0])) return { top: 0, left: 0 };\n\t                var obj = this[0].getBoundingClientRect();\n\t                return {\n\t                    left: obj.left + window.pageXOffset,\n\t                    top: obj.top + window.pageYOffset,\n\t                    width: Math.round(obj.width),\n\t                    height: Math.round(obj.height)\n\t                };\n\t            },\n\t            css: function css(property, value) {\n\t                if (arguments.length < 2) {\n\t                    var element = this[0];\n\t                    if (typeof property == 'string') {\n\t                        if (!element) return;\n\t                        return element.style[camelize(property)] || getComputedStyle(element, '').getPropertyValue(property);\n\t                    } else if (isArray(property)) {\n\t                        if (!element) return;\n\t                        var props = {};\n\t                        var computedStyle = getComputedStyle(element, '');\n\t                        $.each(property, function (_, prop) {\n\t                            props[prop] = element.style[camelize(prop)] || computedStyle.getPropertyValue(prop);\n\t                        });\n\t                        return props;\n\t                    }\n\t                }\n\t\n\t                var css = '';\n\t                if (type(property) == 'string') {\n\t                    if (!value && value !== 0) this.each(function () {\n\t                        this.style.removeProperty(dasherize(property));\n\t                    });else css = dasherize(property) + \":\" + maybeAddPx(property, value);\n\t                } else {\n\t                    for (key in property) {\n\t                        if (!property[key] && property[key] !== 0) this.each(function () {\n\t                            this.style.removeProperty(dasherize(key));\n\t                        });else css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';';\n\t                    }\n\t                }\n\t\n\t                return this.each(function () {\n\t                    this.style.cssText += ';' + css;\n\t                });\n\t            },\n\t            index: function index(element) {\n\t                return element ? this.indexOf($(element)[0]) : this.parent().children().indexOf(this[0]);\n\t            },\n\t            hasClass: function hasClass(name) {\n\t                if (!name) return false;\n\t                return emptyArray.some.call(this, function (el) {\n\t                    return this.test(className(el));\n\t                }, classRE(name));\n\t            },\n\t            addClass: function addClass(name) {\n\t                if (!name) return this;\n\t                return this.each(function (idx) {\n\t                    if (!('className' in this)) return;\n\t                    classList = [];\n\t                    var cls = className(this),\n\t                        newName = funcArg(this, name, idx, cls);\n\t                    newName.split(/\\s+/g).forEach(function (klass) {\n\t                        if (!$(this).hasClass(klass)) classList.push(klass);\n\t                    }, this);\n\t                    classList.length && className(this, cls + (cls ? \" \" : \"\") + classList.join(\" \"));\n\t                });\n\t            },\n\t            removeClass: function removeClass(name) {\n\t                return this.each(function (idx) {\n\t                    if (!('className' in this)) return;\n\t                    if (name === undefined) return className(this, '');\n\t                    classList = className(this);\n\t                    funcArg(this, name, idx, classList).split(/\\s+/g).forEach(function (klass) {\n\t                        classList = classList.replace(classRE(klass), \" \");\n\t                    });\n\t                    className(this, classList.trim());\n\t                });\n\t            },\n\t            toggleClass: function toggleClass(name, when) {\n\t                if (!name) return this;\n\t                return this.each(function (idx) {\n\t                    var $this = $(this),\n\t                        names = funcArg(this, name, idx, className(this));\n\t                    names.split(/\\s+/g).forEach(function (klass) {\n\t                        (when === undefined ? !$this.hasClass(klass) : when) ? $this.addClass(klass) : $this.removeClass(klass);\n\t                    });\n\t                });\n\t            },\n\t            scrollTop: function scrollTop(value) {\n\t                if (!this.length) return;\n\t                var hasScrollTop = 'scrollTop' in this[0];\n\t                if (value === undefined) return hasScrollTop ? this[0].scrollTop : this[0].pageYOffset;\n\t                return this.each(hasScrollTop ? function () {\n\t                    this.scrollTop = value;\n\t                } : function () {\n\t                    this.scrollTo(this.scrollX, value);\n\t                });\n\t            },\n\t            scrollLeft: function scrollLeft(value) {\n\t                if (!this.length) return;\n\t                var hasScrollLeft = 'scrollLeft' in this[0];\n\t                if (value === undefined) return hasScrollLeft ? this[0].scrollLeft : this[0].pageXOffset;\n\t                return this.each(hasScrollLeft ? function () {\n\t                    this.scrollLeft = value;\n\t                } : function () {\n\t                    this.scrollTo(value, this.scrollY);\n\t                });\n\t            },\n\t            position: function position() {\n\t                if (!this.length) return;\n\t\n\t                var elem = this[0],\n\t                    offsetParent = this.offsetParent(),\n\t                    offset = this.offset(),\n\t                    parentOffset = rootNodeRE.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset();\n\t\n\t                offset.top -= parseFloat($(elem).css('margin-top')) || 0;\n\t                offset.left -= parseFloat($(elem).css('margin-left')) || 0;\n\t\n\t                parentOffset.top += parseFloat($(offsetParent[0]).css('border-top-width')) || 0;\n\t                parentOffset.left += parseFloat($(offsetParent[0]).css('border-left-width')) || 0;\n\t\n\t                return {\n\t                    top: offset.top - parentOffset.top,\n\t                    left: offset.left - parentOffset.left\n\t                };\n\t            },\n\t            offsetParent: function offsetParent() {\n\t                return this.map(function () {\n\t                    var parent = this.offsetParent || document.body;\n\t                    while (parent && !rootNodeRE.test(parent.nodeName) && $(parent).css(\"position\") == \"static\") {\n\t                        parent = parent.offsetParent;\n\t                    }return parent;\n\t                });\n\t            }\n\t        };\n\t\n\t        $.fn.detach = $.fn.remove;['width', 'height'].forEach(function (dimension) {\n\t            var dimensionProperty = dimension.replace(/./, function (m) {\n\t                return m[0].toUpperCase();\n\t            });\n\t\n\t            $.fn[dimension] = function (value) {\n\t                var offset,\n\t                    el = this[0];\n\t                if (value === undefined) return isWindow(el) ? el['inner' + dimensionProperty] : isDocument(el) ? el.documentElement['scroll' + dimensionProperty] : (offset = this.offset()) && offset[dimension];else return this.each(function (idx) {\n\t                    el = $(this);\n\t                    el.css(dimension, funcArg(this, value, idx, el[dimension]()));\n\t                });\n\t            };\n\t        });\n\t\n\t        function traverseNode(node, fun) {\n\t            fun(node);\n\t            for (var i = 0, len = node.childNodes.length; i < len; i++) {\n\t                traverseNode(node.childNodes[i], fun);\n\t            }\n\t        }\n\t\n\t        adjacencyOperators.forEach(function (operator, operatorIndex) {\n\t            var inside = operatorIndex % 2;\n\t\n\t            $.fn[operator] = function () {\n\t                var argType,\n\t                    nodes = $.map(arguments, function (arg) {\n\t                    var arr = [];\n\t                    argType = type(arg);\n\t                    if (argType == \"array\") {\n\t                        arg.forEach(function (el) {\n\t                            if (el.nodeType !== undefined) return arr.push(el);else if ($.zepto.isZ(el)) return arr = arr.concat(el.get());\n\t                            arr = arr.concat(zepto.fragment(el));\n\t                        });\n\t                        return arr;\n\t                    }\n\t                    return argType == \"object\" || arg == null ? arg : zepto.fragment(arg);\n\t                }),\n\t                    parent,\n\t                    copyByClone = this.length > 1;\n\t                if (nodes.length < 1) return this;\n\t\n\t                return this.each(function (_, target) {\n\t                    parent = inside ? target : target.parentNode;\n\t\n\t                    target = operatorIndex == 0 ? target.nextSibling : operatorIndex == 1 ? target.firstChild : operatorIndex == 2 ? target : null;\n\t\n\t                    var parentInDocument = $.contains(document.documentElement, parent);\n\t\n\t                    nodes.forEach(function (node) {\n\t                        if (copyByClone) node = node.cloneNode(true);else if (!parent) return $(node).remove();\n\t\n\t                        parent.insertBefore(node, target);\n\t                        if (parentInDocument) traverseNode(node, function (el) {\n\t                            if (el.nodeName != null && el.nodeName.toUpperCase() === 'SCRIPT' && (!el.type || el.type === 'text/javascript') && !el.src) {\n\t                                var target = el.ownerDocument ? el.ownerDocument.defaultView : window;\n\t                                target['eval'].call(target, el.innerHTML);\n\t                            }\n\t                        });\n\t                    });\n\t                });\n\t            };\n\t\n\t            $.fn[inside ? operator + 'To' : 'insert' + (operatorIndex ? 'Before' : 'After')] = function (html) {\n\t                $(html)[operator](this);\n\t                return this;\n\t            };\n\t        });\n\t\n\t        zepto.Z.prototype = Z.prototype = $.fn;\n\t\n\t        zepto.uniq = uniq;\n\t        zepto.deserializeValue = deserializeValue;\n\t        $.zepto = zepto;\n\t\n\t        return $;\n\t    }();\n\t\n\t    window.Zepto = Zepto;\n\t    window.$ === undefined && (window.$ = Zepto);(function ($) {\n\t        var _zid = 1,\n\t            undefined,\n\t            slice = Array.prototype.slice,\n\t            isFunction = $.isFunction,\n\t            isString = function isString(obj) {\n\t            return typeof obj == 'string';\n\t        },\n\t            handlers = {},\n\t            specialEvents = {},\n\t            focusinSupported = 'onfocusin' in window,\n\t            focus = { focus: 'focusin', blur: 'focusout' },\n\t            hover = { mouseenter: 'mouseover', mouseleave: 'mouseout' };\n\t\n\t        specialEvents.click = specialEvents.mousedown = specialEvents.mouseup = specialEvents.mousemove = 'MouseEvents';\n\t\n\t        function zid(element) {\n\t            return element._zid || (element._zid = _zid++);\n\t        }\n\t        function findHandlers(element, event, fn, selector) {\n\t            event = parse(event);\n\t            if (event.ns) var matcher = matcherFor(event.ns);\n\t            return (handlers[zid(element)] || []).filter(function (handler) {\n\t                return handler && (!event.e || handler.e == event.e) && (!event.ns || matcher.test(handler.ns)) && (!fn || zid(handler.fn) === zid(fn)) && (!selector || handler.sel == selector);\n\t            });\n\t        }\n\t        function parse(event) {\n\t            var parts = ('' + event).split('.');\n\t            return { e: parts[0], ns: parts.slice(1).sort().join(' ') };\n\t        }\n\t        function matcherFor(ns) {\n\t            return new RegExp('(?:^| )' + ns.replace(' ', ' .* ?') + '(?: |$)');\n\t        }\n\t\n\t        function eventCapture(handler, captureSetting) {\n\t            return handler.del && !focusinSupported && handler.e in focus || !!captureSetting;\n\t        }\n\t\n\t        function realEvent(type) {\n\t            return hover[type] || focusinSupported && focus[type] || type;\n\t        }\n\t\n\t        function add(element, events, fn, data, selector, delegator, capture) {\n\t            var id = zid(element),\n\t                set = handlers[id] || (handlers[id] = []);\n\t            events.split(/\\s/).forEach(function (event) {\n\t                if (event == 'ready') return $(document).ready(fn);\n\t                var handler = parse(event);\n\t                handler.fn = fn;\n\t                handler.sel = selector;\n\t\n\t                if (handler.e in hover) fn = function fn(e) {\n\t                    var related = e.relatedTarget;\n\t                    if (!related || related !== this && !$.contains(this, related)) return handler.fn.apply(this, arguments);\n\t                };\n\t                handler.del = delegator;\n\t                var callback = delegator || fn;\n\t                handler.proxy = function (e) {\n\t                    e = compatible(e);\n\t                    if (e.isImmediatePropagationStopped()) return;\n\t                    e.data = data;\n\t                    var result = callback.apply(element, e._args == undefined ? [e] : [e].concat(e._args));\n\t                    if (result === false) e.preventDefault(), e.stopPropagation();\n\t                    return result;\n\t                };\n\t                handler.i = set.length;\n\t                set.push(handler);\n\t                if ('addEventListener' in element) element.addEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture));\n\t            });\n\t        }\n\t        function remove(element, events, fn, selector, capture) {\n\t            var id = zid(element);(events || '').split(/\\s/).forEach(function (event) {\n\t                findHandlers(element, event, fn, selector).forEach(function (handler) {\n\t                    delete handlers[id][handler.i];\n\t                    if ('removeEventListener' in element) element.removeEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture));\n\t                });\n\t            });\n\t        }\n\t\n\t        $.event = { add: add, remove: remove };\n\t\n\t        $.proxy = function (fn, context) {\n\t            var args = 2 in arguments && slice.call(arguments, 2);\n\t            if (isFunction(fn)) {\n\t                var proxyFn = function proxyFn() {\n\t                    return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\n\t                };\n\t                proxyFn._zid = zid(fn);\n\t                return proxyFn;\n\t            } else if (isString(context)) {\n\t                if (args) {\n\t                    args.unshift(fn[context], fn);\n\t                    return $.proxy.apply(null, args);\n\t                } else {\n\t                    return $.proxy(fn[context], fn);\n\t                }\n\t            } else {\n\t                throw new TypeError(\"expected function\");\n\t            }\n\t        };\n\t\n\t        $.fn.bind = function (event, data, callback) {\n\t            return this.on(event, data, callback);\n\t        };\n\t        $.fn.unbind = function (event, callback) {\n\t            return this.off(event, callback);\n\t        };\n\t        $.fn.one = function (event, selector, data, callback) {\n\t            return this.on(event, selector, data, callback, 1);\n\t        };\n\t\n\t        var returnTrue = function returnTrue() {\n\t            return true;\n\t        },\n\t            returnFalse = function returnFalse() {\n\t            return false;\n\t        },\n\t            ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$|webkitMovement[XY]$)/,\n\t            eventMethods = {\n\t            preventDefault: 'isDefaultPrevented',\n\t            stopImmediatePropagation: 'isImmediatePropagationStopped',\n\t            stopPropagation: 'isPropagationStopped'\n\t        };\n\t\n\t        function compatible(event, source) {\n\t            if (source || !event.isDefaultPrevented) {\n\t                source || (source = event);\n\t\n\t                $.each(eventMethods, function (name, predicate) {\n\t                    var sourceMethod = source[name];\n\t                    event[name] = function () {\n\t                        this[predicate] = returnTrue;\n\t                        return sourceMethod && sourceMethod.apply(source, arguments);\n\t                    };\n\t                    event[predicate] = returnFalse;\n\t                });\n\t\n\t                event.timeStamp || (event.timeStamp = Date.now());\n\t\n\t                if (source.defaultPrevented !== undefined ? source.defaultPrevented : 'returnValue' in source ? source.returnValue === false : source.getPreventDefault && source.getPreventDefault()) event.isDefaultPrevented = returnTrue;\n\t            }\n\t            return event;\n\t        }\n\t\n\t        function createProxy(event) {\n\t            var key,\n\t                proxy = { originalEvent: event };\n\t            for (key in event) {\n\t                if (!ignoreProperties.test(key) && event[key] !== undefined) proxy[key] = event[key];\n\t            }return compatible(proxy, event);\n\t        }\n\t\n\t        $.fn.delegate = function (selector, event, callback) {\n\t            return this.on(event, selector, callback);\n\t        };\n\t        $.fn.undelegate = function (selector, event, callback) {\n\t            return this.off(event, selector, callback);\n\t        };\n\t\n\t        $.fn.live = function (event, callback) {\n\t            $(document.body).delegate(this.selector, event, callback);\n\t            return this;\n\t        };\n\t        $.fn.die = function (event, callback) {\n\t            $(document.body).undelegate(this.selector, event, callback);\n\t            return this;\n\t        };\n\t\n\t        $.fn.on = function (event, selector, data, callback, one) {\n\t            var autoRemove,\n\t                delegator,\n\t                $this = this;\n\t            if (event && !isString(event)) {\n\t                $.each(event, function (type, fn) {\n\t                    $this.on(type, selector, data, fn, one);\n\t                });\n\t                return $this;\n\t            }\n\t\n\t            if (!isString(selector) && !isFunction(callback) && callback !== false) callback = data, data = selector, selector = undefined;\n\t            if (callback === undefined || data === false) callback = data, data = undefined;\n\t\n\t            if (callback === false) callback = returnFalse;\n\t\n\t            return $this.each(function (_, element) {\n\t                if (one) autoRemove = function autoRemove(e) {\n\t                    remove(element, e.type, callback);\n\t                    return callback.apply(this, arguments);\n\t                };\n\t\n\t                if (selector) delegator = function delegator(e) {\n\t                    var evt,\n\t                        match = $(e.target).closest(selector, element).get(0);\n\t                    if (match && match !== element) {\n\t                        evt = $.extend(createProxy(e), { currentTarget: match, liveFired: element });\n\t                        return (autoRemove || callback).apply(match, [evt].concat(slice.call(arguments, 1)));\n\t                    }\n\t                };\n\t\n\t                add(element, event, callback, data, selector, delegator || autoRemove);\n\t            });\n\t        };\n\t        $.fn.off = function (event, selector, callback) {\n\t            var $this = this;\n\t            if (event && !isString(event)) {\n\t                $.each(event, function (type, fn) {\n\t                    $this.off(type, selector, fn);\n\t                });\n\t                return $this;\n\t            }\n\t\n\t            if (!isString(selector) && !isFunction(callback) && callback !== false) callback = selector, selector = undefined;\n\t\n\t            if (callback === false) callback = returnFalse;\n\t\n\t            return $this.each(function () {\n\t                remove(this, event, callback, selector);\n\t            });\n\t        };\n\t\n\t        $.fn.trigger = function (event, args) {\n\t            event = isString(event) || $.isPlainObject(event) ? $.Event(event) : compatible(event);\n\t            event._args = args;\n\t            return this.each(function () {\n\t                if (event.type in focus && typeof this[event.type] == \"function\") this[event.type]();else if ('dispatchEvent' in this) this.dispatchEvent(event);else $(this).triggerHandler(event, args);\n\t            });\n\t        };\n\t\n\t        $.fn.triggerHandler = function (event, args) {\n\t            var e, result;\n\t            this.each(function (i, element) {\n\t                e = createProxy(isString(event) ? $.Event(event) : event);\n\t                e._args = args;\n\t                e.target = element;\n\t                $.each(findHandlers(element, event.type || event), function (i, handler) {\n\t                    result = handler.proxy(e);\n\t                    if (e.isImmediatePropagationStopped()) return false;\n\t                });\n\t            });\n\t            return result;\n\t        };('focusin focusout focus blur load resize scroll unload click dblclick ' + 'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' + 'change select keydown keypress keyup error').split(' ').forEach(function (event) {\n\t            $.fn[event] = function (callback) {\n\t                return 0 in arguments ? this.bind(event, callback) : this.trigger(event);\n\t            };\n\t        });\n\t\n\t        $.Event = function (type, props) {\n\t            if (!isString(type)) props = type, type = props.type;\n\t            var event = document.createEvent(specialEvents[type] || 'Events'),\n\t                bubbles = true;\n\t            if (props) for (var name in props) {\n\t                name == 'bubbles' ? bubbles = !!props[name] : event[name] = props[name];\n\t            }event.initEvent(type, bubbles, true);\n\t            return compatible(event);\n\t        };\n\t    })(Zepto);(function ($) {\n\t        var jsonpID = +new Date(),\n\t            document = window.document,\n\t            key,\n\t            name,\n\t            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n\t            scriptTypeRE = /^(?:text|application)\\/javascript/i,\n\t            xmlTypeRE = /^(?:text|application)\\/xml/i,\n\t            jsonType = 'application/json',\n\t            htmlType = 'text/html',\n\t            blankRE = /^\\s*$/,\n\t            originAnchor = document.createElement('a');\n\t\n\t        originAnchor.href = window.location.href;\n\t\n\t        function triggerAndReturn(context, eventName, data) {\n\t            var event = $.Event(eventName);\n\t            $(context).trigger(event, data);\n\t            return !event.isDefaultPrevented();\n\t        }\n\t\n\t        function triggerGlobal(settings, context, eventName, data) {\n\t            if (settings.global) return triggerAndReturn(context || document, eventName, data);\n\t        }\n\t\n\t        $.active = 0;\n\t\n\t        function ajaxStart(settings) {\n\t            if (settings.global && $.active++ === 0) triggerGlobal(settings, null, 'ajaxStart');\n\t        }\n\t        function ajaxStop(settings) {\n\t            if (settings.global && ! --$.active) triggerGlobal(settings, null, 'ajaxStop');\n\t        }\n\t\n\t        function ajaxBeforeSend(xhr, settings) {\n\t            var context = settings.context;\n\t            if (settings.beforeSend.call(context, xhr, settings) === false || triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false) return false;\n\t\n\t            triggerGlobal(settings, context, 'ajaxSend', [xhr, settings]);\n\t        }\n\t        function ajaxSuccess(data, xhr, settings, deferred) {\n\t            var context = settings.context,\n\t                status = 'success';\n\t            settings.success.call(context, data, status, xhr);\n\t            if (deferred) deferred.resolveWith(context, [data, status, xhr]);\n\t            triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data]);\n\t            ajaxComplete(status, xhr, settings);\n\t        }\n\t\n\t        function ajaxError(error, type, xhr, settings, deferred) {\n\t            var context = settings.context;\n\t            settings.error.call(context, xhr, type, error);\n\t            if (deferred) deferred.rejectWith(context, [xhr, type, error]);\n\t            triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type]);\n\t            ajaxComplete(type, xhr, settings);\n\t        }\n\t\n\t        function ajaxComplete(status, xhr, settings) {\n\t            var context = settings.context;\n\t            settings.complete.call(context, xhr, status);\n\t            triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings]);\n\t            ajaxStop(settings);\n\t        }\n\t\n\t        function ajaxDataFilter(data, type, settings) {\n\t            if (settings.dataFilter == empty) return data;\n\t            var context = settings.context;\n\t            return settings.dataFilter.call(context, data, type);\n\t        }\n\t\n\t        function empty() {}\n\t\n\t        $.ajaxJSONP = function (options, deferred) {\n\t            if (!('type' in options)) return $.ajax(options);\n\t\n\t            var _callbackName = options.jsonpCallback,\n\t                callbackName = ($.isFunction(_callbackName) ? _callbackName() : _callbackName) || 'Zepto' + jsonpID++,\n\t                script = document.createElement('script'),\n\t                originalCallback = window[callbackName],\n\t                responseData,\n\t                abort = function abort(errorType) {\n\t                $(script).triggerHandler('error', errorType || 'abort');\n\t            },\n\t                xhr = { abort: abort },\n\t                abortTimeout;\n\t\n\t            if (deferred) deferred.promise(xhr);\n\t\n\t            $(script).on('load error', function (e, errorType) {\n\t                clearTimeout(abortTimeout);\n\t                $(script).off().remove();\n\t\n\t                if (e.type == 'error' || !responseData) {\n\t                    ajaxError(null, errorType || 'error', xhr, options, deferred);\n\t                } else {\n\t                    ajaxSuccess(responseData[0], xhr, options, deferred);\n\t                }\n\t\n\t                window[callbackName] = originalCallback;\n\t                if (responseData && $.isFunction(originalCallback)) originalCallback(responseData[0]);\n\t\n\t                originalCallback = responseData = undefined;\n\t            });\n\t\n\t            if (ajaxBeforeSend(xhr, options) === false) {\n\t                abort('abort');\n\t                return xhr;\n\t            }\n\t\n\t            window[callbackName] = function () {\n\t                responseData = arguments;\n\t            };\n\t\n\t            script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName);\n\t            document.head.appendChild(script);\n\t\n\t            if (options.timeout > 0) abortTimeout = setTimeout(function () {\n\t                abort('timeout');\n\t            }, options.timeout);\n\t\n\t            return xhr;\n\t        };\n\t\n\t        $.ajaxSettings = {\n\t            type: 'GET',\n\t\n\t            beforeSend: empty,\n\t\n\t            success: empty,\n\t\n\t            error: empty,\n\t\n\t            complete: empty,\n\t\n\t            context: null,\n\t\n\t            global: true,\n\t\n\t            xhr: function xhr() {\n\t                return new window.XMLHttpRequest();\n\t            },\n\t\n\t            accepts: {\n\t                script: 'text/javascript, application/javascript, application/x-javascript',\n\t                json: jsonType,\n\t                xml: 'application/xml, text/xml',\n\t                html: htmlType,\n\t                text: 'text/plain'\n\t            },\n\t\n\t            crossDomain: false,\n\t\n\t            timeout: 0,\n\t\n\t            processData: true,\n\t\n\t            cache: true,\n\t\n\t            dataFilter: empty\n\t        };\n\t\n\t        function mimeToDataType(mime) {\n\t            if (mime) mime = mime.split(';', 2)[0];\n\t            return mime && (mime == htmlType ? 'html' : mime == jsonType ? 'json' : scriptTypeRE.test(mime) ? 'script' : xmlTypeRE.test(mime) && 'xml') || 'text';\n\t        }\n\t\n\t        function appendQuery(url, query) {\n\t            if (query == '') return url;\n\t            return (url + '&' + query).replace(/[&?]{1,2}/, '?');\n\t        }\n\t\n\t        function serializeData(options) {\n\t            if (options.processData && options.data && $.type(options.data) != \"string\") options.data = $.param(options.data, options.traditional);\n\t            if (options.data && (!options.type || options.type.toUpperCase() == 'GET' || 'jsonp' == options.dataType)) options.url = appendQuery(options.url, options.data), options.data = undefined;\n\t        }\n\t\n\t        $.ajax = function (options) {\n\t            var settings = $.extend({}, options || {}),\n\t                deferred = $.Deferred && $.Deferred(),\n\t                urlAnchor,\n\t                hashIndex;\n\t            for (key in $.ajaxSettings) {\n\t                if (settings[key] === undefined) settings[key] = $.ajaxSettings[key];\n\t            }ajaxStart(settings);\n\t\n\t            if (!settings.crossDomain) {\n\t                urlAnchor = document.createElement('a');\n\t                urlAnchor.href = settings.url;\n\t\n\t                urlAnchor.href = urlAnchor.href;\n\t                settings.crossDomain = originAnchor.protocol + '//' + originAnchor.host !== urlAnchor.protocol + '//' + urlAnchor.host;\n\t            }\n\t\n\t            if (!settings.url) settings.url = window.location.toString();\n\t            if ((hashIndex = settings.url.indexOf('#')) > -1) settings.url = settings.url.slice(0, hashIndex);\n\t            serializeData(settings);\n\t\n\t            var dataType = settings.dataType,\n\t                hasPlaceholder = /\\?.+=\\?/.test(settings.url);\n\t            if (hasPlaceholder) dataType = 'jsonp';\n\t\n\t            if (settings.cache === false || (!options || options.cache !== true) && ('script' == dataType || 'jsonp' == dataType)) settings.url = appendQuery(settings.url, '_=' + Date.now());\n\t\n\t            if ('jsonp' == dataType) {\n\t                if (!hasPlaceholder) settings.url = appendQuery(settings.url, settings.jsonp ? settings.jsonp + '=?' : settings.jsonp === false ? '' : 'callback=?');\n\t                return $.ajaxJSONP(settings, deferred);\n\t            }\n\t\n\t            var mime = settings.accepts[dataType],\n\t                headers = {},\n\t                setHeader = function setHeader(name, value) {\n\t                headers[name.toLowerCase()] = [name, value];\n\t            },\n\t                protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\n\t                xhr = settings.xhr(),\n\t                nativeSetHeader = xhr.setRequestHeader,\n\t                abortTimeout;\n\t\n\t            if (deferred) deferred.promise(xhr);\n\t\n\t            if (!settings.crossDomain) setHeader('X-Requested-With', 'XMLHttpRequest');\n\t            setHeader('Accept', mime || '*/*');\n\t            if (mime = settings.mimeType || mime) {\n\t                if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0];\n\t                xhr.overrideMimeType && xhr.overrideMimeType(mime);\n\t            }\n\t            if (settings.contentType || settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET') setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded');\n\t\n\t            if (settings.headers) for (name in settings.headers) {\n\t                setHeader(name, settings.headers[name]);\n\t            }xhr.setRequestHeader = setHeader;\n\t\n\t            xhr.onreadystatechange = function () {\n\t                if (xhr.readyState == 4) {\n\t                    xhr.onreadystatechange = empty;\n\t                    clearTimeout(abortTimeout);\n\t                    var result,\n\t                        error = false;\n\t                    if (xhr.status >= 200 && xhr.status < 300 || xhr.status == 304 || xhr.status == 0 && protocol == 'file:') {\n\t                        dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'));\n\t\n\t                        if (xhr.responseType == 'arraybuffer' || xhr.responseType == 'blob') result = xhr.response;else {\n\t                            result = xhr.responseText;\n\t\n\t                            try {\n\t                                result = ajaxDataFilter(result, dataType, settings);\n\t                                if (dataType == 'script') (1, eval)(result);else if (dataType == 'xml') result = xhr.responseXML;else if (dataType == 'json') result = blankRE.test(result) ? null : $.parseJSON(result);\n\t                            } catch (e) {\n\t                                error = e;\n\t                            }\n\t\n\t                            if (error) return ajaxError(error, 'parsererror', xhr, settings, deferred);\n\t                        }\n\t\n\t                        ajaxSuccess(result, xhr, settings, deferred);\n\t                    } else {\n\t                        ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred);\n\t                    }\n\t                }\n\t            };\n\t\n\t            if (ajaxBeforeSend(xhr, settings) === false) {\n\t                xhr.abort();\n\t                ajaxError(null, 'abort', xhr, settings, deferred);\n\t                return xhr;\n\t            }\n\t\n\t            var async = 'async' in settings ? settings.async : true;\n\t            xhr.open(settings.type, settings.url, async, settings.username, settings.password);\n\t\n\t            if (settings.xhrFields) for (name in settings.xhrFields) {\n\t                xhr[name] = settings.xhrFields[name];\n\t            }for (name in headers) {\n\t                nativeSetHeader.apply(xhr, headers[name]);\n\t            }if (settings.timeout > 0) abortTimeout = setTimeout(function () {\n\t                xhr.onreadystatechange = empty;\n\t                xhr.abort();\n\t                ajaxError(null, 'timeout', xhr, settings, deferred);\n\t            }, settings.timeout);\n\t\n\t            xhr.send(settings.data ? settings.data : null);\n\t            return xhr;\n\t        };\n\t\n\t        function parseArguments(url, data, success, dataType) {\n\t            if ($.isFunction(data)) dataType = success, success = data, data = undefined;\n\t            if (!$.isFunction(success)) dataType = success, success = undefined;\n\t            return {\n\t                url: url,\n\t                data: data,\n\t                success: success,\n\t                dataType: dataType\n\t            };\n\t        }\n\t\n\t        $.get = function () {\n\t            return $.ajax(parseArguments.apply(null, arguments));\n\t        };\n\t\n\t        $.post = function () {\n\t            var options = parseArguments.apply(null, arguments);\n\t            options.type = 'POST';\n\t            return $.ajax(options);\n\t        };\n\t\n\t        $.getJSON = function () {\n\t            var options = parseArguments.apply(null, arguments);\n\t            options.dataType = 'json';\n\t            return $.ajax(options);\n\t        };\n\t\n\t        $.fn.load = function (url, data, success) {\n\t            if (!this.length) return this;\n\t            var self = this,\n\t                parts = url.split(/\\s/),\n\t                selector,\n\t                options = parseArguments(url, data, success),\n\t                callback = options.success;\n\t            if (parts.length > 1) options.url = parts[0], selector = parts[1];\n\t            options.success = function (response) {\n\t                self.html(selector ? $('<div>').html(response.replace(rscript, \"\")).find(selector) : response);\n\t                callback && callback.apply(self, arguments);\n\t            };\n\t            $.ajax(options);\n\t            return this;\n\t        };\n\t\n\t        var escape = encodeURIComponent;\n\t\n\t        function serialize(params, obj, traditional, scope) {\n\t            var type,\n\t                array = $.isArray(obj),\n\t                hash = $.isPlainObject(obj);\n\t            $.each(obj, function (key, value) {\n\t                type = $.type(value);\n\t                if (scope) key = traditional ? scope : scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']';\n\t\n\t                if (!scope && array) params.add(value.name, value.value);else if (type == \"array\" || !traditional && type == \"object\") serialize(params, value, traditional, key);else params.add(key, value);\n\t            });\n\t        }\n\t\n\t        $.param = function (obj, traditional) {\n\t            var params = [];\n\t            params.add = function (key, value) {\n\t                if ($.isFunction(value)) value = value();\n\t                if (value == null) value = \"\";\n\t                this.push(escape(key) + '=' + escape(value));\n\t            };\n\t            serialize(params, obj, traditional);\n\t            return params.join('&').replace(/%20/g, '+');\n\t        };\n\t    })(Zepto);(function ($) {\n\t        $.fn.serializeArray = function () {\n\t            var name,\n\t                type,\n\t                result = [],\n\t                add = function add(value) {\n\t                if (value.forEach) return value.forEach(add);\n\t                result.push({ name: name, value: value });\n\t            };\n\t            if (this[0]) $.each(this[0].elements, function (_, field) {\n\t                type = field.type, name = field.name;\n\t                if (name && field.nodeName.toLowerCase() != 'fieldset' && !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' && (type != 'radio' && type != 'checkbox' || field.checked)) add($(field).val());\n\t            });\n\t            return result;\n\t        };\n\t\n\t        $.fn.serialize = function () {\n\t            var result = [];\n\t            this.serializeArray().forEach(function (elm) {\n\t                result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value));\n\t            });\n\t            return result.join('&');\n\t        };\n\t\n\t        $.fn.submit = function (callback) {\n\t            if (0 in arguments) this.bind('submit', callback);else if (this.length) {\n\t                var event = $.Event('submit');\n\t                this.eq(0).trigger(event);\n\t                if (!event.isDefaultPrevented()) this.get(0).submit();\n\t            }\n\t            return this;\n\t        };\n\t    })(Zepto);(function () {\n\t        try {\n\t            getComputedStyle(undefined);\n\t        } catch (e) {\n\t            var nativeGetComputedStyle = getComputedStyle;\n\t            window.getComputedStyle = function (element, pseudoElement) {\n\t                try {\n\t                    return nativeGetComputedStyle(element, pseudoElement);\n\t                } catch (e) {\n\t                    return null;\n\t                }\n\t            };\n\t        }\n\t    })();\n\t    return Zepto;\n\t});\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** /zepto.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c7a03441a5a223fa17b3\n **/","/* Zepto v1.2.0 - zepto event ajax form ie - zeptojs.com/license */\n(function(global, factory) {\n    if (typeof define === 'function' && define.amd)\n        define(function() { return factory(global) })\n    else\n        factory(global)\n}(window, function(window) {\n    var Zepto = (function() {\n        var undefined, key, $, classList, emptyArray = [], concat = emptyArray.concat, filter = emptyArray.filter, slice = emptyArray.slice,\n            document = window.document,\n            elementDisplay = {}, classCache = {},\n            cssNumber = { 'column-count': 1, 'columns': 1, 'font-weight': 1, 'line-height': 1,'opacity': 1, 'z-index': 1, 'zoom': 1 },\n            fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\n            singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\n            tagExpanderRE = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/ig,\n            rootNodeRE = /^(?:body|html)$/i,\n            capitalRE = /([A-Z])/g,\n\n        // special attributes that should be get/set via method calls\n            methodAttributes = ['val', 'css', 'html', 'text', 'data', 'width', 'height', 'offset'],\n\n            adjacencyOperators = [ 'after', 'prepend', 'before', 'append' ],\n            table = document.createElement('table'),\n            tableRow = document.createElement('tr'),\n            containers = {\n                'tr': document.createElement('tbody'),\n                'tbody': table, 'thead': table, 'tfoot': table,\n                'td': tableRow, 'th': tableRow,\n                '*': document.createElement('div')\n            },\n            readyRE = /complete|loaded|interactive/,\n            simpleSelectorRE = /^[\\w-]*$/,\n            class2type = {},\n            toString = class2type.toString,\n            zepto = {},\n            camelize, uniq,\n            tempParent = document.createElement('div'),\n            propMap = {\n                'tabindex': 'tabIndex',\n                'readonly': 'readOnly',\n                'for': 'htmlFor',\n                'class': 'className',\n                'maxlength': 'maxLength',\n                'cellspacing': 'cellSpacing',\n                'cellpadding': 'cellPadding',\n                'rowspan': 'rowSpan',\n                'colspan': 'colSpan',\n                'usemap': 'useMap',\n                'frameborder': 'frameBorder',\n                'contenteditable': 'contentEditable'\n            },\n            isArray = Array.isArray ||\n                function(object){ return object instanceof Array }\n\n        zepto.matches = function(element, selector) {\n            if (!selector || !element || element.nodeType !== 1) return false\n            var matchesSelector = element.matches || element.webkitMatchesSelector ||\n                element.mozMatchesSelector || element.oMatchesSelector ||\n                element.matchesSelector\n            if (matchesSelector) return matchesSelector.call(element, selector)\n            // fall back to performing a selector:\n            var match, parent = element.parentNode, temp = !parent\n            if (temp) (parent = tempParent).appendChild(element)\n            match = ~zepto.qsa(parent, selector).indexOf(element)\n            temp && tempParent.removeChild(element)\n            return match\n        }\n\n        function type(obj) {\n            return obj == null ? String(obj) :\n            class2type[toString.call(obj)] || \"object\"\n        }\n\n        function isFunction(value) { return type(value) == \"function\" }\n        function isWindow(obj)     { return obj != null && obj == obj.window }\n        function isDocument(obj)   { return obj != null && obj.nodeType == obj.DOCUMENT_NODE }\n        function isObject(obj)     { return type(obj) == \"object\" }\n        function isPlainObject(obj) {\n            return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype\n        }\n\n        function likeArray(obj) {\n            var length = !!obj && 'length' in obj && obj.length,\n                type = $.type(obj)\n\n            return 'function' != type && !isWindow(obj) && (\n                    'array' == type || length === 0 ||\n                    (typeof length == 'number' && length > 0 && (length - 1) in obj)\n                )\n        }\n\n        function compact(array) { return filter.call(array, function(item){ return item != null }) }\n        function flatten(array) { return array.length > 0 ? $.fn.concat.apply([], array) : array }\n        camelize = function(str){ return str.replace(/-+(.)?/g, function(match, chr){ return chr ? chr.toUpperCase() : '' }) }\n        function dasherize(str) {\n            return str.replace(/::/g, '/')\n                .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\n                .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\n                .replace(/_/g, '-')\n                .toLowerCase()\n        }\n        uniq = function(array){ return filter.call(array, function(item, idx){ return array.indexOf(item) == idx }) }\n\n        function classRE(name) {\n            return name in classCache ?\n                classCache[name] : (classCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'))\n        }\n\n        function maybeAddPx(name, value) {\n            return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\n        }\n\n        function defaultDisplay(nodeName) {\n            var element, display\n            if (!elementDisplay[nodeName]) {\n                element = document.createElement(nodeName)\n                document.body.appendChild(element)\n                display = getComputedStyle(element, '').getPropertyValue(\"display\")\n                element.parentNode.removeChild(element)\n                display == \"none\" && (display = \"block\")\n                elementDisplay[nodeName] = display\n            }\n            return elementDisplay[nodeName]\n        }\n\n        function children(element) {\n            return 'children' in element ?\n                slice.call(element.children) :\n                $.map(element.childNodes, function(node){ if (node.nodeType == 1) return node })\n        }\n\n        function Z(dom, selector) {\n            var i, len = dom ? dom.length : 0\n            for (i = 0; i < len; i++) this[i] = dom[i]\n            this.length = len\n            this.selector = selector || ''\n        }\n\n        // `$.zepto.fragment` takes a html string and an optional tag name\n        // to generate DOM nodes from the given html string.\n        // The generated DOM nodes are returned as an array.\n        // This function can be overridden in plugins for example to make\n        // it compatible with browsers that don't support the DOM fully.\n        zepto.fragment = function(html, name, properties) {\n            var dom, nodes, container\n\n            // A special case optimization for a single tag\n            if (singleTagRE.test(html)) dom = $(document.createElement(RegExp.$1))\n\n            if (!dom) {\n                if (html.replace) html = html.replace(tagExpanderRE, \"<$1></$2>\")\n                if (name === undefined) name = fragmentRE.test(html) && RegExp.$1\n                if (!(name in containers)) name = '*'\n\n                container = containers[name]\n                container.innerHTML = '' + html\n                dom = $.each(slice.call(container.childNodes), function(){\n                    container.removeChild(this)\n                })\n            }\n\n            if (isPlainObject(properties)) {\n                nodes = $(dom)\n                $.each(properties, function(key, value) {\n                    if (methodAttributes.indexOf(key) > -1) nodes[key](value)\n                    else nodes.attr(key, value)\n                })\n            }\n\n            return dom\n        }\n\n        // `$.zepto.Z` swaps out the prototype of the given `dom` array\n        // of nodes with `$.fn` and thus supplying all the Zepto functions\n        // to the array. This method can be overridden in plugins.\n        zepto.Z = function(dom, selector) {\n            return new Z(dom, selector)\n        }\n\n        // `$.zepto.isZ` should return `true` if the given object is a Zepto\n        // collection. This method can be overridden in plugins.\n        zepto.isZ = function(object) {\n            return object instanceof zepto.Z\n        }\n\n        // `$.zepto.init` is Zepto's counterpart to jQuery's `$.fn.init` and\n        // takes a CSS selector and an optional context (and handles various\n        // special cases).\n        // This method can be overridden in plugins.\n        zepto.init = function(selector, context) {\n            var dom\n            // If nothing given, return an empty Zepto collection\n            if (!selector) return zepto.Z()\n            // Optimize for string selectors\n            else if (typeof selector == 'string') {\n                selector = selector.trim()\n                // If it's a html fragment, create nodes from it\n                // Note: In both Chrome 21 and Firefox 15, DOM error 12\n                // is thrown if the fragment doesn't begin with <\n                if (selector[0] == '<' && fragmentRE.test(selector))\n                    dom = zepto.fragment(selector, RegExp.$1, context), selector = null\n                // If there's a context, create a collection on that context first, and select\n                // nodes from there\n                else if (context !== undefined) return $(context).find(selector)\n                // If it's a CSS selector, use it to select nodes.\n                else dom = zepto.qsa(document, selector)\n            }\n            // If a function is given, call it when the DOM is ready\n            else if (isFunction(selector)) return $(document).ready(selector)\n            // If a Zepto collection is given, just return it\n            else if (zepto.isZ(selector)) return selector\n            else {\n                // normalize array if an array of nodes is given\n                if (isArray(selector)) dom = compact(selector)\n                // Wrap DOM nodes.\n                else if (isObject(selector))\n                    dom = [selector], selector = null\n                // If it's a html fragment, create nodes from it\n                else if (fragmentRE.test(selector))\n                    dom = zepto.fragment(selector.trim(), RegExp.$1, context), selector = null\n                // If there's a context, create a collection on that context first, and select\n                // nodes from there\n                else if (context !== undefined) return $(context).find(selector)\n                // And last but no least, if it's a CSS selector, use it to select nodes.\n                else dom = zepto.qsa(document, selector)\n            }\n            // create a new Zepto collection from the nodes found\n            return zepto.Z(dom, selector)\n        }\n\n        // `$` will be the base `Zepto` object. When calling this\n        // function just call `$.zepto.init, which makes the implementation\n        // details of selecting nodes and creating Zepto collections\n        // patchable in plugins.\n        $ = function(selector, context){\n            return zepto.init(selector, context)\n        }\n\n        function extend(target, source, deep) {\n            for (key in source)\n                if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\n                    if (isPlainObject(source[key]) && !isPlainObject(target[key]))\n                        target[key] = {}\n                    if (isArray(source[key]) && !isArray(target[key]))\n                        target[key] = []\n                    extend(target[key], source[key], deep)\n                }\n                else if (source[key] !== undefined) target[key] = source[key]\n        }\n\n        // Copy all but undefined properties from one or more\n        // objects to the `target` object.\n        $.extend = function(target){\n            var deep, args = slice.call(arguments, 1)\n            if (typeof target == 'boolean') {\n                deep = target\n                target = args.shift()\n            }\n            args.forEach(function(arg){ extend(target, arg, deep) })\n            return target\n        }\n\n        // `$.zepto.qsa` is Zepto's CSS selector implementation which\n        // uses `document.querySelectorAll` and optimizes for some special cases, like `#id`.\n        // This method can be overridden in plugins.\n        zepto.qsa = function(element, selector){\n            var found,\n                maybeID = selector[0] == '#',\n                maybeClass = !maybeID && selector[0] == '.',\n                nameOnly = maybeID || maybeClass ? selector.slice(1) : selector, // Ensure that a 1 char tag name still gets checked\n                isSimple = simpleSelectorRE.test(nameOnly)\n            return (element.getElementById && isSimple && maybeID) ? // Safari DocumentFragment doesn't have getElementById\n                ( (found = element.getElementById(nameOnly)) ? [found] : [] ) :\n                (element.nodeType !== 1 && element.nodeType !== 9 && element.nodeType !== 11) ? [] :\n                    slice.call(\n                        isSimple && !maybeID && element.getElementsByClassName ? // DocumentFragment doesn't have getElementsByClassName/TagName\n                            maybeClass ? element.getElementsByClassName(nameOnly) : // If it's simple, it could be a class\n                                element.getElementsByTagName(selector) : // Or a tag\n                            element.querySelectorAll(selector) // Or it's not simple, and we need to query all\n                    )\n        }\n\n        function filtered(nodes, selector) {\n            return selector == null ? $(nodes) : $(nodes).filter(selector)\n        }\n\n        $.contains = document.documentElement.contains ?\n            function(parent, node) {\n                return parent !== node && parent.contains(node)\n            } :\n            function(parent, node) {\n                while (node && (node = node.parentNode))\n                    if (node === parent) return true\n                return false\n            }\n\n        function funcArg(context, arg, idx, payload) {\n            return isFunction(arg) ? arg.call(context, idx, payload) : arg\n        }\n\n        function setAttribute(node, name, value) {\n            value == null ? node.removeAttribute(name) : node.setAttribute(name, value)\n        }\n\n        // access className property while respecting SVGAnimatedString\n        function className(node, value){\n            var klass = node.className || '',\n                svg   = klass && klass.baseVal !== undefined\n\n            if (value === undefined) return svg ? klass.baseVal : klass\n            svg ? (klass.baseVal = value) : (node.className = value)\n        }\n\n        // \"true\"  => true\n        // \"false\" => false\n        // \"null\"  => null\n        // \"42\"    => 42\n        // \"42.5\"  => 42.5\n        // \"08\"    => \"08\"\n        // JSON    => parse if valid\n        // String  => self\n        function deserializeValue(value) {\n            try {\n                return value ?\n                value == \"true\" ||\n                ( value == \"false\" ? false :\n                    value == \"null\" ? null :\n                        +value + \"\" == value ? +value :\n                            /^[\\[\\{]/.test(value) ? $.parseJSON(value) :\n                                value )\n                    : value\n            } catch(e) {\n                return value\n            }\n        }\n\n        $.type = type\n        $.isFunction = isFunction\n        $.isWindow = isWindow\n        $.isArray = isArray\n        $.isPlainObject = isPlainObject\n\n        $.isEmptyObject = function(obj) {\n            var name\n            for (name in obj) return false\n            return true\n        }\n\n        $.isNumeric = function(val) {\n            var num = Number(val), type = typeof val\n            return val != null && type != 'boolean' &&\n                (type != 'string' || val.length) &&\n                !isNaN(num) && isFinite(num) || false\n        }\n\n        $.inArray = function(elem, array, i){\n            return emptyArray.indexOf.call(array, elem, i)\n        }\n\n        $.camelCase = camelize\n        $.trim = function(str) {\n            return str == null ? \"\" : String.prototype.trim.call(str)\n        }\n\n        // plugin compatibility\n        $.uuid = 0\n        $.support = { }\n        $.expr = { }\n        $.noop = function() {}\n\n        $.map = function(elements, callback){\n            var value, values = [], i, key\n            if (likeArray(elements))\n                for (i = 0; i < elements.length; i++) {\n                    value = callback(elements[i], i)\n                    if (value != null) values.push(value)\n                }\n            else\n                for (key in elements) {\n                    value = callback(elements[key], key)\n                    if (value != null) values.push(value)\n                }\n            return flatten(values)\n        }\n\n        $.each = function(elements, callback){\n            var i, key\n            if (likeArray(elements)) {\n                for (i = 0; i < elements.length; i++)\n                    if (callback.call(elements[i], i, elements[i]) === false) return elements\n            } else {\n                for (key in elements)\n                    if (callback.call(elements[key], key, elements[key]) === false) return elements\n            }\n\n            return elements\n        }\n\n        $.grep = function(elements, callback){\n            return filter.call(elements, callback)\n        }\n\n        if (window.JSON) $.parseJSON = JSON.parse\n\n        // Populate the class2type map\n        $.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n            class2type[ \"[object \" + name + \"]\" ] = name.toLowerCase()\n        })\n\n        // Define methods that will be available on all\n        // Zepto collections\n        $.fn = {\n            constructor: zepto.Z,\n            length: 0,\n\n            // Because a collection acts like an array\n            // copy over these useful array functions.\n            forEach: emptyArray.forEach,\n            reduce: emptyArray.reduce,\n            push: emptyArray.push,\n            sort: emptyArray.sort,\n            splice: emptyArray.splice,\n            indexOf: emptyArray.indexOf,\n            concat: function(){\n                var i, value, args = []\n                for (i = 0; i < arguments.length; i++) {\n                    value = arguments[i]\n                    args[i] = zepto.isZ(value) ? value.toArray() : value\n                }\n                return concat.apply(zepto.isZ(this) ? this.toArray() : this, args)\n            },\n\n            // `map` and `slice` in the jQuery API work differently\n            // from their array counterparts\n            map: function(fn){\n                return $($.map(this, function(el, i){ return fn.call(el, i, el) }))\n            },\n            slice: function(){\n                return $(slice.apply(this, arguments))\n            },\n\n            ready: function(callback){\n                // need to check if document.body exists for IE as that browser reports\n                // document ready when it hasn't yet created the body element\n                if (readyRE.test(document.readyState) && document.body) callback($)\n                else document.addEventListener('DOMContentLoaded', function(){ callback($) }, false)\n                return this\n            },\n            get: function(idx){\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\n            },\n            toArray: function(){ return this.get() },\n            size: function(){\n                return this.length\n            },\n            remove: function(){\n                return this.each(function(){\n                    if (this.parentNode != null)\n                        this.parentNode.removeChild(this)\n                })\n            },\n            each: function(callback){\n                emptyArray.every.call(this, function(el, idx){\n                    return callback.call(el, idx, el) !== false\n                })\n                return this\n            },\n            filter: function(selector){\n                if (isFunction(selector)) return this.not(this.not(selector))\n                return $(filter.call(this, function(element){\n                    return zepto.matches(element, selector)\n                }))\n            },\n            add: function(selector,context){\n                return $(uniq(this.concat($(selector,context))))\n            },\n            is: function(selector){\n                return this.length > 0 && zepto.matches(this[0], selector)\n            },\n            not: function(selector){\n                var nodes=[]\n                if (isFunction(selector) && selector.call !== undefined)\n                    this.each(function(idx){\n                        if (!selector.call(this,idx)) nodes.push(this)\n                    })\n                else {\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\n                        (likeArray(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\n                    this.forEach(function(el){\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\n                    })\n                }\n                return $(nodes)\n            },\n            has: function(selector){\n                return this.filter(function(){\n                    return isObject(selector) ?\n                        $.contains(this, selector) :\n                        $(this).find(selector).size()\n                })\n            },\n            eq: function(idx){\n                return idx === -1 ? this.slice(idx) : this.slice(idx, + idx + 1)\n            },\n            first: function(){\n                var el = this[0]\n                return el && !isObject(el) ? el : $(el)\n            },\n            last: function(){\n                var el = this[this.length - 1]\n                return el && !isObject(el) ? el : $(el)\n            },\n            find: function(selector){\n                var result, $this = this\n                if (!selector) result = $()\n                else if (typeof selector == 'object')\n                    result = $(selector).filter(function(){\n                        var node = this\n                        return emptyArray.some.call($this, function(parent){\n                            return $.contains(parent, node)\n                        })\n                    })\n                else if (this.length == 1) result = $(zepto.qsa(this[0], selector))\n                else result = this.map(function(){ return zepto.qsa(this, selector) })\n                return result\n            },\n            closest: function(selector, context){\n                var nodes = [], collection = typeof selector == 'object' && $(selector)\n                this.each(function(_, node){\n                    while (node && !(collection ? collection.indexOf(node) >= 0 : zepto.matches(node, selector)))\n                        node = node !== context && !isDocument(node) && node.parentNode\n                    if (node && nodes.indexOf(node) < 0) nodes.push(node)\n                })\n                return $(nodes)\n            },\n            parents: function(selector){\n                var ancestors = [], nodes = this\n                while (nodes.length > 0)\n                    nodes = $.map(nodes, function(node){\n                        if ((node = node.parentNode) && !isDocument(node) && ancestors.indexOf(node) < 0) {\n                            ancestors.push(node)\n                            return node\n                        }\n                    })\n                return filtered(ancestors, selector)\n            },\n            parent: function(selector){\n                return filtered(uniq(this.pluck('parentNode')), selector)\n            },\n            children: function(selector){\n                return filtered(this.map(function(){ return children(this) }), selector)\n            },\n            contents: function() {\n                return this.map(function() { return this.contentDocument || slice.call(this.childNodes) })\n            },\n            siblings: function(selector){\n                return filtered(this.map(function(i, el){\n                    return filter.call(children(el.parentNode), function(child){ return child!==el })\n                }), selector)\n            },\n            empty: function(){\n                return this.each(function(){ this.innerHTML = '' })\n            },\n            // `pluck` is borrowed from Prototype.js\n            pluck: function(property){\n                return $.map(this, function(el){ return el[property] })\n            },\n            show: function(){\n                return this.each(function(){\n                    this.style.display == \"none\" && (this.style.display = '')\n                    if (getComputedStyle(this, '').getPropertyValue(\"display\") == \"none\")\n                        this.style.display = defaultDisplay(this.nodeName)\n                })\n            },\n            replaceWith: function(newContent){\n                return this.before(newContent).remove()\n            },\n            wrap: function(structure){\n                var func = isFunction(structure)\n                if (this[0] && !func)\n                    var dom   = $(structure).get(0),\n                        clone = dom.parentNode || this.length > 1\n\n                return this.each(function(index){\n                    $(this).wrapAll(\n                        func ? structure.call(this, index) :\n                            clone ? dom.cloneNode(true) : dom\n                    )\n                })\n            },\n            wrapAll: function(structure){\n                if (this[0]) {\n                    $(this[0]).before(structure = $(structure))\n                    var children\n                    // drill down to the inmost element\n                    while ((children = structure.children()).length) structure = children.first()\n                    $(structure).append(this)\n                }\n                return this\n            },\n            wrapInner: function(structure){\n                var func = isFunction(structure)\n                return this.each(function(index){\n                    var self = $(this), contents = self.contents(),\n                        dom  = func ? structure.call(this, index) : structure\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\n                })\n            },\n            unwrap: function(){\n                this.parent().each(function(){\n                    $(this).replaceWith($(this).children())\n                })\n                return this\n            },\n            clone: function(){\n                return this.map(function(){ return this.cloneNode(true) })\n            },\n            hide: function(){\n                return this.css(\"display\", \"none\")\n            },\n            toggle: function(setting){\n                return this.each(function(){\n                    var el = $(this)\n                        ;(setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show() : el.hide()\n                })\n            },\n            prev: function(selector){ return $(this.pluck('previousElementSibling')).filter(selector || '*') },\n            next: function(selector){ return $(this.pluck('nextElementSibling')).filter(selector || '*') },\n            html: function(html){\n                return 0 in arguments ?\n                    this.each(function(idx){\n                        var originHtml = this.innerHTML\n                        $(this).empty().append( funcArg(this, html, idx, originHtml) )\n                    }) :\n                    (0 in this ? this[0].innerHTML : null)\n            },\n            text: function(text){\n                return 0 in arguments ?\n                    this.each(function(idx){\n                        var newText = funcArg(this, text, idx, this.textContent)\n                        this.textContent = newText == null ? '' : ''+newText\n                    }) :\n                    (0 in this ? this.pluck('textContent').join(\"\") : null)\n            },\n            attr: function(name, value){\n                var result\n                return (typeof name == 'string' && !(1 in arguments)) ?\n                    (0 in this && this[0].nodeType == 1 && (result = this[0].getAttribute(name)) != null ? result : undefined) :\n                    this.each(function(idx){\n                        if (this.nodeType !== 1) return\n                        if (isObject(name)) for (key in name) setAttribute(this, key, name[key])\n                        else setAttribute(this, name, funcArg(this, value, idx, this.getAttribute(name)))\n                    })\n            },\n            removeAttr: function(name){\n                return this.each(function(){ this.nodeType === 1 && name.split(' ').forEach(function(attribute){\n                    setAttribute(this, attribute)\n                }, this)})\n            },\n            prop: function(name, value){\n                name = propMap[name] || name\n                return (1 in arguments) ?\n                    this.each(function(idx){\n                        this[name] = funcArg(this, value, idx, this[name])\n                    }) :\n                    (this[0] && this[0][name])\n            },\n            removeProp: function(name){\n                name = propMap[name] || name\n                return this.each(function(){ delete this[name] })\n            },\n            data: function(name, value){\n                var attrName = 'data-' + name.replace(capitalRE, '-$1').toLowerCase()\n\n                var data = (1 in arguments) ?\n                    this.attr(attrName, value) :\n                    this.attr(attrName)\n\n                return data !== null ? deserializeValue(data) : undefined\n            },\n            val: function(value){\n                if (0 in arguments) {\n                    if (value == null) value = \"\"\n                    return this.each(function(idx){\n                        this.value = funcArg(this, value, idx, this.value)\n                    })\n                } else {\n                    return this[0] && (this[0].multiple ?\n                            $(this[0]).find('option').filter(function(){ return this.selected }).pluck('value') :\n                            this[0].value)\n                }\n            },\n            offset: function(coordinates){\n                if (coordinates) return this.each(function(index){\n                    var $this = $(this),\n                        coords = funcArg(this, coordinates, index, $this.offset()),\n                        parentOffset = $this.offsetParent().offset(),\n                        props = {\n                            top:  coords.top  - parentOffset.top,\n                            left: coords.left - parentOffset.left\n                        }\n\n                    if ($this.css('position') == 'static') props['position'] = 'relative'\n                    $this.css(props)\n                })\n                if (!this.length) return null\n                if (document.documentElement !== this[0] && !$.contains(document.documentElement, this[0]))\n                    return {top: 0, left: 0}\n                var obj = this[0].getBoundingClientRect()\n                return {\n                    left: obj.left + window.pageXOffset,\n                    top: obj.top + window.pageYOffset,\n                    width: Math.round(obj.width),\n                    height: Math.round(obj.height)\n                }\n            },\n            css: function(property, value){\n                if (arguments.length < 2) {\n                    var element = this[0]\n                    if (typeof property == 'string') {\n                        if (!element) return\n                        return element.style[camelize(property)] || getComputedStyle(element, '').getPropertyValue(property)\n                    } else if (isArray(property)) {\n                        if (!element) return\n                        var props = {}\n                        var computedStyle = getComputedStyle(element, '')\n                        $.each(property, function(_, prop){\n                            props[prop] = (element.style[camelize(prop)] || computedStyle.getPropertyValue(prop))\n                        })\n                        return props\n                    }\n                }\n\n                var css = ''\n                if (type(property) == 'string') {\n                    if (!value && value !== 0)\n                        this.each(function(){ this.style.removeProperty(dasherize(property)) })\n                    else\n                        css = dasherize(property) + \":\" + maybeAddPx(property, value)\n                } else {\n                    for (key in property)\n                        if (!property[key] && property[key] !== 0)\n                            this.each(function(){ this.style.removeProperty(dasherize(key)) })\n                        else\n                            css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\n                }\n\n                return this.each(function(){ this.style.cssText += ';' + css })\n            },\n            index: function(element){\n                return element ? this.indexOf($(element)[0]) : this.parent().children().indexOf(this[0])\n            },\n            hasClass: function(name){\n                if (!name) return false\n                return emptyArray.some.call(this, function(el){\n                    return this.test(className(el))\n                }, classRE(name))\n            },\n            addClass: function(name){\n                if (!name) return this\n                return this.each(function(idx){\n                    if (!('className' in this)) return\n                    classList = []\n                    var cls = className(this), newName = funcArg(this, name, idx, cls)\n                    newName.split(/\\s+/g).forEach(function(klass){\n                        if (!$(this).hasClass(klass)) classList.push(klass)\n                    }, this)\n                    classList.length && className(this, cls + (cls ? \" \" : \"\") + classList.join(\" \"))\n                })\n            },\n            removeClass: function(name){\n                return this.each(function(idx){\n                    if (!('className' in this)) return\n                    if (name === undefined) return className(this, '')\n                    classList = className(this)\n                    funcArg(this, name, idx, classList).split(/\\s+/g).forEach(function(klass){\n                        classList = classList.replace(classRE(klass), \" \")\n                    })\n                    className(this, classList.trim())\n                })\n            },\n            toggleClass: function(name, when){\n                if (!name) return this\n                return this.each(function(idx){\n                    var $this = $(this), names = funcArg(this, name, idx, className(this))\n                    names.split(/\\s+/g).forEach(function(klass){\n                        (when === undefined ? !$this.hasClass(klass) : when) ?\n                            $this.addClass(klass) : $this.removeClass(klass)\n                    })\n                })\n            },\n            scrollTop: function(value){\n                if (!this.length) return\n                var hasScrollTop = 'scrollTop' in this[0]\n                if (value === undefined) return hasScrollTop ? this[0].scrollTop : this[0].pageYOffset\n                return this.each(hasScrollTop ?\n                    function(){ this.scrollTop = value } :\n                    function(){ this.scrollTo(this.scrollX, value) })\n            },\n            scrollLeft: function(value){\n                if (!this.length) return\n                var hasScrollLeft = 'scrollLeft' in this[0]\n                if (value === undefined) return hasScrollLeft ? this[0].scrollLeft : this[0].pageXOffset\n                return this.each(hasScrollLeft ?\n                    function(){ this.scrollLeft = value } :\n                    function(){ this.scrollTo(value, this.scrollY) })\n            },\n            position: function() {\n                if (!this.length) return\n\n                var elem = this[0],\n                // Get *real* offsetParent\n                    offsetParent = this.offsetParent(),\n                // Get correct offsets\n                    offset       = this.offset(),\n                    parentOffset = rootNodeRE.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset()\n\n                // Subtract element margins\n                // note: when an element has margin: auto the offsetLeft and marginLeft\n                // are the same in Safari causing offset.left to incorrectly be 0\n                offset.top  -= parseFloat( $(elem).css('margin-top') ) || 0\n                offset.left -= parseFloat( $(elem).css('margin-left') ) || 0\n\n                // Add offsetParent borders\n                parentOffset.top  += parseFloat( $(offsetParent[0]).css('border-top-width') ) || 0\n                parentOffset.left += parseFloat( $(offsetParent[0]).css('border-left-width') ) || 0\n\n                // Subtract the two offsets\n                return {\n                    top:  offset.top  - parentOffset.top,\n                    left: offset.left - parentOffset.left\n                }\n            },\n            offsetParent: function() {\n                return this.map(function(){\n                    var parent = this.offsetParent || document.body\n                    while (parent && !rootNodeRE.test(parent.nodeName) && $(parent).css(\"position\") == \"static\")\n                        parent = parent.offsetParent\n                    return parent\n                })\n            }\n        }\n\n        // for now\n        $.fn.detach = $.fn.remove\n\n        // Generate the `width` and `height` functions\n        ;['width', 'height'].forEach(function(dimension){\n            var dimensionProperty =\n                dimension.replace(/./, function(m){ return m[0].toUpperCase() })\n\n            $.fn[dimension] = function(value){\n                var offset, el = this[0]\n                if (value === undefined) return isWindow(el) ? el['inner' + dimensionProperty] :\n                    isDocument(el) ? el.documentElement['scroll' + dimensionProperty] :\n                    (offset = this.offset()) && offset[dimension]\n                else return this.each(function(idx){\n                    el = $(this)\n                    el.css(dimension, funcArg(this, value, idx, el[dimension]()))\n                })\n            }\n        })\n\n        function traverseNode(node, fun) {\n            fun(node)\n            for (var i = 0, len = node.childNodes.length; i < len; i++)\n                traverseNode(node.childNodes[i], fun)\n        }\n\n        // Generate the `after`, `prepend`, `before`, `append`,\n        // `insertAfter`, `insertBefore`, `appendTo`, and `prependTo` methods.\n        adjacencyOperators.forEach(function(operator, operatorIndex) {\n            var inside = operatorIndex % 2 //=> prepend, append\n\n            $.fn[operator] = function(){\n                // arguments can be nodes, arrays of nodes, Zepto objects and HTML strings\n                var argType, nodes = $.map(arguments, function(arg) {\n                        var arr = []\n                        argType = type(arg)\n                        if (argType == \"array\") {\n                            arg.forEach(function(el) {\n                                if (el.nodeType !== undefined) return arr.push(el)\n                                else if ($.zepto.isZ(el)) return arr = arr.concat(el.get())\n                                arr = arr.concat(zepto.fragment(el))\n                            })\n                            return arr\n                        }\n                        return argType == \"object\" || arg == null ?\n                            arg : zepto.fragment(arg)\n                    }),\n                    parent, copyByClone = this.length > 1\n                if (nodes.length < 1) return this\n\n                return this.each(function(_, target){\n                    parent = inside ? target : target.parentNode\n\n                    // convert all methods to a \"before\" operation\n                    target = operatorIndex == 0 ? target.nextSibling :\n                        operatorIndex == 1 ? target.firstChild :\n                            operatorIndex == 2 ? target :\n                                null\n\n                    var parentInDocument = $.contains(document.documentElement, parent)\n\n                    nodes.forEach(function(node){\n                        if (copyByClone) node = node.cloneNode(true)\n                        else if (!parent) return $(node).remove()\n\n                        parent.insertBefore(node, target)\n                        if (parentInDocument) traverseNode(node, function(el){\n                            if (el.nodeName != null && el.nodeName.toUpperCase() === 'SCRIPT' &&\n                                (!el.type || el.type === 'text/javascript') && !el.src){\n                                var target = el.ownerDocument ? el.ownerDocument.defaultView : window\n                                target['eval'].call(target, el.innerHTML)\n                            }\n                        })\n                    })\n                })\n            }\n\n            // after    => insertAfter\n            // prepend  => prependTo\n            // before   => insertBefore\n            // append   => appendTo\n            $.fn[inside ? operator+'To' : 'insert'+(operatorIndex ? 'Before' : 'After')] = function(html){\n                $(html)[operator](this)\n                return this\n            }\n        })\n\n        zepto.Z.prototype = Z.prototype = $.fn\n\n        // Export internal API functions in the `$.zepto` namespace\n        zepto.uniq = uniq\n        zepto.deserializeValue = deserializeValue\n        $.zepto = zepto\n\n        return $\n    })()\n\n    window.Zepto = Zepto\n    window.$ === undefined && (window.$ = Zepto)\n\n    ;(function($){\n        var _zid = 1, undefined,\n            slice = Array.prototype.slice,\n            isFunction = $.isFunction,\n            isString = function(obj){ return typeof obj == 'string' },\n            handlers = {},\n            specialEvents={},\n            focusinSupported = 'onfocusin' in window,\n            focus = { focus: 'focusin', blur: 'focusout' },\n            hover = { mouseenter: 'mouseover', mouseleave: 'mouseout' }\n\n        specialEvents.click = specialEvents.mousedown = specialEvents.mouseup = specialEvents.mousemove = 'MouseEvents'\n\n        function zid(element) {\n            return element._zid || (element._zid = _zid++)\n        }\n        function findHandlers(element, event, fn, selector) {\n            event = parse(event)\n            if (event.ns) var matcher = matcherFor(event.ns)\n            return (handlers[zid(element)] || []).filter(function(handler) {\n                return handler\n                    && (!event.e  || handler.e == event.e)\n                    && (!event.ns || matcher.test(handler.ns))\n                    && (!fn       || zid(handler.fn) === zid(fn))\n                    && (!selector || handler.sel == selector)\n            })\n        }\n        function parse(event) {\n            var parts = ('' + event).split('.')\n            return {e: parts[0], ns: parts.slice(1).sort().join(' ')}\n        }\n        function matcherFor(ns) {\n            return new RegExp('(?:^| )' + ns.replace(' ', ' .* ?') + '(?: |$)')\n        }\n\n        function eventCapture(handler, captureSetting) {\n            return handler.del &&\n                (!focusinSupported && (handler.e in focus)) ||\n                !!captureSetting\n        }\n\n        function realEvent(type) {\n            return hover[type] || (focusinSupported && focus[type]) || type\n        }\n\n        function add(element, events, fn, data, selector, delegator, capture){\n            var id = zid(element), set = (handlers[id] || (handlers[id] = []))\n            events.split(/\\s/).forEach(function(event){\n                if (event == 'ready') return $(document).ready(fn)\n                var handler   = parse(event)\n                handler.fn    = fn\n                handler.sel   = selector\n                // emulate mouseenter, mouseleave\n                if (handler.e in hover) fn = function(e){\n                    var related = e.relatedTarget\n                    if (!related || (related !== this && !$.contains(this, related)))\n                        return handler.fn.apply(this, arguments)\n                }\n                handler.del   = delegator\n                var callback  = delegator || fn\n                handler.proxy = function(e){\n                    e = compatible(e)\n                    if (e.isImmediatePropagationStopped()) return\n                    e.data = data\n                    var result = callback.apply(element, e._args == undefined ? [e] : [e].concat(e._args))\n                    if (result === false) e.preventDefault(), e.stopPropagation()\n                    return result\n                }\n                handler.i = set.length\n                set.push(handler)\n                if ('addEventListener' in element)\n                    element.addEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))\n            })\n        }\n        function remove(element, events, fn, selector, capture){\n            var id = zid(element)\n                ;(events || '').split(/\\s/).forEach(function(event){\n                findHandlers(element, event, fn, selector).forEach(function(handler){\n                    delete handlers[id][handler.i]\n                    if ('removeEventListener' in element)\n                        element.removeEventListener(realEvent(handler.e), handler.proxy, eventCapture(handler, capture))\n                })\n            })\n        }\n\n        $.event = { add: add, remove: remove }\n\n        $.proxy = function(fn, context) {\n            var args = (2 in arguments) && slice.call(arguments, 2)\n            if (isFunction(fn)) {\n                var proxyFn = function(){ return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments) }\n                proxyFn._zid = zid(fn)\n                return proxyFn\n            } else if (isString(context)) {\n                if (args) {\n                    args.unshift(fn[context], fn)\n                    return $.proxy.apply(null, args)\n                } else {\n                    return $.proxy(fn[context], fn)\n                }\n            } else {\n                throw new TypeError(\"expected function\")\n            }\n        }\n\n        $.fn.bind = function(event, data, callback){\n            return this.on(event, data, callback)\n        }\n        $.fn.unbind = function(event, callback){\n            return this.off(event, callback)\n        }\n        $.fn.one = function(event, selector, data, callback){\n            return this.on(event, selector, data, callback, 1)\n        }\n\n        var returnTrue = function(){return true},\n            returnFalse = function(){return false},\n            ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$|webkitMovement[XY]$)/,\n            eventMethods = {\n                preventDefault: 'isDefaultPrevented',\n                stopImmediatePropagation: 'isImmediatePropagationStopped',\n                stopPropagation: 'isPropagationStopped'\n            }\n\n        function compatible(event, source) {\n            if (source || !event.isDefaultPrevented) {\n                source || (source = event)\n\n                $.each(eventMethods, function(name, predicate) {\n                    var sourceMethod = source[name]\n                    event[name] = function(){\n                        this[predicate] = returnTrue\n                        return sourceMethod && sourceMethod.apply(source, arguments)\n                    }\n                    event[predicate] = returnFalse\n                })\n\n                event.timeStamp || (event.timeStamp = Date.now())\n\n                if (source.defaultPrevented !== undefined ? source.defaultPrevented :\n                        'returnValue' in source ? source.returnValue === false :\n                        source.getPreventDefault && source.getPreventDefault())\n                    event.isDefaultPrevented = returnTrue\n            }\n            return event\n        }\n\n        function createProxy(event) {\n            var key, proxy = { originalEvent: event }\n            for (key in event)\n                if (!ignoreProperties.test(key) && event[key] !== undefined) proxy[key] = event[key]\n\n            return compatible(proxy, event)\n        }\n\n        $.fn.delegate = function(selector, event, callback){\n            return this.on(event, selector, callback)\n        }\n        $.fn.undelegate = function(selector, event, callback){\n            return this.off(event, selector, callback)\n        }\n\n        $.fn.live = function(event, callback){\n            $(document.body).delegate(this.selector, event, callback)\n            return this\n        }\n        $.fn.die = function(event, callback){\n            $(document.body).undelegate(this.selector, event, callback)\n            return this\n        }\n\n        $.fn.on = function(event, selector, data, callback, one){\n            var autoRemove, delegator, $this = this\n            if (event && !isString(event)) {\n                $.each(event, function(type, fn){\n                    $this.on(type, selector, data, fn, one)\n                })\n                return $this\n            }\n\n            if (!isString(selector) && !isFunction(callback) && callback !== false)\n                callback = data, data = selector, selector = undefined\n            if (callback === undefined || data === false)\n                callback = data, data = undefined\n\n            if (callback === false) callback = returnFalse\n\n            return $this.each(function(_, element){\n                if (one) autoRemove = function(e){\n                    remove(element, e.type, callback)\n                    return callback.apply(this, arguments)\n                }\n\n                if (selector) delegator = function(e){\n                    var evt, match = $(e.target).closest(selector, element).get(0)\n                    if (match && match !== element) {\n                        evt = $.extend(createProxy(e), {currentTarget: match, liveFired: element})\n                        return (autoRemove || callback).apply(match, [evt].concat(slice.call(arguments, 1)))\n                    }\n                }\n\n                add(element, event, callback, data, selector, delegator || autoRemove)\n            })\n        }\n        $.fn.off = function(event, selector, callback){\n            var $this = this\n            if (event && !isString(event)) {\n                $.each(event, function(type, fn){\n                    $this.off(type, selector, fn)\n                })\n                return $this\n            }\n\n            if (!isString(selector) && !isFunction(callback) && callback !== false)\n                callback = selector, selector = undefined\n\n            if (callback === false) callback = returnFalse\n\n            return $this.each(function(){\n                remove(this, event, callback, selector)\n            })\n        }\n\n        $.fn.trigger = function(event, args){\n            event = (isString(event) || $.isPlainObject(event)) ? $.Event(event) : compatible(event)\n            event._args = args\n            return this.each(function(){\n                // handle focus(), blur() by calling them directly\n                if (event.type in focus && typeof this[event.type] == \"function\") this[event.type]()\n                // items in the collection might not be DOM elements\n                else if ('dispatchEvent' in this) this.dispatchEvent(event)\n                else $(this).triggerHandler(event, args)\n            })\n        }\n\n        // triggers event handlers on current element just as if an event occurred,\n        // doesn't trigger an actual event, doesn't bubble\n        $.fn.triggerHandler = function(event, args){\n            var e, result\n            this.each(function(i, element){\n                e = createProxy(isString(event) ? $.Event(event) : event)\n                e._args = args\n                e.target = element\n                $.each(findHandlers(element, event.type || event), function(i, handler){\n                    result = handler.proxy(e)\n                    if (e.isImmediatePropagationStopped()) return false\n                })\n            })\n            return result\n        }\n\n        // shortcut methods for `.bind(event, fn)` for each event type\n        ;('focusin focusout focus blur load resize scroll unload click dblclick '+\n        'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave '+\n        'change select keydown keypress keyup error').split(' ').forEach(function(event) {\n            $.fn[event] = function(callback) {\n                return (0 in arguments) ?\n                    this.bind(event, callback) :\n                    this.trigger(event)\n            }\n        })\n\n        $.Event = function(type, props) {\n            if (!isString(type)) props = type, type = props.type\n            var event = document.createEvent(specialEvents[type] || 'Events'), bubbles = true\n            if (props) for (var name in props) (name == 'bubbles') ? (bubbles = !!props[name]) : (event[name] = props[name])\n            event.initEvent(type, bubbles, true)\n            return compatible(event)\n        }\n\n    })(Zepto)\n\n    ;(function($){\n        var jsonpID = +new Date(),\n            document = window.document,\n            key,\n            name,\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\n            jsonType = 'application/json',\n            htmlType = 'text/html',\n            blankRE = /^\\s*$/,\n            originAnchor = document.createElement('a')\n\n        originAnchor.href = window.location.href\n\n        // trigger a custom event and return false if it was cancelled\n        function triggerAndReturn(context, eventName, data) {\n            var event = $.Event(eventName)\n            $(context).trigger(event, data)\n            return !event.isDefaultPrevented()\n        }\n\n        // trigger an Ajax \"global\" event\n        function triggerGlobal(settings, context, eventName, data) {\n            if (settings.global) return triggerAndReturn(context || document, eventName, data)\n        }\n\n        // Number of active Ajax requests\n        $.active = 0\n\n        function ajaxStart(settings) {\n            if (settings.global && $.active++ === 0) triggerGlobal(settings, null, 'ajaxStart')\n        }\n        function ajaxStop(settings) {\n            if (settings.global && !(--$.active)) triggerGlobal(settings, null, 'ajaxStop')\n        }\n\n        // triggers an extra global event \"ajaxBeforeSend\" that's like \"ajaxSend\" but cancelable\n        function ajaxBeforeSend(xhr, settings) {\n            var context = settings.context\n            if (settings.beforeSend.call(context, xhr, settings) === false ||\n                triggerGlobal(settings, context, 'ajaxBeforeSend', [xhr, settings]) === false)\n                return false\n\n            triggerGlobal(settings, context, 'ajaxSend', [xhr, settings])\n        }\n        function ajaxSuccess(data, xhr, settings, deferred) {\n            var context = settings.context, status = 'success'\n            settings.success.call(context, data, status, xhr)\n            if (deferred) deferred.resolveWith(context, [data, status, xhr])\n            triggerGlobal(settings, context, 'ajaxSuccess', [xhr, settings, data])\n            ajaxComplete(status, xhr, settings)\n        }\n        // type: \"timeout\", \"error\", \"abort\", \"parsererror\"\n        function ajaxError(error, type, xhr, settings, deferred) {\n            var context = settings.context\n            settings.error.call(context, xhr, type, error)\n            if (deferred) deferred.rejectWith(context, [xhr, type, error])\n            triggerGlobal(settings, context, 'ajaxError', [xhr, settings, error || type])\n            ajaxComplete(type, xhr, settings)\n        }\n        // status: \"success\", \"notmodified\", \"error\", \"timeout\", \"abort\", \"parsererror\"\n        function ajaxComplete(status, xhr, settings) {\n            var context = settings.context\n            settings.complete.call(context, xhr, status)\n            triggerGlobal(settings, context, 'ajaxComplete', [xhr, settings])\n            ajaxStop(settings)\n        }\n\n        function ajaxDataFilter(data, type, settings) {\n            if (settings.dataFilter == empty) return data\n            var context = settings.context\n            return settings.dataFilter.call(context, data, type)\n        }\n\n        // Empty function, used as default callback\n        function empty() {}\n\n        $.ajaxJSONP = function(options, deferred){\n            if (!('type' in options)) return $.ajax(options)\n\n            var _callbackName = options.jsonpCallback,\n                callbackName = ($.isFunction(_callbackName) ?\n                        _callbackName() : _callbackName) || ('Zepto' + (jsonpID++)),\n                script = document.createElement('script'),\n                originalCallback = window[callbackName],\n                responseData,\n                abort = function(errorType) {\n                    $(script).triggerHandler('error', errorType || 'abort')\n                },\n                xhr = { abort: abort }, abortTimeout\n\n            if (deferred) deferred.promise(xhr)\n\n            $(script).on('load error', function(e, errorType){\n                clearTimeout(abortTimeout)\n                $(script).off().remove()\n\n                if (e.type == 'error' || !responseData) {\n                    ajaxError(null, errorType || 'error', xhr, options, deferred)\n                } else {\n                    ajaxSuccess(responseData[0], xhr, options, deferred)\n                }\n\n                window[callbackName] = originalCallback\n                if (responseData && $.isFunction(originalCallback))\n                    originalCallback(responseData[0])\n\n                originalCallback = responseData = undefined\n            })\n\n            if (ajaxBeforeSend(xhr, options) === false) {\n                abort('abort')\n                return xhr\n            }\n\n            window[callbackName] = function(){\n                responseData = arguments\n            }\n\n            script.src = options.url.replace(/\\?(.+)=\\?/, '?$1=' + callbackName)\n            document.head.appendChild(script)\n\n            if (options.timeout > 0) abortTimeout = setTimeout(function(){\n                abort('timeout')\n            }, options.timeout)\n\n            return xhr\n        }\n\n        $.ajaxSettings = {\n            // Default type of request\n            type: 'GET',\n            // Callback that is executed before request\n            beforeSend: empty,\n            // Callback that is executed if the request succeeds\n            success: empty,\n            // Callback that is executed the the server drops error\n            error: empty,\n            // Callback that is executed on request complete (both: error and success)\n            complete: empty,\n            // The context for the callbacks\n            context: null,\n            // Whether to trigger \"global\" Ajax events\n            global: true,\n            // Transport\n            xhr: function () {\n                return new window.XMLHttpRequest()\n            },\n            // MIME types mapping\n            // IIS returns Javascript as \"application/x-javascript\"\n            accepts: {\n                script: 'text/javascript, application/javascript, application/x-javascript',\n                json:   jsonType,\n                xml:    'application/xml, text/xml',\n                html:   htmlType,\n                text:   'text/plain'\n            },\n            // Whether the request is to another domain\n            crossDomain: false,\n            // Default timeout\n            timeout: 0,\n            // Whether data should be serialized to string\n            processData: true,\n            // Whether the browser should be allowed to cache GET responses\n            cache: true,\n            //Used to handle the raw response data of XMLHttpRequest.\n            //This is a pre-filtering function to sanitize the response.\n            //The sanitized response should be returned\n            dataFilter: empty\n        }\n\n        function mimeToDataType(mime) {\n            if (mime) mime = mime.split(';', 2)[0]\n            return mime && ( mime == htmlType ? 'html' :\n                    mime == jsonType ? 'json' :\n                        scriptTypeRE.test(mime) ? 'script' :\n                        xmlTypeRE.test(mime) && 'xml' ) || 'text'\n        }\n\n        function appendQuery(url, query) {\n            if (query == '') return url\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\n        }\n\n        // serialize payload and append it to the URL for GET requests\n        function serializeData(options) {\n            if (options.processData && options.data && $.type(options.data) != \"string\")\n                options.data = $.param(options.data, options.traditional)\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET' || 'jsonp' == options.dataType))\n                options.url = appendQuery(options.url, options.data), options.data = undefined\n        }\n\n        $.ajax = function(options){\n            var settings = $.extend({}, options || {}),\n                deferred = $.Deferred && $.Deferred(),\n                urlAnchor, hashIndex\n            for (key in $.ajaxSettings) if (settings[key] === undefined) settings[key] = $.ajaxSettings[key]\n\n            ajaxStart(settings)\n\n            if (!settings.crossDomain) {\n                urlAnchor = document.createElement('a')\n                urlAnchor.href = settings.url\n                // cleans up URL for .href (IE only), see https://github.com/madrobby/zepto/pull/1049\n                urlAnchor.href = urlAnchor.href\n                settings.crossDomain = (originAnchor.protocol + '//' + originAnchor.host) !== (urlAnchor.protocol + '//' + urlAnchor.host)\n            }\n\n            if (!settings.url) settings.url = window.location.toString()\n            if ((hashIndex = settings.url.indexOf('#')) > -1) settings.url = settings.url.slice(0, hashIndex)\n            serializeData(settings)\n\n            var dataType = settings.dataType, hasPlaceholder = /\\?.+=\\?/.test(settings.url)\n            if (hasPlaceholder) dataType = 'jsonp'\n\n            if (settings.cache === false || (\n                    (!options || options.cache !== true) &&\n                    ('script' == dataType || 'jsonp' == dataType)\n                ))\n                settings.url = appendQuery(settings.url, '_=' + Date.now())\n\n            if ('jsonp' == dataType) {\n                if (!hasPlaceholder)\n                    settings.url = appendQuery(settings.url,\n                        settings.jsonp ? (settings.jsonp + '=?') : settings.jsonp === false ? '' : 'callback=?')\n                return $.ajaxJSONP(settings, deferred)\n            }\n\n            var mime = settings.accepts[dataType],\n                headers = { },\n                setHeader = function(name, value) { headers[name.toLowerCase()] = [name, value] },\n                protocol = /^([\\w-]+:)\\/\\//.test(settings.url) ? RegExp.$1 : window.location.protocol,\n                xhr = settings.xhr(),\n                nativeSetHeader = xhr.setRequestHeader,\n                abortTimeout\n\n            if (deferred) deferred.promise(xhr)\n\n            if (!settings.crossDomain) setHeader('X-Requested-With', 'XMLHttpRequest')\n            setHeader('Accept', mime || '*/*')\n            if (mime = settings.mimeType || mime) {\n                if (mime.indexOf(',') > -1) mime = mime.split(',', 2)[0]\n                xhr.overrideMimeType && xhr.overrideMimeType(mime)\n            }\n            if (settings.contentType || (settings.contentType !== false && settings.data && settings.type.toUpperCase() != 'GET'))\n                setHeader('Content-Type', settings.contentType || 'application/x-www-form-urlencoded')\n\n            if (settings.headers) for (name in settings.headers) setHeader(name, settings.headers[name])\n            xhr.setRequestHeader = setHeader\n\n            xhr.onreadystatechange = function(){\n                if (xhr.readyState == 4) {\n                    xhr.onreadystatechange = empty\n                    clearTimeout(abortTimeout)\n                    var result, error = false\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && protocol == 'file:')) {\n                        dataType = dataType || mimeToDataType(settings.mimeType || xhr.getResponseHeader('content-type'))\n\n                        if (xhr.responseType == 'arraybuffer' || xhr.responseType == 'blob')\n                            result = xhr.response\n                        else {\n                            result = xhr.responseText\n\n                            try {\n                                // http://perfectionkills.com/global-eval-what-are-the-options/\n                                // sanitize response accordingly if data filter callback provided\n                                result = ajaxDataFilter(result, dataType, settings)\n                                if (dataType == 'script')    (1,eval)(result)\n                                else if (dataType == 'xml')  result = xhr.responseXML\n                                else if (dataType == 'json') result = blankRE.test(result) ? null : $.parseJSON(result)\n                            } catch (e) { error = e }\n\n                            if (error) return ajaxError(error, 'parsererror', xhr, settings, deferred)\n                        }\n\n                        ajaxSuccess(result, xhr, settings, deferred)\n                    } else {\n                        ajaxError(xhr.statusText || null, xhr.status ? 'error' : 'abort', xhr, settings, deferred)\n                    }\n                }\n            }\n\n            if (ajaxBeforeSend(xhr, settings) === false) {\n                xhr.abort()\n                ajaxError(null, 'abort', xhr, settings, deferred)\n                return xhr\n            }\n\n            var async = 'async' in settings ? settings.async : true\n            xhr.open(settings.type, settings.url, async, settings.username, settings.password)\n\n            if (settings.xhrFields) for (name in settings.xhrFields) xhr[name] = settings.xhrFields[name]\n\n            for (name in headers) nativeSetHeader.apply(xhr, headers[name])\n\n            if (settings.timeout > 0) abortTimeout = setTimeout(function(){\n                xhr.onreadystatechange = empty\n                xhr.abort()\n                ajaxError(null, 'timeout', xhr, settings, deferred)\n            }, settings.timeout)\n\n            // avoid sending empty string (#319)\n            xhr.send(settings.data ? settings.data : null)\n            return xhr\n        }\n\n        // handle optional data/success arguments\n        function parseArguments(url, data, success, dataType) {\n            if ($.isFunction(data)) dataType = success, success = data, data = undefined\n            if (!$.isFunction(success)) dataType = success, success = undefined\n            return {\n                url: url\n                , data: data\n                , success: success\n                , dataType: dataType\n            }\n        }\n\n        $.get = function(/* url, data, success, dataType */){\n            return $.ajax(parseArguments.apply(null, arguments))\n        }\n\n        $.post = function(/* url, data, success, dataType */){\n            var options = parseArguments.apply(null, arguments)\n            options.type = 'POST'\n            return $.ajax(options)\n        }\n\n        $.getJSON = function(/* url, data, success */){\n            var options = parseArguments.apply(null, arguments)\n            options.dataType = 'json'\n            return $.ajax(options)\n        }\n\n        $.fn.load = function(url, data, success){\n            if (!this.length) return this\n            var self = this, parts = url.split(/\\s/), selector,\n                options = parseArguments(url, data, success),\n                callback = options.success\n            if (parts.length > 1) options.url = parts[0], selector = parts[1]\n            options.success = function(response){\n                self.html(selector ?\n                    $('<div>').html(response.replace(rscript, \"\")).find(selector)\n                    : response)\n                callback && callback.apply(self, arguments)\n            }\n            $.ajax(options)\n            return this\n        }\n\n        var escape = encodeURIComponent\n\n        function serialize(params, obj, traditional, scope){\n            var type, array = $.isArray(obj), hash = $.isPlainObject(obj)\n            $.each(obj, function(key, value) {\n                type = $.type(value)\n                if (scope) key = traditional ? scope :\n                scope + '[' + (hash || type == 'object' || type == 'array' ? key : '') + ']'\n                // handle data in serializeArray() format\n                if (!scope && array) params.add(value.name, value.value)\n                // recurse into nested objects\n                else if (type == \"array\" || (!traditional && type == \"object\"))\n                    serialize(params, value, traditional, key)\n                else params.add(key, value)\n            })\n        }\n\n        $.param = function(obj, traditional){\n            var params = []\n            params.add = function(key, value) {\n                if ($.isFunction(value)) value = value()\n                if (value == null) value = \"\"\n                this.push(escape(key) + '=' + escape(value))\n            }\n            serialize(params, obj, traditional)\n            return params.join('&').replace(/%20/g, '+')\n        }\n    })(Zepto)\n\n    ;(function($){\n        $.fn.serializeArray = function() {\n            var name, type, result = [],\n                add = function(value) {\n                    if (value.forEach) return value.forEach(add)\n                    result.push({ name: name, value: value })\n                }\n            if (this[0]) $.each(this[0].elements, function(_, field){\n                type = field.type, name = field.name\n                if (name && field.nodeName.toLowerCase() != 'fieldset' &&\n                    !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' &&\n                    ((type != 'radio' && type != 'checkbox') || field.checked))\n                    add($(field).val())\n            })\n            return result\n        }\n\n        $.fn.serialize = function(){\n            var result = []\n            this.serializeArray().forEach(function(elm){\n                result.push(encodeURIComponent(elm.name) + '=' + encodeURIComponent(elm.value))\n            })\n            return result.join('&')\n        }\n\n        $.fn.submit = function(callback) {\n            if (0 in arguments) this.bind('submit', callback)\n            else if (this.length) {\n                var event = $.Event('submit')\n                this.eq(0).trigger(event)\n                if (!event.isDefaultPrevented()) this.get(0).submit()\n            }\n            return this\n        }\n\n    })(Zepto)\n\n    ;(function(){\n        // getComputedStyle shouldn't freak out when called\n        // without a valid element as argument\n        try {\n            getComputedStyle(undefined)\n        } catch(e) {\n            var nativeGetComputedStyle = getComputedStyle\n            window.getComputedStyle = function(element, pseudoElement){\n                try {\n                    return nativeGetComputedStyle(element, pseudoElement)\n                } catch(e) {\n                    return null\n                }\n            }\n        }\n    })()\n    return Zepto\n}))\n\n\n/** WEBPACK FOOTER **\n ** ./test/zepto.js\n **/"],"sourceRoot":""}